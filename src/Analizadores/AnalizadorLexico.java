/* The following code was generated by JFlex 1.7.0 */

 package Analizadores;
import java.util.LinkedList;
import java_cup.runtime.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/saral/OneDrive/Documentos/GitHub/TFG/src/Analizadores/AnalizadorLexico.flex</tt>
 */
public class AnalizadorLexico implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int estado1 = 2;
  public static final int estado2 = 4;
  public static final int estado3 = 6;
  public static final int estado4 = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4, 4
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\113\1\114\1\116\1\116\1\115\22\0\1\35\1\0\1\105"+
    "\2\0\1\7\1\104\1\70\1\61\1\60\1\71\1\106\1\10\1\11"+
    "\1\12\1\44\1\6\1\6\1\6\7\6\1\33\1\5\1\75\1\103"+
    "\1\77\1\110\1\0\1\13\1\3\1\36\1\45\1\15\1\3\1\42"+
    "\1\3\1\34\2\3\1\17\1\42\1\24\3\3\1\43\1\25\1\3"+
    "\1\32\1\3\4\3\1\61\1\111\1\72\3\0\1\20\2\2\1\30"+
    "\1\26\3\2\1\27\2\2\1\16\1\37\1\23\1\21\2\2\1\112"+
    "\1\22\1\2\1\14\3\2\1\31\1\2\1\62\1\0\1\65\7\0"+
    "\1\116\32\0\1\57\11\0\1\76\1\67\2\0\1\100\1\0\1\101"+
    "\1\47\3\0\1\41\1\0\1\74\2\0\1\102\1\66\1\0\1\63"+
    "\1\0\1\107\1\0\1\4\1\40\6\0\1\4\3\0\1\4\3\0"+
    "\1\4\1\0\1\4\3\0\1\64\2\0\1\4\4\0\1\73\1\0"+
    "\1\1\2\0\1\55\1\51\3\0\1\1\3\0\1\1\3\0\1\1"+
    "\1\0\1\1\2\0\1\1\3\0\1\1\1\0\1\1\u02b4\0\1\46"+
    "\1\56\1\50\10\0\1\41\u0183\0\1\41\u1ad3\0\1\53\15\0\1\54"+
    "\5\0\1\116\1\116\370\0\1\52\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udeed\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\5\0\1\1\3\2\1\1\1\3\1\4\1\5\1\6"+
    "\1\7\1\10\16\2\1\1\3\2\1\11\1\2\1\12"+
    "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52"+
    "\1\1\2\53\1\54\1\55\1\56\3\57\1\56\1\60"+
    "\1\56\2\60\3\57\2\60\4\57\1\60\2\57\1\60"+
    "\3\57\1\61\1\62\1\63\3\2\2\0\5\2\1\0"+
    "\1\2\2\0\1\64\2\0\4\64\1\0\2\64\1\2"+
    "\3\64\1\2\1\0\1\64\5\2\1\0\3\57\2\0"+
    "\5\57\1\0\1\57\3\0\2\60\4\0\1\57\1\60"+
    "\1\57\1\60\1\0\1\60\4\57\4\2\2\0\2\2"+
    "\1\0\1\2\1\0\2\2\1\0\3\2\22\0\2\64"+
    "\3\2\2\0\1\60\3\57\1\0\2\60\2\57\1\0"+
    "\1\57\1\0\2\57\1\0\3\57\4\0\2\60\3\0"+
    "\2\60\4\0\1\60\2\0\1\60\1\0\1\60\5\0"+
    "\1\60\1\0\1\60\1\0\1\60\1\0\2\60\2\0"+
    "\1\60\1\0\2\60\2\57\2\60\3\57\2\60\4\57"+
    "\1\60\2\57\1\60\1\0\1\60\5\0\1\60\1\0"+
    "\1\57\2\0\1\60\1\0\2\60\2\0\1\60\1\0"+
    "\1\60\1\0\3\2\2\0\2\64\3\0\5\2\1\0"+
    "\1\2\1\64\5\0\1\64\1\0\4\2\1\0\1\60"+
    "\2\57\1\60\1\0\2\60\3\0\5\57\1\0\3\60"+
    "\1\57\1\60\2\0\1\60\1\57\1\60\1\0\2\60"+
    "\5\0\1\60\3\57\1\60\2\0\1\2\2\0\1\2"+
    "\4\0\1\64\2\0\1\64\1\2\1\60\1\0\1\57"+
    "\2\0\1\57\2\60\1\0\1\60\1\0\1\60\1\57"+
    "\2\0\1\60\1\0\2\2\1\64\1\0\3\2\2\60"+
    "\2\57\1\60\1\0\2\60\1\57\1\60\5\57\2\60"+
    "\1\2\1\64\2\2\1\0\2\2\1\57\1\0\2\57"+
    "\3\60\2\2\1\0\2\2\1\0\1\57\1\60\1\0"+
    "\1\57\1\2\1\64\1\0\12\2\1\57\1\60\1\57"+
    "\2\60\2\57\1\60\1\57\2\2\1\57\1\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[484];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\117\0\236\0\355\0\u013c\0\u018b\0\u01da\0\u0229"+
    "\0\u0278\0\u0278\0\u018b\0\u02c7\0\u018b\0\u018b\0\u0316\0\u018b"+
    "\0\u0365\0\u03b4\0\u0403\0\u0452\0\u04a1\0\u04f0\0\u053f\0\u058e"+
    "\0\u05dd\0\u062c\0\u067b\0\u06ca\0\u0719\0\u0768\0\u07b7\0\u0806"+
    "\0\u0855\0\u08a4\0\u018b\0\u08f3\0\u018b\0\u018b\0\u018b\0\u018b"+
    "\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b"+
    "\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b"+
    "\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b"+
    "\0\u018b\0\u018b\0\u018b\0\u018b\0\u018b\0\u0942\0\u018b\0\u0991"+
    "\0\u018b\0\u018b\0\u018b\0\u09e0\0\u0a2f\0\u0a7e\0\u0a7e\0\u0acd"+
    "\0\u0b1c\0\u0b6b\0\u0bba\0\u0c09\0\u0c58\0\u0ca7\0\u0cf6\0\u0d45"+
    "\0\u0d94\0\u0de3\0\u0e32\0\u0e81\0\u0ed0\0\u0f1f\0\u0f6e\0\u0fbd"+
    "\0\u100c\0\u105b\0\u10aa\0\u018b\0\u018b\0\u018b\0\u10f9\0\u1148"+
    "\0\u018b\0\u1197\0\u11e6\0\u1235\0\u11e6\0\u1284\0\u12d3\0\u1322"+
    "\0\u1371\0\u13c0\0\u140f\0\u145e\0\u018b\0\u14ad\0\u14fc\0\u154b"+
    "\0\u159a\0\u15e9\0\u1638\0\u1687\0\u1371\0\u13c0\0\u16d6\0\u1725"+
    "\0\u1197\0\u11e6\0\u1774\0\u13c0\0\u17c3\0\u1812\0\u1861\0\u18b0"+
    "\0\u18ff\0\u194e\0\u199d\0\u19ec\0\u1a3b\0\u018b\0\u1a8a\0\u1ad9"+
    "\0\u1b28\0\u1ad9\0\u1b77\0\u1bc6\0\u1c15\0\u1c64\0\u1cb3\0\u1d02"+
    "\0\u1d51\0\u1da0\0\u1def\0\u1e3e\0\u1e8d\0\u1edc\0\u1f2b\0\u1f7a"+
    "\0\u1fc9\0\u2018\0\u2067\0\u20b6\0\u1cb3\0\u2105\0\u2154\0\u21a3"+
    "\0\u21f2\0\u2241\0\u2290\0\u22df\0\u232e\0\u1197\0\u237d\0\u23cc"+
    "\0\u241b\0\u246a\0\u24b9\0\u2508\0\u2557\0\u25a6\0\u25f5\0\u2644"+
    "\0\u2693\0\u26e2\0\u2644\0\u2731\0\u2780\0\u27cf\0\u281e\0\u286d"+
    "\0\u28bc\0\u290b\0\u295a\0\u29a9\0\u29f8\0\u2a47\0\u2a96\0\u2ae5"+
    "\0\u2b34\0\u2b83\0\u2bd2\0\u2c21\0\u2c70\0\u24b9\0\u2cbf\0\u290b"+
    "\0\u2d0e\0\u2d5d\0\u2dac\0\u2dfb\0\u2e4a\0\u2e99\0\u2ee8\0\u1a8a"+
    "\0\u2f37\0\u2f86\0\u2fd5\0\u3024\0\u3073\0\u30c2\0\u3111\0\u3160"+
    "\0\u31af\0\u31fe\0\u324d\0\u329c\0\u32eb\0\u324d\0\u333a\0\u3389"+
    "\0\u33d8\0\u0b1c\0\u3427\0\u3476\0\u34c5\0\u3514\0\u3563\0\u35b2"+
    "\0\u3601\0\u3650\0\u369f\0\u36ee\0\u373d\0\u378c\0\u37db\0\u382a"+
    "\0\u3879\0\u38c8\0\u3917\0\u3966\0\u39b5\0\u3a04\0\u3a53\0\u3aa2"+
    "\0\u3af1\0\u3b40\0\u3b8f\0\u3bde\0\u3c2d\0\u3c7c\0\u3ccb\0\u3d1a"+
    "\0\u3d69\0\u3db8\0\u3e07\0\u3e56\0\u3ea5\0\u3ef4\0\u3f43\0\u3f92"+
    "\0\u3fe1\0\u4030\0\u407f\0\u40ce\0\u411d\0\u416c\0\u41bb\0\u420a"+
    "\0\u4259\0\u42a8\0\u42f7\0\u4346\0\u4395\0\u43e4\0\u4433\0\u4482"+
    "\0\u44d1\0\u4520\0\u456f\0\u45be\0\u460d\0\u465c\0\u46ab\0\u46fa"+
    "\0\u1da0\0\u4749\0\u4798\0\u47e7\0\u4836\0\u4885\0\u48d4\0\u4923"+
    "\0\u4972\0\u49c1\0\u4a10\0\u4a5f\0\u4aae\0\u4afd\0\u140f\0\u4b4c"+
    "\0\u4b9b\0\u241b\0\u4bea\0\u14fc\0\u4c39\0\u2693\0\u4c88\0\u4cd7"+
    "\0\u4c39\0\u4d26\0\u4d75\0\u4dc4\0\u15e9\0\u4e13\0\u4e62\0\u4eb1"+
    "\0\u4f00\0\u4e62\0\u4f4f\0\u4f9e\0\u4fed\0\u503c\0\u508b\0\u28bc"+
    "\0\u50da\0\u5129\0\u5178\0\u51c7\0\u1d02\0\u5216\0\u5265\0\u3024"+
    "\0\u52b4\0\u5303\0\u5352\0\u329c\0\u53a1\0\u53f0\0\u5352\0\u543f"+
    "\0\u548e\0\u54dd\0\u552c\0\u557b\0\u55ca\0\u5619\0\u5668\0\u56b7"+
    "\0\u5706\0\u5755\0\u57a4\0\u552c\0\u57f3\0\u5842\0\u5891\0\u58e0"+
    "\0\u592f\0\u597e\0\u59cd\0\u5a1c\0\u5a6b\0\u5aba\0\u5b09\0\u3389"+
    "\0\u5b58\0\u5ba7\0\u5bf6\0\u5c45\0\u5c94\0\u5ce3\0\u5d32\0\u5d81"+
    "\0\u5dd0\0\u5e1f\0\u5e6e\0\u5ebd\0\u5e6e\0\u5f0c\0\u5f5b\0\u5faa"+
    "\0\u5ff9\0\u6048\0\u6097\0\u60e6\0\u6135\0\u6184\0\u61d3\0\u6222"+
    "\0\u6271\0\u62c0\0\u630f\0\u635e\0\u63ad\0\u1f2b\0\u63fc\0\u644b"+
    "\0\u649a\0\u64e9\0\u6538\0\u6587\0\u65d6\0\u6625\0\u6674\0\u66c3"+
    "\0\u6712\0\u6761\0\u67b0\0\u67ff\0\u684e\0\u689d\0\u68ec\0\u693b"+
    "\0\u698a\0\u69d9\0\u6a28\0\u6a77\0\u6ac6\0\u6b15\0\u6b64\0\u6bb3"+
    "\0\u6c02\0\u6c51\0\u6ca0\0\u6cef\0\u6d3e\0\u6d8d\0\u6ddc\0\u6e2b"+
    "\0\u6e7a\0\u6ec9\0\u6f18\0\u6f67\0\u6fb6\0\u7005\0\u7054\0\u70a3"+
    "\0\u70f2\0\u7141\0\u6d3e\0\u5d32\0\u5f5b\0\u6e7a\0\u7190\0\u71df"+
    "\0\u6f67\0\u6184\0\u722e\0\u727d\0\u72cc\0\u731b\0\u736a\0\u73b9"+
    "\0\u7408\0\u7457\0\u74a6\0\u74f5\0\u7544\0\u7593\0\u75e2\0\u7631"+
    "\0\u7680\0\u76cf\0\u771e\0\u776d\0\u77bc\0\u780b\0\u785a\0\u78a9"+
    "\0\u78f8\0\u7947\0\u5706\0\u7996";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[484];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\10"+
    "\1\35\1\27\1\36\1\13\1\37\1\13\1\11\1\40"+
    "\1\41\1\42\2\11\1\43\1\44\1\45\1\46\1\47"+
    "\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57"+
    "\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67"+
    "\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77"+
    "\1\100\1\101\1\102\1\103\1\104\1\105\1\6\1\13"+
    "\1\106\1\10\1\107\1\13\1\110\1\0\11\111\1\13"+
    "\47\111\1\112\35\111\1\113\1\114\1\115\1\116\1\117"+
    "\1\113\1\120\2\113\1\121\1\113\1\122\1\123\1\124"+
    "\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134"+
    "\1\135\1\115\1\136\1\130\1\137\1\113\1\140\1\113"+
    "\1\116\1\141\2\142\2\116\1\113\1\143\44\113\1\115"+
    "\64\113\1\144\11\113\1\144\24\113\5\145\1\146\2\145"+
    "\3\146\20\145\1\146\1\145\1\146\6\145\1\146\13\145"+
    "\1\146\33\145\1\146\2\145\120\0\2\147\2\150\1\0"+
    "\1\151\2\0\1\152\1\153\1\150\1\147\1\150\1\147"+
    "\1\150\4\147\2\150\4\147\1\150\1\0\1\150\1\0"+
    "\1\150\1\147\2\0\2\150\1\0\1\150\44\0\1\147"+
    "\5\0\1\147\1\154\2\150\1\0\1\151\2\0\1\152"+
    "\1\155\1\150\1\154\1\150\1\154\1\150\4\154\2\150"+
    "\4\154\1\150\1\0\1\150\1\0\1\150\1\154\2\0"+
    "\2\150\1\0\1\150\44\0\1\154\5\0\2\156\2\157"+
    "\1\0\1\160\2\0\1\161\1\162\1\157\1\156\1\157"+
    "\1\156\1\157\4\156\2\157\4\156\1\157\1\0\1\157"+
    "\1\163\1\157\1\156\2\0\2\157\1\164\1\157\44\0"+
    "\1\156\11\0\1\165\1\166\1\167\1\170\1\171\1\172"+
    "\20\0\1\165\1\0\1\173\56\0\1\165\5\0\2\174"+
    "\6\0\1\174\1\0\1\174\1\0\1\174\4\0\2\174"+
    "\4\0\1\174\1\0\1\174\1\0\1\174\3\0\2\174"+
    "\1\0\1\174\52\0\2\156\2\157\1\165\1\160\1\0"+
    "\1\165\1\175\1\176\1\157\1\156\1\157\1\177\1\157"+
    "\4\156\2\157\4\156\1\157\1\165\1\157\1\200\1\157"+
    "\1\156\2\0\2\157\1\164\1\157\44\0\1\156\1\0"+
    "\1\165\3\0\1\147\1\154\2\150\1\165\1\151\1\0"+
    "\1\165\1\201\1\202\1\150\1\154\1\150\1\154\1\150"+
    "\3\154\1\203\2\150\4\154\1\150\1\165\1\150\1\173"+
    "\1\150\1\154\2\0\2\150\1\0\1\150\44\0\1\154"+
    "\1\0\1\165\3\0\2\156\2\157\1\0\1\160\2\0"+
    "\1\161\1\162\1\157\1\156\1\157\1\177\1\157\2\156"+
    "\2\177\2\157\4\156\1\157\1\0\1\157\1\163\1\157"+
    "\1\156\2\0\2\157\1\164\1\157\44\0\1\156\5\0"+
    "\1\147\1\154\2\150\1\0\1\151\2\0\1\152\1\155"+
    "\1\150\1\154\1\150\1\154\1\150\2\203\2\154\2\150"+
    "\1\203\3\154\1\150\1\0\1\150\1\0\1\150\1\154"+
    "\2\0\2\150\1\0\1\150\44\0\1\154\5\0\2\156"+
    "\2\157\1\0\1\160\2\0\1\161\1\204\1\157\1\156"+
    "\1\157\1\156\1\157\1\177\3\156\2\157\1\177\3\156"+
    "\1\157\1\0\1\157\1\163\1\157\1\156\2\0\2\157"+
    "\1\0\1\157\44\0\1\156\5\0\1\147\1\154\2\150"+
    "\1\165\1\151\1\0\1\165\1\201\1\202\1\150\1\154"+
    "\1\150\1\203\1\150\4\154\2\150\4\154\1\150\1\165"+
    "\1\150\1\173\1\150\1\154\2\0\2\150\1\0\1\150"+
    "\44\0\1\154\1\0\1\165\3\0\1\147\1\154\2\150"+
    "\1\165\1\151\1\0\1\165\1\201\1\202\1\150\1\154"+
    "\1\150\1\154\1\150\4\154\2\150\4\154\1\150\1\165"+
    "\1\150\1\173\1\150\1\154\2\0\2\150\1\0\1\150"+
    "\44\0\1\154\1\0\1\165\3\0\1\147\1\154\2\150"+
    "\1\0\1\151\2\0\1\152\1\155\1\150\1\203\1\150"+
    "\1\154\1\150\4\154\2\150\2\203\2\154\1\150\1\0"+
    "\1\150\1\0\1\150\1\154\2\0\2\150\1\0\1\150"+
    "\44\0\1\154\5\0\1\147\1\154\2\150\1\0\1\151"+
    "\2\0\1\152\1\155\1\150\1\154\1\150\1\154\1\150"+
    "\1\154\1\203\2\154\2\150\1\154\1\203\2\154\1\150"+
    "\1\0\1\150\1\0\1\150\1\154\2\0\2\150\1\0"+
    "\1\150\44\0\1\154\5\0\2\156\2\157\1\0\1\160"+
    "\2\0\1\161\1\162\1\157\1\156\1\157\1\156\1\157"+
    "\1\156\1\177\2\156\2\157\1\156\1\177\2\156\1\157"+
    "\1\0\1\157\1\163\1\157\1\156\2\0\2\157\1\164"+
    "\1\157\44\0\1\156\5\0\2\156\2\157\1\0\1\160"+
    "\2\0\1\161\1\162\1\157\1\177\1\157\1\156\1\157"+
    "\4\156\2\157\2\177\2\156\1\157\1\0\1\157\1\163"+
    "\1\157\1\156\2\0\2\157\1\164\1\157\44\0\1\156"+
    "\5\0\1\147\1\154\2\150\1\165\1\151\1\0\1\165"+
    "\1\201\1\202\1\150\1\154\1\150\1\203\1\150\3\154"+
    "\1\203\2\150\4\154\1\150\1\165\1\150\1\173\1\150"+
    "\1\154\2\0\2\150\1\0\1\150\44\0\1\154\1\0"+
    "\1\165\3\0\1\147\1\154\2\150\1\0\1\151\2\0"+
    "\1\152\1\155\1\150\1\154\1\150\1\154\1\150\4\154"+
    "\2\150\1\203\3\154\1\150\1\0\1\150\1\0\1\150"+
    "\1\154\2\0\2\150\1\0\1\150\44\0\1\154\5\0"+
    "\2\156\2\157\1\0\1\160\2\0\1\161\1\162\1\157"+
    "\1\156\1\157\1\156\1\157\3\156\1\177\2\157\4\156"+
    "\1\157\1\0\1\157\1\163\1\157\1\156\2\0\2\157"+
    "\1\0\1\157\44\0\1\156\5\0\2\156\2\157\1\165"+
    "\1\160\1\0\1\165\1\205\1\176\1\157\1\156\1\157"+
    "\1\156\1\157\4\156\2\157\4\156\1\157\1\165\1\206"+
    "\1\200\1\157\1\156\2\0\2\157\1\164\1\157\44\0"+
    "\1\156\1\0\1\165\3\0\1\207\1\210\2\150\1\0"+
    "\1\151\2\0\1\152\1\155\1\150\1\210\1\150\1\210"+
    "\1\150\4\210\2\150\4\210\1\150\1\0\1\150\1\0"+
    "\1\150\1\210\2\0\2\150\1\0\1\150\44\0\1\210"+
    "\5\0\2\42\2\211\6\0\1\211\1\42\1\211\1\42"+
    "\1\211\4\42\2\211\4\42\1\211\1\0\1\211\1\0"+
    "\1\211\1\42\2\0\2\211\1\0\1\211\41\0\1\13"+
    "\2\0\1\42\5\0\2\42\2\211\6\0\1\211\1\42"+
    "\1\211\1\42\1\211\4\42\2\211\4\42\1\211\1\0"+
    "\1\211\1\0\1\211\1\42\2\0\2\211\1\0\1\211"+
    "\44\0\1\42\5\0\2\212\2\157\1\0\1\160\2\0"+
    "\1\161\1\162\1\157\1\212\1\157\1\212\1\157\4\212"+
    "\2\157\4\212\1\157\1\0\1\157\1\163\1\157\1\212"+
    "\2\0\2\157\1\164\1\157\44\0\1\212\27\0\1\13"+
    "\66\0\1\213\120\0\1\107\3\0\2\214\2\215\1\0"+
    "\1\216\2\0\1\217\1\220\1\215\1\214\1\215\1\214"+
    "\1\215\4\214\2\215\4\214\1\215\1\0\1\215\1\0"+
    "\1\215\1\214\2\0\2\215\1\0\1\215\44\0\1\214"+
    "\5\0\1\214\1\221\2\215\1\0\1\216\2\0\1\217"+
    "\1\222\1\215\1\221\1\215\1\221\1\215\4\221\2\215"+
    "\4\221\1\215\1\0\1\215\1\0\1\215\1\221\2\0"+
    "\2\215\1\0\1\215\44\0\1\221\5\0\2\223\2\224"+
    "\1\0\1\225\2\0\1\226\1\227\1\224\1\223\1\224"+
    "\1\223\1\224\4\223\2\224\4\223\1\224\1\0\1\224"+
    "\1\230\1\224\1\223\2\0\2\224\1\231\1\224\44\0"+
    "\1\223\11\0\1\232\1\233\1\234\1\232\1\235\1\232"+
    "\20\0\1\232\1\0\1\236\56\0\1\232\5\0\2\237"+
    "\6\0\1\237\1\0\1\237\1\0\1\237\4\0\2\237"+
    "\4\0\1\237\1\0\1\237\1\0\1\237\3\0\2\237"+
    "\1\0\1\237\52\0\2\223\2\224\1\232\1\225\1\0"+
    "\1\232\1\240\1\241\1\224\1\223\1\224\1\242\1\224"+
    "\4\223\2\224\4\223\1\224\1\232\1\224\1\236\1\224"+
    "\1\223\2\0\2\224\1\231\1\224\44\0\1\223\1\0"+
    "\1\232\3\0\1\214\1\221\2\215\1\232\1\216\1\0"+
    "\2\232\1\243\1\215\1\221\1\215\1\221\1\215\3\221"+
    "\1\244\2\215\4\221\1\215\1\232\1\215\1\236\1\215"+
    "\1\221\2\0\2\215\1\0\1\215\44\0\1\221\1\0"+
    "\1\232\3\0\2\223\2\224\1\0\1\225\2\0\1\226"+
    "\1\227\1\224\1\223\1\224\1\242\1\224\2\223\2\242"+
    "\2\224\4\223\1\224\1\0\1\224\1\230\1\224\1\223"+
    "\2\0\2\224\1\231\1\224\44\0\1\223\5\0\1\214"+
    "\1\221\2\215\1\0\1\216\2\0\1\217\1\222\1\215"+
    "\1\221\1\215\1\221\1\215\2\244\2\221\2\215\1\244"+
    "\3\221\1\215\1\0\1\215\1\0\1\215\1\221\2\0"+
    "\2\215\1\0\1\215\44\0\1\221\5\0\2\223\2\224"+
    "\1\0\1\225\2\0\1\226\1\245\1\224\1\223\1\224"+
    "\1\223\1\224\1\242\3\223\2\224\1\242\3\223\1\224"+
    "\1\0\1\224\1\230\1\224\1\223\2\0\2\224\1\0"+
    "\1\224\44\0\1\223\5\0\1\214\1\221\2\215\1\232"+
    "\1\216\1\0\2\232\1\243\1\215\1\221\1\215\1\244"+
    "\1\215\4\221\2\215\4\221\1\215\1\232\1\215\1\236"+
    "\1\215\1\221\2\0\2\215\1\0\1\215\44\0\1\221"+
    "\1\0\1\232\3\0\1\214\1\221\2\215\1\232\1\216"+
    "\1\0\2\232\1\243\1\215\1\221\1\215\1\221\1\215"+
    "\4\221\2\215\4\221\1\215\1\232\1\215\1\236\1\215"+
    "\1\221\2\0\2\215\1\0\1\215\44\0\1\221\1\0"+
    "\1\232\3\0\1\214\1\221\2\215\1\0\1\216\2\0"+
    "\1\217\1\222\1\215\1\244\1\215\1\221\1\215\4\221"+
    "\2\215\2\244\2\221\1\215\1\0\1\215\1\0\1\215"+
    "\1\221\2\0\2\215\1\0\1\215\44\0\1\221\5\0"+
    "\1\214\1\221\2\215\1\0\1\216\2\0\1\217\1\222"+
    "\1\215\1\221\1\215\1\221\1\215\1\221\1\244\2\221"+
    "\2\215\1\221\1\244\2\221\1\215\1\0\1\215\1\0"+
    "\1\215\1\221\2\0\2\215\1\0\1\215\44\0\1\221"+
    "\5\0\2\223\2\224\1\0\1\225\2\0\1\226\1\227"+
    "\1\224\1\223\1\224\1\223\1\224\1\223\1\242\2\223"+
    "\2\224\1\223\1\242\2\223\1\224\1\0\1\224\1\230"+
    "\1\224\1\223\2\0\2\224\1\231\1\224\44\0\1\223"+
    "\5\0\2\223\2\224\1\0\1\225\2\0\1\226\1\227"+
    "\1\224\1\242\1\224\1\223\1\224\4\223\2\224\2\242"+
    "\2\223\1\224\1\0\1\224\1\230\1\224\1\223\2\0"+
    "\2\224\1\231\1\224\44\0\1\223\5\0\1\214\1\221"+
    "\2\215\1\232\1\216\1\0\2\232\1\243\1\215\1\221"+
    "\1\215\1\244\1\215\3\221\1\244\2\215\4\221\1\215"+
    "\1\232\1\215\1\236\1\215\1\221\2\0\2\215\1\0"+
    "\1\215\44\0\1\221\1\0\1\232\3\0\1\214\1\221"+
    "\2\215\1\0\1\216\2\0\1\217\1\222\1\215\1\221"+
    "\1\215\1\221\1\215\4\221\2\215\1\244\3\221\1\215"+
    "\1\0\1\215\1\0\1\215\1\221\2\0\2\215\1\0"+
    "\1\215\44\0\1\221\5\0\2\223\2\224\1\0\1\225"+
    "\2\0\1\226\1\227\1\224\1\223\1\224\1\223\1\224"+
    "\3\223\1\242\2\224\4\223\1\224\1\0\1\224\1\230"+
    "\1\224\1\223\2\0\2\224\1\0\1\224\44\0\1\223"+
    "\5\0\2\223\2\224\1\232\1\225\1\0\1\232\1\240"+
    "\1\241\1\224\1\223\1\224\1\223\1\224\4\223\2\224"+
    "\4\223\1\224\1\232\1\246\1\236\1\224\1\223\2\0"+
    "\2\224\1\231\1\224\44\0\1\223\1\0\1\232\3\0"+
    "\1\247\1\250\2\215\1\0\1\216\2\0\1\217\1\222"+
    "\1\215\1\250\1\215\1\250\1\215\4\250\2\215\4\250"+
    "\1\215\1\0\1\215\1\0\1\215\1\250\2\0\2\215"+
    "\1\0\1\215\44\0\1\250\5\0\2\142\2\251\6\0"+
    "\1\251\1\142\1\251\1\142\1\251\4\142\2\251\4\142"+
    "\1\251\1\0\1\251\1\0\1\251\1\142\2\0\2\251"+
    "\1\0\1\251\44\0\1\142\5\0\2\252\2\224\1\0"+
    "\1\225\2\0\1\226\1\227\1\224\1\252\1\224\1\252"+
    "\1\224\4\252\2\224\4\252\1\224\1\0\1\224\1\230"+
    "\1\224\1\252\2\0\2\224\1\231\1\224\44\0\1\252"+
    "\5\0\2\253\2\254\1\0\1\151\4\0\1\254\1\253"+
    "\1\254\1\253\1\254\4\253\2\254\4\253\1\254\1\0"+
    "\1\254\1\0\1\254\1\253\2\0\2\254\1\0\1\254"+
    "\44\0\1\253\5\0\2\151\2\255\1\0\1\151\4\0"+
    "\1\255\1\151\1\255\1\151\1\255\4\151\2\255\4\151"+
    "\1\255\1\0\1\255\1\0\1\255\1\151\2\0\2\255"+
    "\1\0\1\255\44\0\1\151\40\0\1\256\63\0\2\257"+
    "\11\0\1\257\1\0\1\257\1\0\4\257\2\0\4\257"+
    "\3\0\1\151\1\0\1\257\52\0\1\257\5\0\2\253"+
    "\2\254\1\0\1\151\3\0\1\151\1\254\1\253\1\254"+
    "\1\253\1\254\4\253\2\254\4\253\1\254\1\0\1\254"+
    "\1\0\1\254\1\253\2\0\2\254\1\0\1\254\44\0"+
    "\1\253\5\0\2\260\2\261\1\0\1\262\2\0\1\263"+
    "\1\151\1\264\1\260\1\261\1\260\1\261\4\260\2\261"+
    "\4\260\1\261\1\0\1\261\1\265\1\261\1\260\2\0"+
    "\2\261\1\0\1\261\44\0\1\260\5\0\2\151\2\266"+
    "\1\0\1\160\2\0\1\161\1\0\1\266\1\151\1\266"+
    "\1\151\1\266\4\151\2\266\4\151\1\266\1\0\1\266"+
    "\1\163\1\266\1\151\2\0\2\266\1\0\1\266\44\0"+
    "\1\151\7\0\2\267\1\0\1\160\3\0\1\270\1\267"+
    "\1\0\1\267\1\0\1\267\4\0\2\267\4\0\1\267"+
    "\1\0\1\267\1\270\1\267\3\0\2\267\1\0\1\267"+
    "\52\0\2\271\2\272\1\0\1\273\4\0\1\272\1\271"+
    "\1\272\1\271\1\272\4\271\2\272\4\271\1\272\1\0"+
    "\1\272\1\0\1\272\1\271\2\0\2\272\1\0\1\272"+
    "\44\0\1\271\7\0\2\274\6\0\1\274\1\0\1\274"+
    "\1\0\1\274\4\0\2\274\4\0\1\274\1\0\1\274"+
    "\1\0\1\274\3\0\2\274\1\0\1\274\57\0\1\151"+
    "\113\0\2\151\6\0\1\151\1\0\1\151\6\0\2\151"+
    "\4\0\1\151\1\0\1\151\1\0\1\151\3\0\2\151"+
    "\1\0\1\151\56\0\1\165\1\166\1\167\1\170\2\172"+
    "\20\0\1\165\1\0\1\173\56\0\1\165\7\0\1\165"+
    "\2\0\3\165\20\0\1\165\1\0\1\173\56\0\1\165"+
    "\10\0\1\275\113\0\1\276\2\0\1\277\4\0\1\276"+
    "\1\0\1\276\1\0\1\276\4\0\2\276\4\0\1\276"+
    "\1\0\1\276\1\0\1\276\3\0\2\276\1\0\1\276"+
    "\57\0\1\277\111\0\2\300\2\301\1\0\1\302\2\0"+
    "\1\303\1\0\1\301\1\304\1\301\1\305\1\301\1\306"+
    "\1\307\1\310\1\311\2\301\1\312\1\300\1\313\1\307"+
    "\1\301\1\0\1\314\1\0\1\301\1\300\2\0\2\301"+
    "\1\0\1\301\44\0\1\300\5\0\2\315\11\0\1\315"+
    "\1\0\1\315\1\0\4\315\2\0\4\315\5\0\1\315"+
    "\52\0\1\315\5\0\2\260\2\261\1\165\1\262\1\0"+
    "\1\165\1\316\1\165\1\264\1\260\1\261\1\260\1\261"+
    "\4\260\2\261\4\260\1\261\1\165\1\261\1\317\1\261"+
    "\1\260\2\0\2\261\1\0\1\261\44\0\1\260\1\0"+
    "\1\165\3\0\2\300\2\301\1\0\1\320\2\0\1\303"+
    "\1\0\1\301\1\304\1\301\1\305\1\301\1\306\1\307"+
    "\1\310\1\311\2\301\1\312\1\300\1\313\1\307\1\301"+
    "\1\0\1\314\1\0\1\301\1\300\2\0\2\301\1\0"+
    "\1\301\44\0\1\300\5\0\2\253\2\254\1\165\1\151"+
    "\1\0\3\165\1\254\1\253\1\254\1\253\1\254\4\253"+
    "\2\254\4\253\1\254\1\165\1\254\1\173\1\254\1\253"+
    "\2\0\2\254\1\0\1\254\44\0\1\253\1\0\1\165"+
    "\3\0\2\271\2\272\1\0\1\273\4\0\1\272\1\271"+
    "\1\272\1\271\1\272\4\271\2\272\4\271\1\272\1\0"+
    "\1\321\1\0\1\272\1\271\2\0\2\272\1\0\1\272"+
    "\44\0\1\271\5\0\2\151\2\266\1\165\1\160\1\0"+
    "\1\165\1\205\1\165\1\266\1\151\1\266\1\151\1\266"+
    "\4\151\2\266\4\151\1\266\1\165\1\322\1\200\1\266"+
    "\1\151\2\0\2\266\1\0\1\266\44\0\1\151\1\0"+
    "\1\165\3\0\2\253\2\150\1\0\1\151\4\0\1\150"+
    "\1\253\1\150\1\253\1\150\4\253\2\150\4\253\1\150"+
    "\1\0\1\150\1\0\1\150\1\253\2\0\2\150\1\0"+
    "\1\150\44\0\1\253\5\0\2\253\2\150\1\0\1\151"+
    "\3\0\1\151\1\150\1\253\1\150\1\253\1\150\4\253"+
    "\2\150\4\253\1\150\1\0\1\150\1\0\1\150\1\253"+
    "\2\0\2\150\1\0\1\150\44\0\1\253\7\0\2\211"+
    "\6\0\1\211\1\0\1\211\1\0\1\211\4\0\2\211"+
    "\4\0\1\211\1\0\1\211\1\0\1\211\3\0\2\211"+
    "\1\0\1\211\52\0\2\260\2\261\1\0\1\262\2\0"+
    "\1\263\1\151\1\264\1\260\1\261\1\260\1\261\4\260"+
    "\2\261\4\260\1\261\1\0\1\261\1\265\1\261\1\260"+
    "\2\0\2\261\1\323\1\261\44\0\1\260\115\0\1\324"+
    "\6\0\2\325\2\326\1\0\1\216\4\0\1\326\1\325"+
    "\1\326\1\325\1\326\4\325\2\326\4\325\1\326\1\0"+
    "\1\326\1\0\1\326\1\325\2\0\2\326\1\0\1\326"+
    "\44\0\1\325\5\0\2\216\2\327\1\0\1\216\4\0"+
    "\1\327\1\216\1\327\1\216\1\327\4\216\2\327\4\216"+
    "\1\327\1\0\1\327\1\0\1\327\1\216\2\0\2\327"+
    "\1\0\1\327\44\0\1\216\40\0\1\330\63\0\2\331"+
    "\11\0\1\331\1\0\1\331\1\0\4\331\2\0\4\331"+
    "\3\0\1\216\1\0\1\331\52\0\1\331\5\0\1\325"+
    "\1\332\2\326\1\0\1\216\3\0\1\216\1\326\1\332"+
    "\1\326\1\332\1\326\4\332\2\326\4\332\1\326\1\0"+
    "\1\326\1\0\1\326\1\332\2\0\2\326\1\0\1\326"+
    "\44\0\1\332\5\0\2\333\2\334\1\0\1\335\2\0"+
    "\1\336\1\216\1\337\1\333\1\334\1\333\1\334\4\333"+
    "\2\334\4\333\1\334\1\0\1\334\1\340\1\334\1\333"+
    "\2\0\2\334\1\0\1\334\44\0\1\333\5\0\2\216"+
    "\2\341\1\0\1\225\2\0\1\226\1\0\1\341\1\216"+
    "\1\341\1\216\1\341\4\216\2\341\4\216\1\341\1\0"+
    "\1\341\1\230\1\341\1\216\2\0\2\341\1\0\1\341"+
    "\44\0\1\216\7\0\2\342\1\0\1\225\3\0\1\343"+
    "\1\342\1\0\1\342\1\0\1\342\4\0\2\342\4\0"+
    "\1\342\1\0\1\342\1\343\1\342\3\0\2\342\1\0"+
    "\1\342\52\0\2\344\2\345\1\0\1\346\4\0\1\345"+
    "\1\344\1\345\1\344\1\345\4\344\2\345\4\344\1\345"+
    "\1\0\1\345\1\0\1\345\1\344\2\0\2\345\1\0"+
    "\1\345\44\0\1\344\7\0\2\347\6\0\1\347\1\0"+
    "\1\347\1\0\1\347\4\0\2\347\4\0\1\347\1\0"+
    "\1\347\1\0\1\347\3\0\2\347\1\0\1\347\57\0"+
    "\1\216\113\0\2\216\6\0\1\216\1\0\1\216\6\0"+
    "\2\216\4\0\1\216\1\0\1\216\1\0\1\216\3\0"+
    "\2\216\1\0\1\216\52\0\2\350\2\351\1\0\1\233"+
    "\2\0\1\352\1\0\1\353\1\354\1\355\1\356\1\357"+
    "\1\360\1\361\1\362\1\363\1\364\1\365\1\366\1\350"+
    "\1\367\1\361\1\370\1\0\1\371\1\0\1\351\1\350"+
    "\2\0\2\351\1\0\1\351\44\0\1\350\11\0\1\232"+
    "\1\233\1\234\3\232\20\0\1\232\1\0\1\236\56\0"+
    "\1\232\7\0\1\232\2\0\3\232\20\0\1\232\1\0"+
    "\1\236\56\0\1\232\3\0\2\350\1\372\1\351\1\0"+
    "\1\233\2\0\1\352\1\0\1\373\1\354\1\374\1\356"+
    "\1\375\1\360\1\361\1\362\1\363\1\376\1\377\1\366"+
    "\1\350\1\367\1\361\1\u0100\1\0\1\u0101\1\0\1\372"+
    "\1\350\2\0\2\372\1\0\1\372\44\0\1\350\5\0"+
    "\2\u0102\2\350\1\0\1\u0103\2\0\1\u0104\1\0\1\350"+
    "\1\u0105\1\350\1\u0106\1\350\1\u0107\1\u0108\1\u0109\1\u010a"+
    "\2\350\1\u010b\1\u0102\1\u010c\1\u0108\1\350\1\0\1\u010d"+
    "\1\0\1\350\1\u0102\2\0\2\350\1\0\1\350\44\0"+
    "\1\u0102\5\0\2\u010e\11\0\1\u010e\1\0\1\u010e\1\0"+
    "\4\u010e\2\0\4\u010e\5\0\1\u010e\52\0\1\u010e\5\0"+
    "\2\u010f\2\u0110\1\0\1\233\2\0\1\352\1\0\1\u0111"+
    "\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116\1\u0117\1\u0118\1\u0119"+
    "\1\u011a\1\u011b\1\u011c\1\u010f\1\u011d\1\u0117\1\u011e\1\0"+
    "\1\u011f\1\0\1\u0110\1\u010f\2\0\2\u0110\1\0\1\u0110"+
    "\44\0\1\u010f\5\0\2\350\2\u0120\1\0\1\233\2\0"+
    "\1\352\1\0\1\u0121\1\354\1\u0122\1\356\1\u0123\1\360"+
    "\1\361\1\362\1\363\1\u0124\1\u0125\1\366\1\350\1\367"+
    "\1\361\1\u0126\1\0\1\u0127\1\0\1\u0120\1\350\2\0"+
    "\2\u0120\1\0\1\u0120\44\0\1\350\5\0\2\333\2\334"+
    "\1\232\1\335\1\0\1\232\1\u0128\1\u0129\1\337\1\333"+
    "\1\334\1\333\1\334\4\333\2\334\4\333\1\334\1\232"+
    "\1\334\1\u012a\1\334\1\333\2\0\2\334\1\0\1\334"+
    "\44\0\1\333\1\0\1\232\3\0\2\u012b\2\351\1\0"+
    "\1\233\2\0\1\352\1\0\1\353\1\u012c\1\355\1\u012d"+
    "\1\357\1\u012e\1\u012f\1\u0130\1\u0131\1\364\1\365\1\u0132"+
    "\1\u012b\1\u0133\1\u012f\1\370\1\0\1\371\1\216\1\351"+
    "\1\u012b\2\0\2\351\1\0\1\351\44\0\1\u012b\5\0"+
    "\1\325\1\332\2\326\1\232\1\216\1\0\2\232\1\u0129"+
    "\1\326\1\332\1\326\1\332\1\326\4\332\2\326\4\332"+
    "\1\326\1\232\1\326\1\236\1\326\1\332\2\0\2\326"+
    "\1\0\1\326\44\0\1\332\1\0\1\232\3\0\2\216"+
    "\2\341\1\232\1\225\1\0\1\232\1\240\1\232\1\341"+
    "\1\216\1\341\1\216\1\341\4\216\2\341\4\216\1\341"+
    "\1\232\1\u0134\1\236\1\341\1\216\2\0\2\341\1\0"+
    "\1\341\44\0\1\216\1\0\1\232\3\0\2\325\2\215"+
    "\1\0\1\216\4\0\1\215\1\325\1\215\1\325\1\215"+
    "\4\325\2\215\4\325\1\215\1\0\1\215\1\0\1\215"+
    "\1\325\2\0\2\215\1\0\1\215\44\0\1\325\5\0"+
    "\1\325\1\332\2\215\1\0\1\216\3\0\1\216\1\215"+
    "\1\332\1\215\1\332\1\215\4\332\2\215\4\332\1\215"+
    "\1\0\1\215\1\0\1\215\1\332\2\0\2\215\1\0"+
    "\1\215\44\0\1\332\7\0\2\251\6\0\1\251\1\0"+
    "\1\251\1\0\1\251\4\0\2\251\4\0\1\251\1\0"+
    "\1\251\1\0\1\251\3\0\2\251\1\0\1\251\52\0"+
    "\2\333\2\334\1\0\1\335\2\0\1\336\1\216\1\337"+
    "\1\333\1\334\1\333\1\334\4\333\2\334\4\333\1\334"+
    "\1\0\1\334\1\340\1\334\1\333\2\0\2\334\1\u0135"+
    "\1\334\44\0\1\333\5\0\2\u0136\2\254\1\165\1\151"+
    "\1\0\3\165\1\254\1\u0136\1\254\1\u0136\1\254\4\u0136"+
    "\2\254\4\u0136\1\254\1\165\1\254\1\173\1\254\1\u0136"+
    "\2\0\2\254\1\0\1\254\44\0\1\u0136\1\0\1\165"+
    "\5\0\2\255\1\0\1\151\4\0\1\255\1\0\1\255"+
    "\1\0\1\255\4\0\2\255\4\0\1\255\1\0\1\255"+
    "\1\0\1\255\3\0\2\255\1\0\1\255\54\0\2\u0137"+
    "\1\0\1\151\4\0\1\u0137\1\0\1\u0137\1\0\1\u0137"+
    "\4\0\2\u0137\4\0\1\u0137\1\0\1\u0137\1\0\1\u0137"+
    "\3\0\2\u0137\1\0\1\u0137\63\0\1\u0138\105\0\2\u0139"+
    "\2\u013a\1\165\2\0\1\165\1\u013b\1\165\1\u013a\1\u0139"+
    "\1\u013a\1\u0139\1\u013a\4\u0139\2\u013a\4\u0139\1\u013a\1\u013c"+
    "\1\u013a\1\173\1\u013a\1\u0139\2\0\2\u013a\1\0\1\u013a"+
    "\44\0\1\u0139\1\0\1\165\5\0\2\u013d\6\0\1\u013d"+
    "\1\0\1\u013d\1\0\1\u013d\4\0\2\u013d\4\0\1\u013d"+
    "\1\0\1\u013d\1\0\1\u013d\3\0\2\u013d\1\0\1\u013d"+
    "\52\0\2\151\3\0\1\262\5\0\1\151\1\0\1\151"+
    "\1\0\4\151\2\0\4\151\5\0\1\151\52\0\1\151"+
    "\5\0\2\271\2\u013e\1\0\1\u013f\4\0\1\u013e\1\271"+
    "\1\u013e\1\271\1\u013e\4\271\2\u013e\4\271\1\u013e\1\0"+
    "\1\u0140\1\0\1\u013e\1\271\2\0\2\u013e\1\0\1\u013e"+
    "\44\0\1\271\7\0\2\u013d\6\0\1\u013d\1\0\1\u013d"+
    "\1\0\1\u013d\4\0\2\u013d\4\0\1\u013d\1\0\1\u013d"+
    "\1\0\1\u013d\3\0\1\u013d\1\u0141\1\0\1\u013d\64\0"+
    "\1\u0142\1\0\1\151\24\0\1\151\55\0\2\151\2\u0143"+
    "\1\0\1\151\2\0\1\161\1\0\1\u0143\1\151\1\u0143"+
    "\1\151\1\u0143\4\151\2\u0143\4\151\1\u0143\1\0\1\u0143"+
    "\1\0\1\u0143\1\151\2\0\2\u0143\1\0\1\u0143\44\0"+
    "\1\151\7\0\2\u0141\6\0\1\u0141\1\0\1\u0141\1\0"+
    "\1\u0141\4\0\2\u0141\4\0\1\u0141\1\0\1\u0141\1\0"+
    "\1\u0141\3\0\2\u0141\1\0\1\u0141\57\0\1\273\111\0"+
    "\2\271\11\0\1\271\1\0\1\271\1\0\4\271\2\0"+
    "\4\271\5\0\1\271\52\0\1\271\7\0\2\u0144\1\0"+
    "\1\273\4\0\1\u0144\1\0\1\u0144\1\0\1\u0144\4\0"+
    "\2\u0144\4\0\1\u0144\1\0\1\u0144\1\0\1\u0144\3\0"+
    "\2\u0144\1\0\1\u0144\63\0\1\162\112\0\1\275\2\0"+
    "\2\u0145\107\0\1\u0146\7\0\1\u0146\1\0\1\u0146\1\0"+
    "\1\u0146\4\0\2\u0146\4\0\1\u0146\1\0\1\u0146\1\0"+
    "\1\u0146\3\0\2\u0146\1\0\1\u0146\56\0\1\165\1\277"+
    "\1\0\1\u0147\1\165\1\u0147\20\0\1\165\1\0\1\173"+
    "\56\0\1\165\3\0\2\u0148\11\0\1\u0148\1\0\1\u0148"+
    "\1\0\4\u0148\2\0\4\u0148\5\0\1\u0148\52\0\1\u0148"+
    "\5\0\2\u0149\11\0\1\u0149\1\0\1\u0149\1\0\4\u0149"+
    "\2\0\4\u0149\5\0\1\u0149\52\0\1\u0149\11\0\1\165"+
    "\1\302\1\167\1\170\2\172\1\0\1\u014a\16\0\1\165"+
    "\1\0\1\173\1\u014a\55\0\1\165\3\0\2\u014b\11\0"+
    "\1\u014b\1\0\1\u014b\1\0\4\u014b\2\0\4\u014b\5\0"+
    "\1\u014b\52\0\1\u014b\5\0\2\u0148\2\0\1\165\2\0"+
    "\3\165\1\0\1\u0148\1\0\1\u0148\1\0\3\u0148\1\u014c"+
    "\2\0\4\u0148\1\0\1\165\1\0\1\173\1\0\1\u0148"+
    "\52\0\1\u0148\1\0\1\165\3\0\2\u0148\11\0\1\u0148"+
    "\1\0\1\u0148\1\0\2\u014c\2\u0148\2\0\1\u014c\3\u0148"+
    "\5\0\1\u0148\52\0\1\u0148\5\0\2\u0148\2\0\1\165"+
    "\2\0\3\165\1\0\1\u0148\1\0\1\u014c\1\0\4\u0148"+
    "\2\0\4\u0148\1\0\1\165\1\0\1\173\1\0\1\u0148"+
    "\52\0\1\u0148\1\0\1\165\3\0\2\u0148\2\0\1\165"+
    "\2\0\3\165\1\0\1\u0148\1\0\1\u0148\1\0\4\u0148"+
    "\2\0\4\u0148\1\0\1\165\1\0\1\173\1\0\1\u0148"+
    "\52\0\1\u0148\1\0\1\165\3\0\2\u0148\11\0\1\u014c"+
    "\1\0\1\u0148\1\0\4\u0148\2\0\2\u014c\2\u0148\5\0"+
    "\1\u0148\52\0\1\u0148\5\0\2\u0148\11\0\1\u0148\1\0"+
    "\1\u0148\1\0\1\u0148\1\u014c\2\u0148\2\0\1\u0148\1\u014c"+
    "\2\u0148\5\0\1\u0148\52\0\1\u0148\5\0\2\u0148\2\0"+
    "\1\165\2\0\3\165\1\0\1\u0148\1\0\1\u014c\1\0"+
    "\2\u0148\2\u014c\2\0\4\u0148\1\0\1\165\1\0\1\173"+
    "\1\0\1\u0148\52\0\1\u0148\1\0\1\165\3\0\2\u0148"+
    "\11\0\1\u0148\1\0\1\u0148\1\0\4\u0148\2\0\1\u014c"+
    "\3\u0148\5\0\1\u0148\52\0\1\u0148\5\0\2\u0149\2\0"+
    "\1\165\2\0\1\165\1\u014d\1\165\1\0\1\u0149\1\0"+
    "\1\u0149\1\0\4\u0149\2\0\4\u0149\1\0\1\165\1\u014e"+
    "\1\173\1\0\1\u0149\52\0\1\u0149\1\0\1\165\3\0"+
    "\2\315\2\0\1\165\2\0\1\165\1\u013c\1\165\1\0"+
    "\1\315\1\0\1\315\1\0\4\315\2\0\4\315\1\0"+
    "\1\u013c\1\0\1\173\1\0\1\315\52\0\1\315\1\0"+
    "\1\165\3\0\2\300\2\301\1\0\1\302\2\0\1\303"+
    "\1\0\1\u014f\1\304\1\u0150\1\305\1\301\1\306\1\307"+
    "\1\310\1\311\2\301\1\312\1\300\1\313\1\307\1\301"+
    "\1\0\1\314\1\0\1\301\1\300\2\0\1\u0150\1\301"+
    "\1\0\1\301\44\0\1\300\7\0\2\u0144\1\165\1\273"+
    "\1\0\3\165\1\u0144\1\0\1\u0144\1\0\1\u0144\4\0"+
    "\2\u0144\4\0\1\u0144\1\165\1\u0151\1\173\1\u0144\3\0"+
    "\2\u0144\1\0\1\u0144\46\0\1\165\3\0\2\151\2\u0143"+
    "\1\165\1\151\1\0\1\165\1\205\1\165\1\u0143\1\151"+
    "\1\u0143\1\151\1\u0143\4\151\2\u0143\4\151\1\u0143\1\165"+
    "\1\u0152\1\173\1\u0143\1\151\2\0\2\u0143\1\0\1\u0143"+
    "\44\0\1\151\1\0\1\165\47\0\1\u0153\74\0\1\13"+
    "\74\0\2\u0154\2\326\1\232\1\216\1\0\3\232\1\326"+
    "\1\u0154\1\326\1\u0154\1\326\4\u0154\2\326\4\u0154\1\326"+
    "\1\232\1\326\1\236\1\326\1\u0154\2\0\2\326\1\0"+
    "\1\326\44\0\1\u0154\1\0\1\232\5\0\2\327\1\0"+
    "\1\216\4\0\1\327\1\0\1\327\1\0\1\327\4\0"+
    "\2\327\4\0\1\327\1\0\1\327\1\0\1\327\3\0"+
    "\2\327\1\0\1\327\54\0\2\u0155\1\0\1\216\4\0"+
    "\1\u0155\1\0\1\u0155\1\0\1\u0155\4\0\2\u0155\4\0"+
    "\1\u0155\1\0\1\u0155\1\0\1\u0155\3\0\2\u0155\1\0"+
    "\1\u0155\63\0\1\u0156\105\0\2\u0154\2\326\1\232\1\216"+
    "\1\0\2\232\1\u0129\1\326\1\u0154\1\326\1\u0154\1\326"+
    "\4\u0154\2\326\4\u0154\1\326\1\232\1\326\1\236\1\326"+
    "\1\u0154\2\0\2\326\1\0\1\326\44\0\1\u0154\1\0"+
    "\1\232\3\0\2\u0157\2\u0158\1\232\2\0\1\232\1\u0159"+
    "\1\232\1\u0158\1\u0157\1\u0158\1\u0157\1\u0158\4\u0157\2\u0158"+
    "\4\u0157\1\u0158\1\u015a\1\u0158\1\236\1\u0158\1\u0157\2\0"+
    "\2\u0158\1\0\1\u0158\44\0\1\u0157\1\0\1\232\5\0"+
    "\2\u015b\6\0\1\u015b\1\0\1\u015b\1\0\1\u015b\4\0"+
    "\2\u015b\4\0\1\u015b\1\0\1\u015b\1\0\1\u015b\3\0"+
    "\2\u015b\1\0\1\u015b\52\0\2\216\3\0\1\335\5\0"+
    "\1\216\1\0\1\216\1\0\4\216\2\0\4\216\5\0"+
    "\1\216\52\0\1\216\5\0\2\344\2\u015c\1\0\1\u015d"+
    "\4\0\1\u015c\1\344\1\u015c\1\344\1\u015c\4\344\2\u015c"+
    "\4\344\1\u015c\1\0\1\u015e\1\0\1\u015c\1\344\2\0"+
    "\2\u015c\1\0\1\u015c\44\0\1\344\7\0\2\u015b\6\0"+
    "\1\u015b\1\0\1\u015b\1\0\1\u015b\4\0\2\u015b\4\0"+
    "\1\u015b\1\0\1\u015b\1\0\1\u015b\3\0\1\u015b\1\u015f"+
    "\1\0\1\u015b\64\0\1\u0160\1\0\1\216\24\0\1\216"+
    "\55\0\2\216\2\u0161\1\0\1\216\2\0\1\226\1\0"+
    "\1\u0161\1\216\1\u0161\1\216\1\u0161\4\216\2\u0161\4\216"+
    "\1\u0161\1\0\1\u0161\1\0\1\u0161\1\216\2\0\2\u0161"+
    "\1\0\1\u0161\44\0\1\216\7\0\2\u015f\6\0\1\u015f"+
    "\1\0\1\u015f\1\0\1\u015f\4\0\2\u015f\4\0\1\u015f"+
    "\1\0\1\u015f\1\0\1\u015f\3\0\2\u015f\1\0\1\u015f"+
    "\57\0\1\346\111\0\2\344\11\0\1\344\1\0\1\344"+
    "\1\0\4\344\2\0\4\344\5\0\1\344\52\0\1\344"+
    "\7\0\2\u0162\1\0\1\346\4\0\1\u0162\1\0\1\u0162"+
    "\1\0\1\u0162\4\0\2\u0162\4\0\1\u0162\1\0\1\u0162"+
    "\1\0\1\u0162\3\0\2\u0162\1\0\1\u0162\63\0\1\227"+
    "\105\0\2\u0163\11\0\1\u0163\1\0\1\u0163\1\0\4\u0163"+
    "\2\0\4\u0163\5\0\1\u0163\52\0\1\u0163\5\0\2\237"+
    "\11\0\1\237\1\0\1\237\1\0\4\237\2\0\4\237"+
    "\5\0\1\237\52\0\1\237\5\0\2\237\2\0\1\232"+
    "\2\0\3\232\1\0\1\237\1\0\1\u0164\1\0\4\237"+
    "\2\0\4\237\1\0\1\232\1\0\1\236\1\0\1\237"+
    "\52\0\1\237\1\0\1\232\3\0\2\u0163\2\0\1\232"+
    "\2\0\3\232\1\0\1\u0163\1\0\1\u0163\1\0\3\u0163"+
    "\1\u0165\2\0\4\u0163\1\0\1\232\1\0\1\236\1\0"+
    "\1\u0163\52\0\1\u0163\1\0\1\232\3\0\2\237\11\0"+
    "\1\237\1\0\1\u0164\1\0\2\237\2\u0164\2\0\4\237"+
    "\5\0\1\237\52\0\1\237\5\0\2\u0163\11\0\1\u0163"+
    "\1\0\1\u0163\1\0\2\u0165\2\u0163\2\0\1\u0165\3\u0163"+
    "\5\0\1\u0163\52\0\1\u0163\5\0\2\237\11\0\1\237"+
    "\1\0\1\237\1\0\1\u0164\3\237\2\0\1\u0164\3\237"+
    "\5\0\1\237\52\0\1\237\5\0\2\u0163\2\0\1\232"+
    "\2\0\3\232\1\0\1\u0163\1\0\1\u0165\1\0\4\u0163"+
    "\2\0\4\u0163\1\0\1\232\1\0\1\236\1\0\1\u0163"+
    "\52\0\1\u0163\1\0\1\232\3\0\2\u0163\2\0\1\232"+
    "\2\0\3\232\1\0\1\u0163\1\0\1\u0163\1\0\4\u0163"+
    "\2\0\4\u0163\1\0\1\232\1\0\1\236\1\0\1\u0163"+
    "\52\0\1\u0163\1\0\1\232\3\0\2\u0163\11\0\1\u0165"+
    "\1\0\1\u0163\1\0\4\u0163\2\0\2\u0165\2\u0163\5\0"+
    "\1\u0163\52\0\1\u0163\5\0\2\u0163\11\0\1\u0163\1\0"+
    "\1\u0163\1\0\1\u0163\1\u0165\2\u0163\2\0\1\u0163\1\u0165"+
    "\2\u0163\5\0\1\u0163\52\0\1\u0163\5\0\2\237\11\0"+
    "\1\237\1\0\1\237\1\0\1\237\1\u0164\2\237\2\0"+
    "\1\237\1\u0164\2\237\5\0\1\237\52\0\1\237\5\0"+
    "\2\237\11\0\1\u0164\1\0\1\237\1\0\4\237\2\0"+
    "\2\u0164\2\237\5\0\1\237\52\0\1\237\5\0\2\u0163"+
    "\2\0\1\232\2\0\3\232\1\0\1\u0163\1\0\1\u0165"+
    "\1\0\3\u0163\1\u0165\2\0\4\u0163\1\0\1\232\1\0"+
    "\1\236\1\0\1\u0163\52\0\1\u0163\1\0\1\232\3\0"+
    "\2\u0163\11\0\1\u0163\1\0\1\u0163\1\0\4\u0163\2\0"+
    "\1\u0165\3\u0163\5\0\1\u0163\52\0\1\u0163\5\0\2\237"+
    "\11\0\1\237\1\0\1\237\1\0\3\237\1\u0164\2\0"+
    "\4\237\5\0\1\237\52\0\1\237\5\0\2\237\2\0"+
    "\1\232\2\0\3\232\1\0\1\237\1\0\1\237\1\0"+
    "\4\237\2\0\4\237\1\0\1\232\1\u0166\1\236\1\0"+
    "\1\237\52\0\1\237\1\0\1\232\3\0\2\237\1\u0167"+
    "\7\0\1\u0167\1\237\1\u0167\1\237\1\u0167\4\237\2\u0167"+
    "\4\237\1\u0167\1\0\1\u0167\1\0\1\u0167\1\237\2\0"+
    "\2\u0167\1\0\1\u0167\44\0\1\237\5\0\2\237\1\u0167"+
    "\1\0\1\232\2\0\3\232\1\u0167\1\237\1\u0167\1\u0164"+
    "\1\u0167\4\237\2\u0167\4\237\1\u0167\1\232\1\u0167\1\236"+
    "\1\u0167\1\237\2\0\2\u0167\1\0\1\u0167\44\0\1\237"+
    "\1\0\1\232\3\0\2\237\1\u0167\7\0\1\u0167\1\237"+
    "\1\u0167\1\u0164\1\u0167\2\237\2\u0164\2\u0167\4\237\1\u0167"+
    "\1\0\1\u0167\1\0\1\u0167\1\237\2\0\2\u0167\1\0"+
    "\1\u0167\44\0\1\237\5\0\2\237\1\u0167\7\0\1\u0167"+
    "\1\237\1\u0167\1\237\1\u0167\1\u0164\3\237\2\u0167\1\u0164"+
    "\3\237\1\u0167\1\0\1\u0167\1\0\1\u0167\1\237\2\0"+
    "\2\u0167\1\0\1\u0167\44\0\1\237\5\0\2\237\1\u0167"+
    "\7\0\1\u0167\1\237\1\u0167\1\237\1\u0167\1\237\1\u0164"+
    "\2\237\2\u0167\1\237\1\u0164\2\237\1\u0167\1\0\1\u0167"+
    "\1\0\1\u0167\1\237\2\0\2\u0167\1\0\1\u0167\44\0"+
    "\1\237\5\0\2\237\1\u0167\7\0\1\u0167\1\u0164\1\u0167"+
    "\1\237\1\u0167\4\237\2\u0167\2\u0164\2\237\1\u0167\1\0"+
    "\1\u0167\1\0\1\u0167\1\237\2\0\2\u0167\1\0\1\u0167"+
    "\44\0\1\237\5\0\2\237\1\u0167\7\0\1\u0167\1\237"+
    "\1\u0167\1\237\1\u0167\3\237\1\u0164\2\u0167\4\237\1\u0167"+
    "\1\0\1\u0167\1\0\1\u0167\1\237\2\0\2\u0167\1\0"+
    "\1\u0167\44\0\1\237\5\0\2\237\1\u0167\1\0\1\232"+
    "\2\0\3\232\1\u0167\1\237\1\u0167\1\237\1\u0167\4\237"+
    "\2\u0167\4\237\1\u0167\1\232\1\u0168\1\236\1\u0167\1\237"+
    "\2\0\2\u0167\1\0\1\u0167\44\0\1\237\1\0\1\232"+
    "\3\0\2\u0169\11\0\1\u0169\1\0\1\u0169\1\0\4\u0169"+
    "\2\0\4\u0169\5\0\1\u0169\52\0\1\u0169\11\0\1\232"+
    "\1\u0103\1\234\3\232\1\0\1\u016a\16\0\1\232\1\0"+
    "\1\236\1\u016a\55\0\1\232\3\0\2\351\11\0\1\351"+
    "\1\0\1\351\1\0\4\351\2\0\4\351\5\0\1\351"+
    "\52\0\1\351\5\0\2\u0169\2\0\1\232\2\0\3\232"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\3\u0169\1\u016b\2\0"+
    "\4\u0169\1\0\1\232\1\0\1\236\1\0\1\u0169\52\0"+
    "\1\u0169\1\0\1\232\3\0\2\u0169\11\0\1\u0169\1\0"+
    "\1\u0169\1\0\2\u016b\2\u0169\2\0\1\u016b\3\u0169\5\0"+
    "\1\u0169\52\0\1\u0169\5\0\2\u0169\2\0\1\232\2\0"+
    "\3\232\1\0\1\u0169\1\0\1\u016b\1\0\4\u0169\2\0"+
    "\4\u0169\1\0\1\232\1\0\1\236\1\0\1\u0169\52\0"+
    "\1\u0169\1\0\1\232\3\0\2\u0169\2\0\1\232\2\0"+
    "\3\232\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0"+
    "\4\u0169\1\0\1\232\1\0\1\236\1\0\1\u0169\52\0"+
    "\1\u0169\1\0\1\232\3\0\2\u0169\11\0\1\u016b\1\0"+
    "\1\u0169\1\0\4\u0169\2\0\2\u016b\2\u0169\5\0\1\u0169"+
    "\52\0\1\u0169\5\0\2\u0169\11\0\1\u0169\1\0\1\u0169"+
    "\1\0\1\u0169\1\u016b\2\u0169\2\0\1\u0169\1\u016b\2\u0169"+
    "\5\0\1\u0169\52\0\1\u0169\5\0\2\u0169\2\0\1\232"+
    "\2\0\3\232\1\0\1\u0169\1\0\1\u016b\1\0\2\u0169"+
    "\2\u016b\2\0\4\u0169\1\0\1\232\1\0\1\236\1\0"+
    "\1\u0169\52\0\1\u0169\1\0\1\232\3\0\2\u0169\11\0"+
    "\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0\1\u016b\3\u0169"+
    "\5\0\1\u0169\52\0\1\u0169\5\0\2\u0163\2\0\1\232"+
    "\2\0\3\232\1\0\1\u0163\1\0\1\u0163\1\0\4\u0163"+
    "\2\0\4\u0163\1\0\1\232\1\u0166\1\236\1\0\1\u0163"+
    "\52\0\1\u0163\1\0\1\232\3\0\2\u010e\2\0\1\232"+
    "\2\0\1\232\1\u015a\1\232\1\0\1\u010e\1\0\1\u010e"+
    "\1\0\4\u010e\2\0\4\u010e\1\0\1\u015a\1\0\1\236"+
    "\1\0\1\u010e\52\0\1\u010e\1\0\1\232\3\0\2\u016c"+
    "\11\0\1\u016c\1\0\1\u016c\1\0\4\u016c\2\0\4\u016c"+
    "\5\0\1\u016c\52\0\1\u016c\5\0\2\237\2\u0162\1\0"+
    "\1\346\4\0\1\u0162\1\237\1\u0162\1\237\1\u0162\4\237"+
    "\2\u0162\4\237\1\u0162\1\0\1\u0162\1\0\1\u0162\1\237"+
    "\2\0\2\u0162\1\0\1\u0162\44\0\1\237\5\0\2\237"+
    "\2\u0162\1\232\1\346\1\0\3\232\1\u0162\1\237\1\u0162"+
    "\1\u0164\1\u0162\4\237\2\u0162\4\237\1\u0162\1\232\1\u0162"+
    "\1\236\1\u0162\1\237\2\0\2\u0162\1\0\1\u0162\44\0"+
    "\1\237\1\0\1\232\3\0\2\u016c\2\0\1\232\2\0"+
    "\3\232\1\0\1\u016c\1\0\1\u016c\1\0\3\u016c\1\u0165"+
    "\2\0\4\u016c\1\0\1\232\1\0\1\236\1\0\1\u016c"+
    "\52\0\1\u016c\1\0\1\232\3\0\2\237\2\u0162\1\0"+
    "\1\346\4\0\1\u0162\1\237\1\u0162\1\u0164\1\u0162\2\237"+
    "\2\u0164\2\u0162\4\237\1\u0162\1\0\1\u0162\1\0\1\u0162"+
    "\1\237\2\0\2\u0162\1\0\1\u0162\44\0\1\237\5\0"+
    "\2\u016c\11\0\1\u016c\1\0\1\u016c\1\0\2\u0165\2\u016c"+
    "\2\0\1\u0165\3\u016c\5\0\1\u016c\52\0\1\u016c\5\0"+
    "\2\237\2\u0162\1\0\1\346\4\0\1\u0162\1\237\1\u0162"+
    "\1\237\1\u0162\1\u0164\3\237\2\u0162\1\u0164\3\237\1\u0162"+
    "\1\0\1\u0162\1\0\1\u0162\1\237\2\0\2\u0162\1\0"+
    "\1\u0162\44\0\1\237\5\0\2\u016c\2\0\1\232\2\0"+
    "\3\232\1\0\1\u016c\1\0\1\u0165\1\0\4\u016c\2\0"+
    "\4\u016c\1\0\1\232\1\0\1\236\1\0\1\u016c\52\0"+
    "\1\u016c\1\0\1\232\3\0\2\u016c\2\0\1\232\2\0"+
    "\3\232\1\0\1\u016c\1\0\1\u016c\1\0\4\u016c\2\0"+
    "\4\u016c\1\0\1\232\1\0\1\236\1\0\1\u016c\52\0"+
    "\1\u016c\1\0\1\232\3\0\2\u016c\11\0\1\u0165\1\0"+
    "\1\u016c\1\0\4\u016c\2\0\2\u0165\2\u016c\5\0\1\u016c"+
    "\52\0\1\u016c\5\0\2\u016c\11\0\1\u016c\1\0\1\u016c"+
    "\1\0\1\u016c\1\u0165\2\u016c\2\0\1\u016c\1\u0165\2\u016c"+
    "\5\0\1\u016c\52\0\1\u016c\5\0\2\237\2\u0162\1\0"+
    "\1\346\4\0\1\u0162\1\237\1\u0162\1\237\1\u0162\1\237"+
    "\1\u0164\2\237\2\u0162\1\237\1\u0164\2\237\1\u0162\1\0"+
    "\1\u0162\1\0\1\u0162\1\237\2\0\2\u0162\1\0\1\u0162"+
    "\44\0\1\237\5\0\2\237\2\u0162\1\0\1\346\4\0"+
    "\1\u0162\1\u0164\1\u0162\1\237\1\u0162\4\237\2\u0162\2\u0164"+
    "\2\237\1\u0162\1\0\1\u0162\1\0\1\u0162\1\237\2\0"+
    "\2\u0162\1\0\1\u0162\44\0\1\237\5\0\2\u016c\2\0"+
    "\1\232\2\0\3\232\1\0\1\u016c\1\0\1\u0165\1\0"+
    "\3\u016c\1\u0165\2\0\4\u016c\1\0\1\232\1\0\1\236"+
    "\1\0\1\u016c\52\0\1\u016c\1\0\1\232\3\0\2\u016c"+
    "\11\0\1\u016c\1\0\1\u016c\1\0\4\u016c\2\0\1\u0165"+
    "\3\u016c\5\0\1\u016c\52\0\1\u016c\5\0\2\237\2\u0162"+
    "\1\0\1\346\4\0\1\u0162\1\237\1\u0162\1\237\1\u0162"+
    "\3\237\1\u0164\2\u0162\4\237\1\u0162\1\0\1\u0162\1\0"+
    "\1\u0162\1\237\2\0\2\u0162\1\0\1\u0162\44\0\1\237"+
    "\5\0\2\237\2\u0162\1\232\1\346\1\0\3\232\1\u0162"+
    "\1\237\1\u0162\1\237\1\u0162\4\237\2\u0162\4\237\1\u0162"+
    "\1\232\1\u016d\1\236\1\u0162\1\237\2\0\2\u0162\1\0"+
    "\1\u0162\44\0\1\237\1\0\1\232\3\0\2\237\7\0"+
    "\1\227\1\0\1\237\1\0\1\237\1\0\4\237\2\0"+
    "\4\237\5\0\1\237\52\0\1\237\5\0\2\237\2\0"+
    "\1\232\2\0\2\232\1\241\1\0\1\237\1\0\1\u0164"+
    "\1\0\4\237\2\0\4\237\1\0\1\232\1\0\1\236"+
    "\1\0\1\237\52\0\1\237\1\0\1\232\3\0\2\237"+
    "\7\0\1\227\1\0\1\237\1\0\1\u0164\1\0\2\237"+
    "\2\u0164\2\0\4\237\5\0\1\237\52\0\1\237\5\0"+
    "\2\237\7\0\1\227\1\0\1\237\1\0\1\237\1\0"+
    "\1\u0164\3\237\2\0\1\u0164\3\237\5\0\1\237\52\0"+
    "\1\237\5\0\2\237\7\0\1\227\1\0\1\237\1\0"+
    "\1\237\1\0\1\237\1\u0164\2\237\2\0\1\237\1\u0164"+
    "\2\237\5\0\1\237\52\0\1\237\5\0\2\237\7\0"+
    "\1\227\1\0\1\u0164\1\0\1\237\1\0\4\237\2\0"+
    "\2\u0164\2\237\5\0\1\237\52\0\1\237\5\0\2\237"+
    "\7\0\1\227\1\0\1\237\1\0\1\237\1\0\3\237"+
    "\1\u0164\2\0\4\237\5\0\1\237\52\0\1\237\5\0"+
    "\2\237\2\0\1\232\2\0\2\232\1\241\1\0\1\237"+
    "\1\0\1\237\1\0\4\237\2\0\4\237\1\0\1\232"+
    "\1\u0166\1\236\1\0\1\237\52\0\1\237\1\0\1\232"+
    "\3\0\2\u010f\2\u016e\1\0\1\u016f\2\0\1\352\1\0"+
    "\1\u0170\1\u0112\1\u0171\1\u0114\1\u0172\1\u0116\1\u0117\1\u0118"+
    "\1\u0119\1\u0173\1\u0174\1\u011c\1\u010f\1\u011d\1\u0117\1\u0175"+
    "\1\0\1\u0176\1\0\1\u016e\1\u010f\2\0\2\u016e\1\0"+
    "\1\u016e\44\0\1\u010f\5\0\2\u0102\2\350\1\0\1\u0103"+
    "\2\0\1\u0104\1\0\1\u0177\1\u0105\1\u0178\1\u0106\1\350"+
    "\1\u0107\1\u0108\1\u0109\1\u010a\2\350\1\u010b\1\u0102\1\u010c"+
    "\1\u0108\1\350\1\0\1\u010d\1\0\1\350\1\u0102\2\0"+
    "\1\u0178\1\350\1\0\1\350\44\0\1\u0102\5\0\2\u0163"+
    "\7\0\1\u0156\1\0\1\u0163\1\0\1\u0163\1\0\4\u0163"+
    "\2\0\4\u0163\5\0\1\u0163\52\0\1\u0163\5\0\2\u0163"+
    "\2\0\1\232\2\0\2\232\1\u0179\1\0\1\u0163\1\0"+
    "\1\u0163\1\0\3\u0163\1\u0165\2\0\4\u0163\1\0\1\232"+
    "\1\0\1\236\1\0\1\u0163\52\0\1\u0163\1\0\1\232"+
    "\3\0\2\u0163\7\0\1\u0156\1\0\1\u0163\1\0\1\u0163"+
    "\1\0\2\u0165\2\u0163\2\0\1\u0165\3\u0163\5\0\1\u0163"+
    "\52\0\1\u0163\5\0\2\u0163\2\0\1\232\2\0\2\232"+
    "\1\u0179\1\0\1\u0163\1\0\1\u0165\1\0\4\u0163\2\0"+
    "\4\u0163\1\0\1\232\1\0\1\236\1\0\1\u0163\52\0"+
    "\1\u0163\1\0\1\232\3\0\2\u0163\2\0\1\232\2\0"+
    "\2\232\1\u0179\1\0\1\u0163\1\0\1\u0163\1\0\4\u0163"+
    "\2\0\4\u0163\1\0\1\232\1\0\1\236\1\0\1\u0163"+
    "\52\0\1\u0163\1\0\1\232\3\0\2\u0163\7\0\1\u0156"+
    "\1\0\1\u0165\1\0\1\u0163\1\0\4\u0163\2\0\2\u0165"+
    "\2\u0163\5\0\1\u0163\52\0\1\u0163\5\0\2\u0163\7\0"+
    "\1\u0156\1\0\1\u0163\1\0\1\u0163\1\0\1\u0163\1\u0165"+
    "\2\u0163\2\0\1\u0163\1\u0165\2\u0163\5\0\1\u0163\52\0"+
    "\1\u0163\5\0\2\u0163\2\0\1\232\2\0\2\232\1\u0179"+
    "\1\0\1\u0163\1\0\1\u0165\1\0\3\u0163\1\u0165\2\0"+
    "\4\u0163\1\0\1\232\1\0\1\236\1\0\1\u0163\52\0"+
    "\1\u0163\1\0\1\232\3\0\2\u0163\7\0\1\u0156\1\0"+
    "\1\u0163\1\0\1\u0163\1\0\4\u0163\2\0\1\u0165\3\u0163"+
    "\5\0\1\u0163\52\0\1\u0163\5\0\2\216\2\u0161\1\232"+
    "\1\216\1\0\1\232\1\240\1\232\1\u0161\1\216\1\u0161"+
    "\1\216\1\u0161\4\216\2\u0161\4\216\1\u0161\1\232\1\u017a"+
    "\1\236\1\u0161\1\216\2\0\2\u0161\1\0\1\u0161\44\0"+
    "\1\216\1\0\1\232\47\0\1\u017b\52\0\2\u017c\2\254"+
    "\1\165\1\151\1\0\3\165\1\254\1\u017c\1\254\1\u017c"+
    "\1\254\4\u017c\2\254\4\u017c\1\254\1\165\1\254\1\173"+
    "\1\254\1\u017c\2\0\2\254\1\0\1\254\44\0\1\u017c"+
    "\1\0\1\165\3\0\2\257\11\0\1\257\1\0\1\257"+
    "\1\0\4\257\2\0\4\257\5\0\1\257\52\0\1\257"+
    "\5\0\2\u0139\2\0\1\165\2\0\1\165\1\u013b\1\165"+
    "\1\0\1\u0139\1\0\1\u0139\1\0\4\u0139\2\0\4\u0139"+
    "\1\0\1\u013c\1\0\1\173\1\0\1\u0139\52\0\1\u0139"+
    "\1\0\1\165\3\0\2\271\2\u013e\1\165\1\u013f\1\0"+
    "\3\165\1\u013e\1\271\1\u013e\1\271\1\u013e\4\271\2\u013e"+
    "\4\271\1\u013e\1\165\1\u013e\1\173\1\u013e\1\271\2\0"+
    "\2\u013e\1\0\1\u013e\44\0\1\271\1\0\1\165\5\0"+
    "\2\151\6\0\1\151\1\0\1\151\1\0\1\151\4\0"+
    "\2\151\4\0\1\151\1\0\1\151\1\0\1\151\3\0"+
    "\2\151\1\0\1\151\57\0\1\u013f\2\0\1\u013e\106\0"+
    "\2\271\11\0\1\271\1\0\1\271\1\0\4\271\2\0"+
    "\4\271\2\0\1\256\2\0\1\271\52\0\1\271\47\0"+
    "\1\151\54\0\2\151\2\u017d\4\0\1\u017e\1\0\1\u017d"+
    "\1\151\1\u017d\1\151\1\u017d\4\151\2\u017d\4\151\1\u017d"+
    "\1\0\1\u017d\1\0\1\u017d\1\151\2\0\2\u017d\1\0"+
    "\1\u017d\44\0\1\151\7\0\2\u017f\1\0\1\273\4\0"+
    "\1\u017f\1\0\1\u017f\1\0\1\u017f\4\0\2\u017f\4\0"+
    "\1\u017f\1\0\1\u017f\1\0\1\u017f\3\0\2\u017f\1\0"+
    "\1\u017f\54\0\1\u0180\7\0\1\u0180\1\0\1\u0180\1\0"+
    "\1\u0180\4\0\2\u0180\4\0\1\u0180\1\0\1\u0180\1\0"+
    "\1\u0180\3\0\2\u0180\1\0\1\u0180\57\0\1\u0181\111\0"+
    "\2\u0182\6\0\1\u0183\2\0\1\u0182\1\0\1\u0182\1\0"+
    "\4\u0182\2\0\4\u0182\1\0\1\u0183\3\0\1\u0182\52\0"+
    "\1\u0182\5\0\2\u0184\11\0\1\u0184\1\0\1\u0184\1\0"+
    "\4\u0184\2\0\4\u0184\5\0\1\u0184\52\0\1\u0184\5\0"+
    "\2\174\11\0\1\174\1\0\1\174\1\0\4\174\2\0"+
    "\4\174\5\0\1\174\52\0\1\174\5\0\2\u0182\2\0"+
    "\1\165\2\0\1\165\1\u0185\1\165\1\0\1\u0182\1\0"+
    "\1\u0182\1\0\4\u0182\2\0\4\u0182\1\0\1\u0185\1\0"+
    "\1\173\1\0\1\u0182\52\0\1\u0182\1\0\1\165\36\0"+
    "\1\u0186\67\0\1\165\2\0\1\165\1\u014d\1\165\20\0"+
    "\1\165\1\u014e\1\173\56\0\1\165\3\0\2\u0149\11\0"+
    "\1\u0149\1\0\1\u0149\1\0\4\u0149\2\0\4\u0149\5\0"+
    "\1\u0149\3\0\1\151\46\0\1\u0149\7\0\2\u017f\1\165"+
    "\1\273\1\0\3\165\1\u017f\1\0\1\u017f\1\0\1\u017f"+
    "\4\0\2\u017f\4\0\1\u017f\1\165\1\u0187\1\173\1\u017f"+
    "\3\0\2\u017f\1\0\1\u017f\46\0\1\165\3\0\2\151"+
    "\2\u017d\1\165\2\0\1\165\1\u0188\1\165\1\u017d\1\151"+
    "\1\u017d\1\151\1\u017d\4\151\2\u017d\4\151\1\u017d\1\165"+
    "\1\u0189\1\173\1\u017d\1\151\2\0\2\u017d\1\0\1\u017d"+
    "\44\0\1\151\1\0\1\165\3\0\2\151\11\0\1\151"+
    "\1\0\1\151\1\0\4\151\2\0\4\151\5\0\1\151"+
    "\52\0\1\151\5\0\2\u018a\2\326\1\232\1\216\1\0"+
    "\3\232\1\326\1\u018a\1\326\1\u018a\1\326\4\u018a\2\326"+
    "\4\u018a\1\326\1\232\1\326\1\236\1\326\1\u018a\2\0"+
    "\2\326\1\0\1\326\44\0\1\u018a\1\0\1\232\3\0"+
    "\2\331\11\0\1\331\1\0\1\331\1\0\4\331\2\0"+
    "\4\331\5\0\1\331\52\0\1\331\5\0\2\u0157\2\0"+
    "\1\232\2\0\1\232\1\u0159\1\232\1\0\1\u0157\1\0"+
    "\1\u0157\1\0\4\u0157\2\0\4\u0157\1\0\1\u015a\1\0"+
    "\1\236\1\0\1\u0157\52\0\1\u0157\1\0\1\232\3\0"+
    "\2\u010f\2\u016e\1\232\1\u016f\1\0\1\232\1\u018b\1\232"+
    "\1\u0170\1\u0112\1\u0171\1\u0114\1\u0172\1\u0116\1\u0117\1\u0118"+
    "\1\u0119\1\u0173\1\u0174\1\u011c\1\u010f\1\u011d\1\u0117\1\u0175"+
    "\1\232\1\u0176\1\236\1\u016e\1\u010f\2\0\2\u016e\1\0"+
    "\1\u016e\44\0\1\u010f\1\0\1\232\3\0\2\350\2\351"+
    "\1\232\1\233\1\0\1\232\1\u018b\1\232\1\353\1\354"+
    "\1\355\1\356\1\357\1\360\1\361\1\362\1\363\1\364"+
    "\1\365\1\366\1\350\1\367\1\361\1\370\1\232\1\371"+
    "\1\236\1\351\1\350\2\0\2\351\1\0\1\351\44\0"+
    "\1\350\1\0\1\232\5\0\2\216\6\0\1\216\1\0"+
    "\1\216\1\0\1\216\4\0\2\216\4\0\1\216\1\0"+
    "\1\216\1\0\1\216\3\0\2\216\1\0\1\216\57\0"+
    "\1\u015d\2\0\1\u015c\106\0\2\344\11\0\1\344\1\0"+
    "\1\344\1\0\4\344\2\0\4\344\2\0\1\330\2\0"+
    "\1\344\52\0\1\344\47\0\1\216\54\0\2\216\2\u018c"+
    "\4\0\1\u018d\1\0\1\u018c\1\216\1\u018c\1\216\1\u018c"+
    "\4\216\2\u018c\4\216\1\u018c\1\0\1\u018c\1\0\1\u018c"+
    "\1\216\2\0\2\u018c\1\0\1\u018c\44\0\1\216\7\0"+
    "\2\u018e\1\0\1\346\4\0\1\u018e\1\0\1\u018e\1\0"+
    "\1\u018e\4\0\2\u018e\4\0\1\u018e\1\0\1\u018e\1\0"+
    "\1\u018e\3\0\2\u018e\1\0\1\u018e\52\0\2\u0165\11\0"+
    "\1\u0165\1\0\1\u0165\1\0\4\u0165\2\0\4\u0165\5\0"+
    "\1\u0165\52\0\1\u0165\5\0\2\u010e\2\0\1\232\2\0"+
    "\3\232\1\0\1\u010e\1\0\1\u010e\1\0\4\u010e\2\0"+
    "\4\u010e\1\0\1\232\1\0\1\236\1\0\1\u010e\52\0"+
    "\1\u010e\1\0\1\232\3\0\2\u0165\2\0\1\232\2\0"+
    "\3\232\1\0\1\u0165\1\0\1\u0165\1\0\4\u0165\2\0"+
    "\4\u0165\1\0\1\232\1\0\1\236\1\0\1\u0165\52\0"+
    "\1\u0165\1\0\1\232\7\0\1\232\2\0\3\232\20\0"+
    "\1\232\1\u0166\1\236\56\0\1\232\5\0\1\u018f\7\0"+
    "\1\u018f\1\0\1\u018f\1\0\1\u018f\4\0\2\u018f\4\0"+
    "\1\u018f\1\0\1\u018f\1\0\1\u018f\3\0\2\u018f\1\0"+
    "\1\u018f\54\0\1\u018f\1\0\1\232\2\0\3\232\1\u018f"+
    "\1\0\1\u018f\1\0\1\u018f\4\0\2\u018f\4\0\1\u018f"+
    "\1\232\1\u0190\1\236\1\u018f\3\0\2\u018f\1\0\1\u018f"+
    "\46\0\1\232\3\0\2\u0191\6\0\1\u0192\2\0\1\u0191"+
    "\1\0\1\u0191\1\0\4\u0191\2\0\4\u0191\1\0\1\u0192"+
    "\3\0\1\u0191\52\0\1\u0191\12\0\1\u0193\111\0\2\u0191"+
    "\2\0\1\232\2\0\1\232\1\u0194\1\232\1\0\1\u0191"+
    "\1\0\1\u0191\1\0\4\u0191\2\0\4\u0191\1\0\1\u0194"+
    "\1\0\1\236\1\0\1\u0191\52\0\1\u0191\1\0\1\232"+
    "\5\0\2\u018e\1\232\1\346\1\0\3\232\1\u018e\1\0"+
    "\1\u018e\1\0\1\u018e\4\0\2\u018e\4\0\1\u018e\1\232"+
    "\1\u0195\1\236\1\u018e\3\0\2\u018e\1\0\1\u018e\46\0"+
    "\1\232\3\0\2\u0196\11\0\1\u0196\1\0\1\u0196\1\0"+
    "\4\u0196\2\0\4\u0196\5\0\1\u0196\52\0\1\u0196\11\0"+
    "\1\232\1\u016f\1\234\1\232\1\u0197\1\232\20\0\1\232"+
    "\1\0\1\236\56\0\1\232\3\0\2\u0196\2\0\1\232"+
    "\2\0\3\232\1\0\1\u0196\1\0\1\u0164\1\0\4\u0196"+
    "\2\0\4\u0196\1\0\1\232\1\0\1\236\1\0\1\u0196"+
    "\52\0\1\u0196\1\0\1\232\3\0\2\u0196\11\0\1\u0196"+
    "\1\0\1\u0164\1\0\2\u0196\2\u0164\2\0\4\u0196\5\0"+
    "\1\u0196\52\0\1\u0196\5\0\2\u0196\11\0\1\u0196\1\0"+
    "\1\u0196\1\0\1\u0164\3\u0196\2\0\1\u0164\3\u0196\5\0"+
    "\1\u0196\52\0\1\u0196\5\0\2\u0196\11\0\1\u0196\1\0"+
    "\1\u0196\1\0\1\u0196\1\u0164\2\u0196\2\0\1\u0196\1\u0164"+
    "\2\u0196\5\0\1\u0196\52\0\1\u0196\5\0\2\u0196\11\0"+
    "\1\u0164\1\0\1\u0196\1\0\4\u0196\2\0\2\u0164\2\u0196"+
    "\5\0\1\u0196\52\0\1\u0196\5\0\2\u0196\11\0\1\u0196"+
    "\1\0\1\u0196\1\0\3\u0196\1\u0164\2\0\4\u0196\5\0"+
    "\1\u0196\52\0\1\u0196\5\0\2\u0196\2\0\1\232\2\0"+
    "\3\232\1\0\1\u0196\1\0\1\u0196\1\0\4\u0196\2\0"+
    "\4\u0196\1\0\1\232\1\u0166\1\236\1\0\1\u0196\52\0"+
    "\1\u0196\1\0\1\232\3\0\2\u0163\11\0\1\u0163\1\0"+
    "\1\u0163\1\0\4\u0163\2\0\4\u0163\5\0\1\u0163\3\0"+
    "\1\216\46\0\1\u0163\5\0\2\u012b\2\351\1\0\1\233"+
    "\2\0\1\352\1\0\1\353\1\u012c\1\355\1\u012d\1\357"+
    "\1\u012e\1\u012f\1\u0130\1\u0131\1\364\1\365\1\u0132\1\u012b"+
    "\1\u0133\1\u012f\1\370\1\0\1\371\1\0\1\351\1\u012b"+
    "\2\0\2\351\1\0\1\351\44\0\1\u012b\5\0\2\216"+
    "\2\u018c\1\232\2\0\1\232\1\u0198\1\232\1\u018c\1\216"+
    "\1\u018c\1\216\1\u018c\4\216\2\u018c\4\216\1\u018c\1\232"+
    "\1\u0199\1\236\1\u018c\1\216\2\0\2\u018c\1\0\1\u018c"+
    "\44\0\1\216\1\0\1\232\3\0\2\216\11\0\1\216"+
    "\1\0\1\216\1\0\4\216\2\0\4\216\5\0\1\216"+
    "\52\0\1\216\5\0\2\u019a\2\0\1\165\2\0\3\165"+
    "\1\0\1\u019a\1\0\1\u019a\1\0\4\u019a\2\0\4\u019a"+
    "\1\0\1\165\1\0\1\173\1\0\1\u019a\52\0\1\u019a"+
    "\1\0\1\165\3\0\2\151\2\u019b\6\0\1\u019b\1\151"+
    "\1\u019b\1\151\1\u019b\4\151\2\u019b\4\151\1\u019b\1\0"+
    "\1\u019b\1\0\1\u019b\1\151\2\0\2\u019b\1\0\1\u019b"+
    "\44\0\1\151\5\0\2\271\2\u019c\1\0\1\273\4\0"+
    "\1\u019c\1\271\1\u019c\1\271\1\u019c\4\271\2\u019c\4\271"+
    "\1\u019c\1\0\1\u019c\1\0\1\u019c\1\271\2\0\2\u019c"+
    "\1\0\1\u019c\44\0\1\271\7\0\2\273\1\0\1\273"+
    "\4\0\1\273\1\0\1\273\1\0\1\273\4\0\2\273"+
    "\4\0\1\273\1\0\1\273\1\0\1\273\3\0\2\273"+
    "\1\0\1\273\54\0\1\151\7\0\1\151\1\0\1\151"+
    "\1\0\1\151\4\0\2\151\4\0\1\151\1\0\1\151"+
    "\1\0\1\151\3\0\2\151\1\0\1\151\56\0\1\165"+
    "\1\u0181\1\0\3\165\20\0\1\165\1\0\1\173\56\0"+
    "\1\165\3\0\2\u0182\2\0\1\165\2\0\1\165\1\u019d"+
    "\1\165\1\0\1\u0182\1\0\1\u0182\1\0\4\u0182\2\0"+
    "\4\u0182\1\0\1\u019d\1\0\1\173\1\0\1\u0182\52\0"+
    "\1\u0182\1\0\1\165\3\0\2\u019e\11\0\1\u019e\1\0"+
    "\1\u019e\1\0\4\u019e\2\0\4\u019e\5\0\1\u019e\52\0"+
    "\1\u019e\5\0\2\u0184\2\0\1\165\2\0\3\165\1\0"+
    "\1\u0184\1\0\1\u0184\1\0\4\u0184\2\0\4\u0184\1\0"+
    "\1\165\1\0\1\173\1\0\1\u0184\52\0\1\u0184\1\0"+
    "\1\165\7\0\1\165\2\0\3\165\20\0\1\165\1\u0186"+
    "\1\173\56\0\1\165\5\0\2\273\1\165\1\273\1\0"+
    "\3\165\1\273\1\0\1\273\1\0\1\273\4\0\2\273"+
    "\4\0\1\273\1\165\1\u019f\1\173\1\273\3\0\2\273"+
    "\1\0\1\273\46\0\1\165\3\0\2\271\2\u019c\1\0"+
    "\1\273\4\0\1\u019c\1\271\1\u019c\1\271\1\u019c\4\271"+
    "\2\u019c\4\271\1\u019c\1\0\1\u01a0\1\0\1\u019c\1\271"+
    "\2\0\2\u019c\1\0\1\u019c\44\0\1\271\5\0\2\151"+
    "\2\u019b\1\165\2\0\1\165\1\u014d\1\165\1\u019b\1\151"+
    "\1\u019b\1\151\1\u019b\4\151\2\u019b\4\151\1\u019b\1\165"+
    "\1\u01a1\1\173\1\u019b\1\151\2\0\2\u019b\1\0\1\u019b"+
    "\44\0\1\151\1\0\1\165\3\0\2\u01a2\2\0\1\232"+
    "\2\0\3\232\1\0\1\u01a2\1\0\1\u01a2\1\0\4\u01a2"+
    "\2\0\4\u01a2\1\0\1\232\1\0\1\236\1\0\1\u01a2"+
    "\52\0\1\u01a2\1\0\1\232\3\0\2\350\2\237\1\0"+
    "\1\233\2\0\1\352\1\0\1\u0164\1\354\1\237\1\356"+
    "\1\237\1\360\1\361\1\362\1\363\2\237\1\366\1\350"+
    "\1\367\1\361\1\237\1\0\1\u01a3\1\0\1\237\1\350"+
    "\2\0\2\237\1\0\1\237\44\0\1\350\5\0\2\216"+
    "\2\u01a4\6\0\1\u01a4\1\216\1\u01a4\1\216\1\u01a4\4\216"+
    "\2\u01a4\4\216\1\u01a4\1\0\1\u01a4\1\0\1\u01a4\1\216"+
    "\2\0\2\u01a4\1\0\1\u01a4\44\0\1\216\5\0\2\344"+
    "\2\u01a5\1\0\1\346\4\0\1\u01a5\1\344\1\u01a5\1\344"+
    "\1\u01a5\4\344\2\u01a5\4\344\1\u01a5\1\0\1\u01a5\1\0"+
    "\1\u01a5\1\344\2\0\2\u01a5\1\0\1\u01a5\44\0\1\344"+
    "\7\0\2\346\1\0\1\346\4\0\1\346\1\0\1\346"+
    "\1\0\1\346\4\0\2\346\4\0\1\346\1\0\1\346"+
    "\1\0\1\346\3\0\2\346\1\0\1\346\54\0\1\216"+
    "\7\0\1\216\1\0\1\216\1\0\1\216\4\0\2\216"+
    "\4\0\1\216\1\0\1\216\1\0\1\216\3\0\2\216"+
    "\1\0\1\216\54\0\1\216\1\0\1\232\2\0\3\232"+
    "\1\216\1\0\1\216\1\0\1\216\4\0\2\216\4\0"+
    "\1\216\1\232\1\u0166\1\236\1\216\3\0\2\216\1\0"+
    "\1\216\46\0\1\232\3\0\2\u0191\2\0\1\232\2\0"+
    "\1\232\1\u01a6\1\232\1\0\1\u0191\1\0\1\u0191\1\0"+
    "\4\u0191\2\0\4\u0191\1\0\1\u01a6\1\0\1\236\1\0"+
    "\1\u0191\52\0\1\u0191\1\0\1\232\3\0\2\u01a7\11\0"+
    "\1\u01a7\1\0\1\u01a7\1\0\4\u01a7\2\0\4\u01a7\5\0"+
    "\1\u01a7\52\0\1\u01a7\11\0\1\232\1\u0193\1\0\3\232"+
    "\20\0\1\232\1\0\1\236\56\0\1\232\3\0\2\u01a7"+
    "\2\351\1\0\1\233\2\0\1\352\1\0\1\353\1\u01a8"+
    "\1\355\1\u01a7\1\357\2\u01a8\2\u01a7\1\364\1\365\1\u01a8"+
    "\2\u01a7\1\u01a8\1\370\1\0\1\371\1\0\1\351\1\u01a7"+
    "\2\0\2\351\1\0\1\351\44\0\1\u01a7\7\0\2\346"+
    "\1\232\1\346\1\0\3\232\1\346\1\0\1\346\1\0"+
    "\1\346\4\0\2\346\4\0\1\346\1\232\1\u01a9\1\236"+
    "\1\346\3\0\2\346\1\0\1\346\46\0\1\232\3\0"+
    "\2\u010f\2\351\1\0\1\233\2\0\1\352\1\0\1\353"+
    "\1\u0112\1\355\1\u0114\1\357\1\u0116\1\u0117\1\u0118\1\u0119"+
    "\1\364\1\365\1\u011c\1\u010f\1\u011d\1\u0117\1\370\1\0"+
    "\1\371\1\0\1\351\1\u010f\2\0\2\351\1\0\1\351"+
    "\44\0\1\u010f\5\0\2\u010f\2\u01aa\1\0\1\233\2\0"+
    "\1\352\1\0\1\u01ab\1\u0112\1\u01ac\1\u0114\1\u01ad\1\u0116"+
    "\1\u0117\1\u0118\1\u0119\1\u01ae\1\u01af\1\u011c\1\u010f\1\u011d"+
    "\1\u0117\1\u01b0\1\0\1\u01b1\1\0\1\u01aa\1\u010f\2\0"+
    "\2\u01aa\1\0\1\u01aa\44\0\1\u010f\5\0\2\216\2\u01a4"+
    "\1\232\2\0\3\232\1\u01a4\1\216\1\u01a4\1\216\1\u01a4"+
    "\4\216\2\u01a4\4\216\1\u01a4\1\232\1\u01b2\1\236\1\u01a4"+
    "\1\216\2\0\2\u01a4\1\0\1\u01a4\44\0\1\216\1\0"+
    "\1\232\3\0\2\u019a\2\u01b3\1\165\2\0\3\165\1\u01b3"+
    "\1\u019a\1\u01b3\1\u019a\1\u01b3\4\u019a\2\u01b3\4\u019a\1\u01b3"+
    "\1\165\1\u01b3\1\u01b4\1\u01b3\1\u019a\2\0\2\u01b3\1\0"+
    "\1\u01b3\44\0\1\u019a\1\0\1\165\3\0\2\151\2\u01b5"+
    "\6\0\1\u01b5\1\151\1\u01b5\1\151\1\u01b5\4\151\2\u01b5"+
    "\4\151\1\u01b5\1\0\1\u01b5\1\0\1\u01b5\1\151\2\0"+
    "\2\u01b5\1\0\1\u01b5\44\0\1\151\7\0\2\u01b6\1\0"+
    "\1\273\4\0\1\u01b6\1\0\1\u01b6\1\0\1\u01b6\4\0"+
    "\2\u01b6\4\0\1\u01b6\1\0\1\u01b6\1\0\1\u01b6\3\0"+
    "\2\u01b6\1\0\1\u01b6\52\0\2\u019e\2\0\1\165\2\0"+
    "\3\165\1\0\1\u019e\1\0\1\u019e\1\0\4\u019e\2\0"+
    "\4\u019e\1\0\1\165\1\0\1\173\1\0\1\u019e\52\0"+
    "\1\u019e\1\0\1\165\3\0\2\u01b7\11\0\1\u01b7\1\0"+
    "\1\u01b7\1\0\4\u01b7\2\0\4\u01b7\5\0\1\u01b7\52\0"+
    "\1\u01b7\11\0\1\165\1\273\1\0\3\165\20\0\1\165"+
    "\1\u0186\1\173\56\0\1\165\5\0\2\u01b6\1\165\1\273"+
    "\1\0\3\165\1\u01b6\1\0\1\u01b6\1\0\1\u01b6\4\0"+
    "\2\u01b6\4\0\1\u01b6\1\165\1\u01b8\1\173\1\u01b6\3\0"+
    "\2\u01b6\1\0\1\u01b6\46\0\1\165\3\0\2\151\2\u01b5"+
    "\1\165\2\0\1\165\1\u014d\1\165\1\u01b5\1\151\1\u01b5"+
    "\1\151\1\u01b5\4\151\2\u01b5\4\151\1\u01b5\1\165\1\u01b9"+
    "\1\173\1\u01b5\1\151\2\0\2\u01b5\1\0\1\u01b5\44\0"+
    "\1\151\1\0\1\165\3\0\2\u01a2\2\u01ba\1\232\2\0"+
    "\3\232\1\u01ba\1\u01a2\1\u01ba\1\u01a2\1\u01ba\4\u01a2\2\u01ba"+
    "\4\u01a2\1\u01ba\1\232\1\u01ba\1\u01bb\1\u01ba\1\u01a2\2\0"+
    "\2\u01ba\1\0\1\u01ba\44\0\1\u01a2\1\0\1\232\3\0"+
    "\2\u010e\2\0\1\232\2\0\3\232\1\0\1\u010e\1\0"+
    "\1\u010e\1\0\4\u010e\2\0\4\u010e\1\0\1\232\1\u0166"+
    "\1\236\1\0\1\u010e\52\0\1\u010e\1\0\1\232\3\0"+
    "\2\216\2\u01bc\6\0\1\u01bc\1\216\1\u01bc\1\216\1\u01bc"+
    "\4\216\2\u01bc\4\216\1\u01bc\1\0\1\u01bc\1\0\1\u01bc"+
    "\1\216\2\0\2\u01bc\1\0\1\u01bc\44\0\1\216\7\0"+
    "\2\u01bd\1\0\1\346\4\0\1\u01bd\1\0\1\u01bd\1\0"+
    "\1\u01bd\4\0\2\u01bd\4\0\1\u01bd\1\0\1\u01bd\1\0"+
    "\1\u01bd\3\0\2\u01bd\1\0\1\u01bd\52\0\2\u01a7\2\351"+
    "\1\232\1\233\1\0\1\232\1\u018b\1\232\1\353\1\u01a8"+
    "\1\355\1\u01a7\1\357\2\u01a8\2\u01a7\1\364\1\365\1\u01a8"+
    "\2\u01a7\1\u01a8\1\370\1\232\1\371\1\236\1\351\1\u01a7"+
    "\2\0\2\351\1\0\1\351\44\0\1\u01a7\1\0\1\232"+
    "\3\0\2\u01be\11\0\1\u01be\1\0\1\u01be\1\0\4\u01be"+
    "\2\0\4\u01be\5\0\1\u01be\52\0\1\u01be\5\0\2\u01be"+
    "\2\0\1\232\2\0\3\232\1\0\1\u01be\1\0\1\u01be"+
    "\1\0\4\u01be\2\0\4\u01be\1\0\1\232\1\0\1\236"+
    "\1\0\1\u01be\52\0\1\u01be\1\0\1\232\7\0\1\232"+
    "\1\346\1\0\3\232\20\0\1\232\1\u0166\1\236\56\0"+
    "\1\232\3\0\2\237\2\u01bd\1\0\1\346\4\0\1\u01bd"+
    "\1\237\1\u01bd\1\237\1\u01bd\4\237\2\u01bd\4\237\1\u01bd"+
    "\1\0\1\u01bd\1\0\1\u01bd\1\237\2\0\2\u01bd\1\0"+
    "\1\u01bd\44\0\1\237\5\0\2\237\2\u01bd\1\232\1\346"+
    "\1\0\3\232\1\u01bd\1\237\1\u01bd\1\u0164\1\u01bd\4\237"+
    "\2\u01bd\4\237\1\u01bd\1\232\1\u01bd\1\236\1\u01bd\1\237"+
    "\2\0\2\u01bd\1\0\1\u01bd\44\0\1\237\1\0\1\232"+
    "\3\0\2\237\2\u01bd\1\0\1\346\4\0\1\u01bd\1\237"+
    "\1\u01bd\1\u0164\1\u01bd\2\237\2\u0164\2\u01bd\4\237\1\u01bd"+
    "\1\0\1\u01bd\1\0\1\u01bd\1\237\2\0\2\u01bd\1\0"+
    "\1\u01bd\44\0\1\237\5\0\2\237\2\u01bd\1\0\1\346"+
    "\4\0\1\u01bd\1\237\1\u01bd\1\237\1\u01bd\1\u0164\3\237"+
    "\2\u01bd\1\u0164\3\237\1\u01bd\1\0\1\u01bd\1\0\1\u01bd"+
    "\1\237\2\0\2\u01bd\1\0\1\u01bd\44\0\1\237\5\0"+
    "\2\237\2\u01bd\1\0\1\346\4\0\1\u01bd\1\237\1\u01bd"+
    "\1\237\1\u01bd\1\237\1\u0164\2\237\2\u01bd\1\237\1\u0164"+
    "\2\237\1\u01bd\1\0\1\u01bd\1\0\1\u01bd\1\237\2\0"+
    "\2\u01bd\1\0\1\u01bd\44\0\1\237\5\0\2\237\2\u01bd"+
    "\1\0\1\346\4\0\1\u01bd\1\u0164\1\u01bd\1\237\1\u01bd"+
    "\4\237\2\u01bd\2\u0164\2\237\1\u01bd\1\0\1\u01bd\1\0"+
    "\1\u01bd\1\237\2\0\2\u01bd\1\0\1\u01bd\44\0\1\237"+
    "\5\0\2\237\2\u01bd\1\0\1\346\4\0\1\u01bd\1\237"+
    "\1\u01bd\1\237\1\u01bd\3\237\1\u0164\2\u01bd\4\237\1\u01bd"+
    "\1\0\1\u01bd\1\0\1\u01bd\1\237\2\0\2\u01bd\1\0"+
    "\1\u01bd\44\0\1\237\5\0\2\237\2\u01bd\1\232\1\346"+
    "\1\0\3\232\1\u01bd\1\237\1\u01bd\1\237\1\u01bd\4\237"+
    "\2\u01bd\4\237\1\u01bd\1\232\1\u01bf\1\236\1\u01bd\1\237"+
    "\2\0\2\u01bd\1\0\1\u01bd\44\0\1\237\1\0\1\232"+
    "\3\0\2\216\2\u01bc\1\232\2\0\3\232\1\u01bc\1\216"+
    "\1\u01bc\1\216\1\u01bc\4\216\2\u01bc\4\216\1\u01bc\1\232"+
    "\1\u01c0\1\236\1\u01bc\1\216\2\0\2\u01bc\1\0\1\u01bc"+
    "\44\0\1\216\1\0\1\232\3\0\2\271\11\0\1\271"+
    "\1\0\1\271\1\0\4\271\2\0\4\271\3\0\1\u013e"+
    "\1\0\1\271\52\0\1\271\5\0\2\300\2\u01c1\1\0"+
    "\1\302\2\0\1\303\1\0\1\u01c1\1\304\1\u01c1\1\305"+
    "\1\u01c1\1\306\1\307\1\310\1\311\2\u01c1\1\312\1\300"+
    "\1\313\1\307\1\u01c1\1\0\1\u01c2\1\0\1\u01c1\1\300"+
    "\2\0\2\u01c1\1\0\1\u01c1\44\0\1\300\5\0\2\151"+
    "\2\u01c3\6\0\1\u01c3\1\151\1\u01c3\1\151\1\u01c3\4\151"+
    "\2\u01c3\4\151\1\u01c3\1\0\1\u01c3\1\0\1\u01c3\1\151"+
    "\2\0\2\u01c3\1\0\1\u01c3\44\0\1\151\7\0\2\u01c4"+
    "\1\0\1\273\4\0\1\u01c4\1\0\1\u01c4\1\0\1\u01c4"+
    "\4\0\2\u01c4\4\0\1\u01c4\1\0\1\u01c4\1\0\1\u01c4"+
    "\3\0\2\u01c4\1\0\1\u01c4\52\0\2\u01b7\2\0\1\165"+
    "\2\0\1\165\1\u0185\1\165\1\0\1\u01b7\1\0\1\u01b7"+
    "\1\0\4\u01b7\2\0\4\u01b7\1\0\1\u0185\1\0\1\173"+
    "\1\0\1\u01b7\52\0\1\u01b7\1\0\1\165\5\0\2\u01c4"+
    "\1\165\1\273\1\0\3\165\1\u01c4\1\0\1\u01c4\1\0"+
    "\1\u01c4\4\0\2\u01c4\4\0\1\u01c4\1\165\1\u01c5\1\173"+
    "\1\u01c4\3\0\2\u01c4\1\0\1\u01c4\46\0\1\165\3\0"+
    "\2\151\2\u01c3\1\165\2\0\1\165\1\u014d\1\165\1\u01c3"+
    "\1\151\1\u01c3\1\151\1\u01c3\4\151\2\u01c3\4\151\1\u01c3"+
    "\1\165\1\u01c6\1\173\1\u01c3\1\151\2\0\2\u01c3\1\0"+
    "\1\u01c3\44\0\1\151\1\0\1\165\3\0\2\344\11\0"+
    "\1\344\1\0\1\344\1\0\4\344\2\0\4\344\3\0"+
    "\1\u015c\1\0\1\344\52\0\1\344\5\0\2\u0102\2\u01c7"+
    "\1\0\1\u0103\2\0\1\u0104\1\0\1\u01c7\1\u0105\1\u01c7"+
    "\1\u0106\1\u01c7\1\u0107\1\u0108\1\u0109\1\u010a\2\u01c7\1\u010b"+
    "\1\u0102\1\u010c\1\u0108\1\u01c7\1\0\1\u01c8\1\0\1\u01c7"+
    "\1\u0102\2\0\2\u01c7\1\0\1\u01c7\44\0\1\u0102\5\0"+
    "\2\216\2\u01c9\6\0\1\u01c9\1\216\1\u01c9\1\216\1\u01c9"+
    "\4\216\2\u01c9\4\216\1\u01c9\1\0\1\u01c9\1\0\1\u01c9"+
    "\1\216\2\0\2\u01c9\1\0\1\u01c9\44\0\1\216\7\0"+
    "\2\u01ca\1\0\1\346\4\0\1\u01ca\1\0\1\u01ca\1\0"+
    "\1\u01ca\4\0\2\u01ca\4\0\1\u01ca\1\0\1\u01ca\1\0"+
    "\1\u01ca\3\0\2\u01ca\1\0\1\u01ca\52\0\2\u01be\2\0"+
    "\1\232\2\0\1\232\1\u0194\1\232\1\0\1\u01be\1\0"+
    "\1\u01be\1\0\4\u01be\2\0\4\u01be\1\0\1\u0194\1\0"+
    "\1\236\1\0\1\u01be\52\0\1\u01be\1\0\1\232\5\0"+
    "\2\u01ca\1\232\1\346\1\0\3\232\1\u01ca\1\0\1\u01ca"+
    "\1\0\1\u01ca\4\0\2\u01ca\4\0\1\u01ca\1\232\1\u0195"+
    "\1\236\1\u01ca\3\0\2\u01ca\1\0\1\u01ca\46\0\1\232"+
    "\3\0\2\216\2\u01c9\1\232\2\0\3\232\1\u01c9\1\216"+
    "\1\u01c9\1\216\1\u01c9\4\216\2\u01c9\4\216\1\u01c9\1\232"+
    "\1\u01c0\1\236\1\u01c9\1\216\2\0\2\u01c9\1\0\1\u01c9"+
    "\44\0\1\216\1\0\1\232\3\0\2\u01cb\11\0\1\u01cb"+
    "\1\0\1\u01cb\1\0\4\u01cb\2\0\4\u01cb\3\0\1\u013e"+
    "\1\0\1\u01cb\52\0\1\u01cb\5\0\2\u01cb\2\0\1\165"+
    "\2\0\1\165\1\u014d\1\165\1\0\1\u01cb\1\0\1\u01cb"+
    "\1\0\4\u01cb\2\0\4\u01cb\1\0\1\165\1\u014e\1\u01cc"+
    "\1\0\1\u01cb\52\0\1\u01cb\1\0\1\165\3\0\2\u016c"+
    "\11\0\1\u016c\1\0\1\u016c\1\0\4\u016c\2\0\4\u016c"+
    "\3\0\1\u015c\1\0\1\u016c\52\0\1\u016c\5\0\2\u016c"+
    "\2\0\1\232\2\0\3\232\1\0\1\u016c\1\0\1\u016c"+
    "\1\0\4\u016c\2\0\4\u016c\1\0\1\232\1\u0166\1\u01cd"+
    "\1\0\1\u016c\52\0\1\u016c\1\0\1\232\3\0\2\u01ce"+
    "\11\0\1\u01ce\1\0\1\u01ce\1\0\4\u01ce\2\0\4\u01ce"+
    "\5\0\1\u01ce\52\0\1\u01ce\5\0\2\u01cf\2\301\1\0"+
    "\1\302\2\0\1\303\1\0\1\301\1\u01d0\1\301\1\u01d1"+
    "\1\301\1\u01d2\1\u01d3\1\u01d4\1\u01d5\2\301\1\u01d6\1\u01cf"+
    "\1\u01d7\1\u01d3\1\301\1\0\1\314\1\0\1\301\1\u01cf"+
    "\2\0\2\301\1\0\1\301\44\0\1\u01cf\5\0\2\u01d8"+
    "\2\350\1\0\1\u0103\2\0\1\u0104\1\0\1\350\1\u01d9"+
    "\1\350\1\u01da\1\350\1\u01db\1\u01dc\1\u01dd\1\u01de\2\350"+
    "\1\u01df\1\u01d8\1\u01e0\1\u01dc\1\350\1\0\1\u010d\1\0"+
    "\1\350\1\u01d8\2\0\2\350\1\0\1\350\44\0\1\u01d8"+
    "\5\0\2\u01ce\2\0\1\165\2\0\3\165\1\0\1\u01ce"+
    "\1\0\1\u01ce\1\0\4\u01ce\2\0\4\u01ce\1\0\1\165"+
    "\1\0\1\173\1\0\1\u01ce\52\0\1\u01ce\1\0\1\165"+
    "\3\0\2\u01e1\11\0\1\u01e1\1\0\1\u01e1\1\0\4\u01e1"+
    "\2\0\4\u01e1\5\0\1\u01e1\52\0\1\u01e1\5\0\2\u01e1"+
    "\2\0\1\165\2\0\3\165\1\0\1\u01e1\1\0\1\u01e1"+
    "\1\0\3\u01e1\1\u01e2\2\0\4\u01e1\1\0\1\165\1\0"+
    "\1\173\1\0\1\u01e1\52\0\1\u01e1\1\0\1\165\3\0"+
    "\2\u01e1\11\0\1\u01e1\1\0\1\u01e1\1\0\2\u01e2\2\u01e1"+
    "\2\0\1\u01e2\3\u01e1\5\0\1\u01e1\52\0\1\u01e1\5\0"+
    "\2\u01e1\2\0\1\165\2\0\3\165\1\0\1\u01e1\1\0"+
    "\1\u01e2\1\0\4\u01e1\2\0\4\u01e1\1\0\1\165\1\0"+
    "\1\173\1\0\1\u01e1\52\0\1\u01e1\1\0\1\165\3\0"+
    "\2\u01e1\2\0\1\165\2\0\3\165\1\0\1\u01e1\1\0"+
    "\1\u01e1\1\0\4\u01e1\2\0\4\u01e1\1\0\1\165\1\0"+
    "\1\173\1\0\1\u01e1\52\0\1\u01e1\1\0\1\165\3\0"+
    "\2\u01e1\11\0\1\u01e2\1\0\1\u01e1\1\0\4\u01e1\2\0"+
    "\2\u01e2\2\u01e1\5\0\1\u01e1\52\0\1\u01e1\5\0\2\u01e1"+
    "\11\0\1\u01e1\1\0\1\u01e1\1\0\1\u01e1\1\u01e2\2\u01e1"+
    "\2\0\1\u01e1\1\u01e2\2\u01e1\5\0\1\u01e1\52\0\1\u01e1"+
    "\5\0\2\u01e1\2\0\1\165\2\0\3\165\1\0\1\u01e1"+
    "\1\0\1\u01e2\1\0\2\u01e1\2\u01e2\2\0\4\u01e1\1\0"+
    "\1\165\1\0\1\173\1\0\1\u01e1\52\0\1\u01e1\1\0"+
    "\1\165\3\0\2\u01e1\11\0\1\u01e1\1\0\1\u01e1\1\0"+
    "\4\u01e1\2\0\1\u01e2\3\u01e1\5\0\1\u01e1\52\0\1\u01e1"+
    "\5\0\2\u01e3\11\0\1\u01e3\1\0\1\u01e3\1\0\4\u01e3"+
    "\2\0\4\u01e3\5\0\1\u01e3\52\0\1\u01e3\5\0\2\u01e3"+
    "\2\0\1\232\2\0\3\232\1\0\1\u01e3\1\0\1\u01e3"+
    "\1\0\3\u01e3\1\u016b\2\0\4\u01e3\1\0\1\232\1\0"+
    "\1\236\1\0\1\u01e3\52\0\1\u01e3\1\0\1\232\3\0"+
    "\2\u01e3\11\0\1\u01e3\1\0\1\u01e3\1\0\2\u016b\2\u01e3"+
    "\2\0\1\u016b\3\u01e3\5\0\1\u01e3\52\0\1\u01e3\5\0"+
    "\2\u01e3\2\0\1\232\2\0\3\232\1\0\1\u01e3\1\0"+
    "\1\u016b\1\0\4\u01e3\2\0\4\u01e3\1\0\1\232\1\0"+
    "\1\236\1\0\1\u01e3\52\0\1\u01e3\1\0\1\232\3\0"+
    "\2\u01e3\2\0\1\232\2\0\3\232\1\0\1\u01e3\1\0"+
    "\1\u01e3\1\0\4\u01e3\2\0\4\u01e3\1\0\1\232\1\0"+
    "\1\236\1\0\1\u01e3\52\0\1\u01e3\1\0\1\232\3\0"+
    "\2\u01e3\11\0\1\u016b\1\0\1\u01e3\1\0\4\u01e3\2\0"+
    "\2\u016b\2\u01e3\5\0\1\u01e3\52\0\1\u01e3\5\0\2\u01e3"+
    "\11\0\1\u01e3\1\0\1\u01e3\1\0\1\u01e3\1\u016b\2\u01e3"+
    "\2\0\1\u01e3\1\u016b\2\u01e3\5\0\1\u01e3\52\0\1\u01e3"+
    "\5\0\2\u01e3\2\0\1\232\2\0\3\232\1\0\1\u01e3"+
    "\1\0\1\u016b\1\0\2\u01e3\2\u016b\2\0\4\u01e3\1\0"+
    "\1\232\1\0\1\236\1\0\1\u01e3\52\0\1\u01e3\1\0"+
    "\1\232\3\0\2\u01e3\11\0\1\u01e3\1\0\1\u01e3\1\0"+
    "\4\u01e3\2\0\1\u016b\3\u01e3\5\0\1\u01e3\52\0\1\u01e3"+
    "\5\0\2\u01e4\6\0\1\u0183\2\0\1\u01e4\1\0\1\u01e4"+
    "\1\0\4\u01e4\2\0\4\u01e4\1\0\1\u0183\3\0\1\u01e4"+
    "\52\0\1\u01e4\5\0\2\u01e4\2\0\1\165\2\0\1\165"+
    "\1\u0185\1\165\1\0\1\u01e4\1\0\1\u01e4\1\0\4\u01e4"+
    "\2\0\4\u01e4\1\0\1\u0185\1\0\1\173\1\0\1\u01e4"+
    "\52\0\1\u01e4\1\0\1\165\3\0\2\u01e4\2\0\1\165"+
    "\2\0\1\165\1\u019d\1\165\1\0\1\u01e4\1\0\1\u01e4"+
    "\1\0\4\u01e4\2\0\4\u01e4\1\0\1\u019d\1\0\1\173"+
    "\1\0\1\u01e4\52\0\1\u01e4\1\0\1\165\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31205];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\5\0\1\11\4\1\1\11\1\1\2\11\1\1\1\11"+
    "\22\1\1\11\1\1\41\11\1\1\1\11\1\1\3\11"+
    "\30\1\3\11\2\1\1\11\2\0\5\1\1\0\1\1"+
    "\2\0\1\11\2\0\4\1\1\0\7\1\1\0\6\1"+
    "\1\0\2\1\1\11\2\0\5\1\1\0\1\1\3\0"+
    "\2\1\4\0\4\1\1\0\11\1\2\0\2\1\1\0"+
    "\1\1\1\0\2\1\1\0\3\1\22\0\5\1\2\0"+
    "\4\1\1\0\4\1\1\0\1\1\1\0\2\1\1\0"+
    "\3\1\4\0\2\1\3\0\2\1\4\0\1\1\2\0"+
    "\1\1\1\0\1\1\5\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\2\1\2\0\1\1\1\0\23\1\1\0"+
    "\1\1\5\0\1\1\1\0\1\1\2\0\1\1\1\0"+
    "\2\1\2\0\1\1\1\0\1\1\1\0\3\1\2\0"+
    "\2\1\3\0\5\1\1\0\2\1\5\0\1\1\1\0"+
    "\4\1\1\0\4\1\1\0\2\1\3\0\5\1\1\0"+
    "\5\1\2\0\3\1\1\0\2\1\5\0\5\1\2\0"+
    "\1\1\2\0\1\1\4\0\1\1\2\0\3\1\1\0"+
    "\1\1\2\0\3\1\1\0\1\1\1\0\2\1\2\0"+
    "\1\1\1\0\3\1\1\0\10\1\1\0\17\1\1\0"+
    "\3\1\1\0\7\1\1\0\2\1\1\0\2\1\1\0"+
    "\3\1\1\0\27\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[484];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	StringBuffer aux = new StringBuffer();
     	int auxLinea = 0;
     	int auxColumna = 0;
	String varAux="";
	String posibleLF="";
	Acronimo acronimo;
	
	//FormaLarga f=new FormaLarga();
	
	int offset=0;
	//FormaLargaWithAc acWLfacWLf=new FormaLargaWithAc ();
	


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public AnalizadorLexico(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 344) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
              {
                offset=offset+yytext().length(); return new Symbol(sym.EOF);
              }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { offset=offset+yytext().length();System.err.println("Error lexico: caracter no reconocido <" + yytext() + "> en la linea " + (yyline+1) 
	+ " y columna " + (yycolumn +1));
            } 
            // fall through
          case 53: break;
          case 2: 
            { offset=offset+yytext().length();
				acronimo= new Acronimo(offset-yytext().length(),offset,yytext());
				yybegin(estado4);
            } 
            // fall through
          case 54: break;
          case 3: 
            { offset=offset+yytext().length();
            } 
            // fall through
          case 55: break;
          case 4: 
            { //NUMERO
				offset=offset+yytext().length();
            } 
            // fall through
          case 56: break;
          case 5: 
            { //porcentaje
				offset=offset+yytext().length();
            } 
            // fall through
          case 57: break;
          case 6: 
            { //Coma
				offset=offset+yytext().length();
            } 
            // fall through
          case 58: break;
          case 7: 
            { //barra -
				offset=offset+yytext().length();
            } 
            // fall through
          case 59: break;
          case 8: 
            { //Punto
				offset=offset+yytext().length();
            } 
            // fall through
          case 60: break;
          case 9: 
            { //Barra / 
				offset=offset+yytext().length();
            } 
            // fall through
          case 61: break;
          case 10: 
            { //Alpha
		offset=offset+yytext().length();
            } 
            // fall through
          case 62: break;
          case 11: 
            { //mas menos
		offset=offset+yytext().length();
            } 
            // fall through
          case 63: break;
          case 12: 
            { //gamma
		offset=offset+yytext().length();
            } 
            // fall through
          case 64: break;
          case 13: 
            { //a con anillo encima 
		offset=offset+yytext().length();
            } 
            // fall through
          case 65: break;
          case 14: 
            { //tm
		offset=offset+yytext().length();
            } 
            // fall through
          case 66: break;
          case 15: 
            { //guion largo 
		offset=offset+yytext().length();
            } 
            // fall through
          case 67: break;
          case 16: 
            { //Bala
		offset=offset+yytext().length();
            } 
            // fall through
          case 68: break;
          case 17: 
            { //a minuscula dieresis
		offset=offset+yytext().length();
            } 
            // fall through
          case 69: break;
          case 18: 
            { //Beta
		offset=offset+yytext().length();
            } 
            // fall through
          case 70: break;
          case 19: 
            { //Espacio de no separacion
		offset=offset+yytext().length();
            } 
            // fall through
          case 71: break;
          case 20: 
            { //Si detecta frases explicatorias entre parentesis
				offset=offset+yytext().length();
            } 
            // fall through
          case 72: break;
          case 21: 
            { //Si hay acronimos en una frase no detectara el parentesis, pues al principio estaba en el estado 1
				yypushback(yytext().length());
				yybegin(estado1);
            } 
            // fall through
          case 73: break;
          case 22: 
            { //Corchete derecho { 
				offset=offset+yytext().length();
            } 
            // fall through
          case 74: break;
          case 23: 
            { //fraccion 1 medio 
				offset=offset+yytext().length();
            } 
            // fall through
          case 75: break;
          case 24: 
            { //Aspa multiplicacion
				offset=offset+yytext().length();
            } 
            // fall through
          case 76: break;
          case 25: 
            { //Corchete izq } 
				offset=offset+yytext().length();
            } 
            // fall through
          case 77: break;
          case 26: 
            { //comillas latinas cierre
				offset=offset+yytext().length();
            } 
            // fall through
          case 78: break;
          case 27: 
            { //comillas latinas apertura
				offset=offset+yytext().length();
            } 
            // fall through
          case 79: break;
          case 28: 
            { //comilla simple
				offset=offset+yytext().length();
            } 
            // fall through
          case 80: break;
          case 29: 
            { //asterisco
				offset=offset+yytext().length();
            } 
            // fall through
          case 81: break;
          case 30: 
            { //Corchetes 
				offset=offset+yytext().length();
            } 
            // fall through
          case 82: break;
          case 31: 
            { //minúscula S aguda 
				offset=offset+yytext().length();
            } 
            // fall through
          case 83: break;
          case 32: 
            { //Punto centrado
				offset=offset+yytext().length();
            } 
            // fall through
          case 84: break;
          case 33: 
            { //Simbolo menor que
				offset=offset+yytext().length();
            } 
            // fall through
          case 85: break;
          case 34: 
            { //a sufijo
				offset=offset+yytext().length();
            } 
            // fall through
          case 86: break;
          case 35: 
            { //Simbolo mayor que
				offset=offset+yytext().length();
            } 
            // fall through
          case 87: break;
          case 36: 
            { //Simbolo registro
				offset=offset+yytext().length();
            } 
            // fall through
          case 88: break;
          case 37: 
            { //Simbolo grados
				offset=offset+yytext().length();
            } 
            // fall through
          case 89: break;
          case 38: 
            { //Simbolo ordinal
				offset=offset+yytext().length();
            } 
            // fall through
          case 90: break;
          case 39: 
            { //Simbolo igual
				offset=offset+yytext().length();
            } 
            // fall through
          case 91: break;
          case 40: 
            { //Ampersan 
				offset=offset+yytext().length();
            } 
            // fall through
          case 92: break;
          case 41: 
            { //Comilla "
				offset=offset+yytext().length();
            } 
            // fall through
          case 93: break;
          case 42: 
            { //Sumatorio	
				offset=offset+yytext().length();
            } 
            // fall through
          case 94: break;
          case 43: 
            { offset=offset+yytext().length(); posibleLF="";
            } 
            // fall through
          case 95: break;
          case 44: 
            { String b=yytext();
			if(b!=null){
				yypushback(b.length());
			}
			yybegin(YYINITIAL);
            } 
            // fall through
          case 96: break;
          case 45: 
            { offset=offset+yytext().length();yybegin(estado2);
            } 
            // fall through
          case 97: break;
          case 46: 
            { if(yytext()!=null){
			yypushback(yytext().length());
			}
			yybegin(YYINITIAL);
            } 
            // fall through
          case 98: break;
          case 47: 
            { offset=offset+yytext().length();
			acronimo= new Acronimo(offset-yytext().length(),offset,yytext());			
			yybegin(estado3);
            } 
            // fall through
          case 99: break;
          case 48: 
            { posibleLF=yytext(); offset=offset+posibleLF.length();return new Symbol(sym.frase,posibleLF);
            } 
            // fall through
          case 100: break;
          case 49: 
            { offset=offset+yytext().length();
				yybegin(YYINITIAL);		
				//Cuidado si le paso el objeto en el sintactico lo usa como puntero y solo se guarda la ultima ocurrencia. Por ello new Object
				return new Symbol(sym.acWithContext,yyline +1, yycolumn +1,new AcWithContext(new Acronimo(acronimo.getStartOffset(),acronimo.getEndOffset(),acronimo.getAcronimo()),posibleLF));
            } 
            // fall through
          case 101: break;
          case 50: 
            { if(yytext()!=null){
					yypushback(yytext().length());
				}
				yybegin(YYINITIAL);
            } 
            // fall through
          case 102: break;
          case 51: 
            { offset=offset+yytext().length();
			yybegin(YYINITIAL);
			return new Symbol(sym.acWithContext,yyline +1, yycolumn +1,new AcWithContext(new Acronimo(acronimo.getStartOffset(),acronimo.getEndOffset(),acronimo.getAcronimo()),posibleLF));
            } 
            // fall through
          case 103: break;
          case 52: 
            { posibleLF=yytext();				
				offset=offset+posibleLF.length();
				yybegin(estado1);				
				return new Symbol(sym.frase,posibleLF);
            } 
            // fall through
          case 104: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
