/* The following code was generated by JFlex 1.7.0 */

 package Analizadores;
import java.util.LinkedList;
import java_cup.runtime.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/saral/OneDrive/Documentos/GitHub/TFG/src/Analizadores/AnalizadorLexico.flex</tt>
 */
public class AnalizadorLexico implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int estado1 = 2;
  public static final int estado2 = 4;
  public static final int estado3 = 6;
  public static final int estado4 = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4, 4
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\110\1\111\1\113\1\113\1\112\22\0\1\34\1\0\1\102"+
    "\2\0\1\7\1\101\1\65\1\56\1\55\1\66\1\103\1\10\1\11"+
    "\1\12\1\41\1\6\1\6\1\6\7\6\1\33\1\5\1\72\1\100"+
    "\1\74\1\105\1\0\1\13\1\3\1\35\1\42\1\15\3\3\1\36"+
    "\2\3\1\17\1\3\1\24\4\3\1\25\1\3\1\32\1\3\4\3"+
    "\1\67\1\106\1\67\3\0\1\20\2\2\1\30\1\26\3\2\1\27"+
    "\2\2\1\16\1\2\1\23\1\21\2\2\1\107\1\22\1\2\1\14"+
    "\3\2\1\31\1\2\1\57\1\0\1\62\7\0\1\113\32\0\1\54"+
    "\11\0\1\73\1\64\2\0\1\75\1\0\1\76\1\44\3\0\1\40"+
    "\1\0\1\71\2\0\1\77\1\63\1\0\1\60\1\0\1\104\1\0"+
    "\1\4\1\37\6\0\1\4\3\0\1\4\3\0\1\4\1\0\1\4"+
    "\3\0\1\61\2\0\1\4\4\0\1\70\1\0\1\1\2\0\1\52"+
    "\1\46\3\0\1\1\3\0\1\1\3\0\1\1\1\0\1\1\2\0"+
    "\1\1\3\0\1\1\1\0\1\1\u02b4\0\1\43\1\53\1\45\10\0"+
    "\1\40\u0183\0\1\40\u1ad3\0\1\50\15\0\1\51\5\0\1\113\1\113"+
    "\370\0\1\47\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udeed\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\5\0\1\1\3\2\1\1\1\3\1\4\1\5\1\6"+
    "\1\7\1\10\16\2\1\1\2\2\1\11\1\2\1\12"+
    "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52"+
    "\1\1\2\53\1\54\1\55\1\56\3\57\1\56\1\60"+
    "\1\56\2\60\3\57\2\60\4\57\1\60\2\57\1\56"+
    "\2\57\1\61\1\62\1\63\3\2\1\0\6\2\1\0"+
    "\1\2\2\0\1\2\1\64\2\0\4\64\1\0\2\64"+
    "\1\2\3\64\3\2\1\0\3\57\1\0\6\57\1\0"+
    "\1\57\2\0\1\57\1\0\2\60\4\0\1\57\1\60"+
    "\1\0\1\57\1\60\2\57\2\2\2\0\1\2\4\0"+
    "\2\2\1\0\3\2\1\0\3\2\22\0\1\64\1\2"+
    "\1\64\2\0\1\60\1\57\2\0\1\57\3\0\1\60"+
    "\2\57\1\0\3\57\1\0\3\57\5\0\2\60\3\0"+
    "\2\60\4\0\1\60\3\0\1\60\6\0\1\60\1\0"+
    "\1\60\1\0\2\60\2\0\1\60\1\0\1\60\2\57"+
    "\2\60\3\57\2\60\4\57\1\60\2\57\3\0\2\60"+
    "\3\0\2\60\4\0\1\60\3\0\2\57\3\0\2\60"+
    "\3\0\2\60\4\0\1\60\4\0\1\2\1\0\3\2"+
    "\2\0\2\64\2\0\6\2\1\0\1\2\1\64\5\0"+
    "\1\2\1\0\1\60\1\0\3\57\1\60\1\0\2\60"+
    "\2\0\6\57\1\0\2\60\1\57\2\0\1\60\3\57"+
    "\1\0\2\60\5\0\3\57\4\0\1\2\2\0\1\2"+
    "\4\0\1\64\1\2\1\60\3\0\1\57\2\0\1\57"+
    "\1\60\1\0\1\60\3\0\2\60\3\0\2\60\4\0"+
    "\1\60\3\0\1\60\5\0\1\57\2\0\1\60\1\0"+
    "\2\60\2\0\1\60\1\0\4\2\1\64\1\0\1\2"+
    "\4\57\1\60\1\0\1\60\3\57\2\0\1\2\4\0"+
    "\1\57\1\0\1\60\2\0\2\60\3\0\2\60\4\0"+
    "\1\60\3\0\1\60\6\0\1\60\1\0\2\60\2\0"+
    "\1\60\1\0\2\2\1\0\1\2\2\57\1\0\4\57"+
    "\3\0\2\60\3\0\2\60\4\0\1\60\3\0\1\60"+
    "\5\0\1\60\1\0\2\60\2\0\1\60\1\0\2\57";

  private static int [] zzUnpackAction() {
    int [] result = new int[545];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\114\0\230\0\344\0\u0130\0\u017c\0\u01c8\0\u0214"+
    "\0\u0260\0\u02ac\0\u017c\0\u02f8\0\u017c\0\u017c\0\u0344\0\u017c"+
    "\0\u0390\0\u03dc\0\u0428\0\u0474\0\u04c0\0\u050c\0\u0558\0\u05a4"+
    "\0\u05f0\0\u063c\0\u0688\0\u06d4\0\u0720\0\u076c\0\u0260\0\u07b8"+
    "\0\u0804\0\u017c\0\u0850\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c"+
    "\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c"+
    "\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c"+
    "\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c\0\u017c"+
    "\0\u017c\0\u017c\0\u017c\0\u017c\0\u089c\0\u017c\0\u08e8\0\u017c"+
    "\0\u017c\0\u017c\0\u0934\0\u0980\0\u09cc\0\u0a18\0\u0a64\0\u0ab0"+
    "\0\u0afc\0\u0b48\0\u0b94\0\u0be0\0\u0c2c\0\u0c78\0\u0cc4\0\u0d10"+
    "\0\u0d5c\0\u0da8\0\u0df4\0\u0e40\0\u0e8c\0\u0ed8\0\u09cc\0\u0f24"+
    "\0\u0f70\0\u017c\0\u017c\0\u017c\0\u0fbc\0\u1008\0\u017c\0\u1054"+
    "\0\u10a0\0\u10ec\0\u1138\0\u1184\0\u11d0\0\u121c\0\u1268\0\u12b4"+
    "\0\u1300\0\u134c\0\u1398\0\u017c\0\u13e4\0\u1430\0\u147c\0\u14c8"+
    "\0\u1514\0\u1560\0\u15ac\0\u1268\0\u12b4\0\u15f8\0\u1644\0\u1054"+
    "\0\u10ec\0\u1690\0\u16dc\0\u1728\0\u1774\0\u17c0\0\u180c\0\u017c"+
    "\0\u1858\0\u18a4\0\u18f0\0\u193c\0\u1988\0\u19d4\0\u1a20\0\u1a6c"+
    "\0\u1ab8\0\u1b04\0\u1b50\0\u1b9c\0\u1be8\0\u1c34\0\u1c80\0\u1ccc"+
    "\0\u1d18\0\u1d64\0\u1db0\0\u1dfc\0\u1e48\0\u1e94\0\u1ee0\0\u1f2c"+
    "\0\u1f78\0\u1fc4\0\u2010\0\u205c\0\u20a8\0\u20f4\0\u1054\0\u2140"+
    "\0\u218c\0\u21d8\0\u2224\0\u2270\0\u22bc\0\u2308\0\u2354\0\u23a0"+
    "\0\u23ec\0\u2438\0\u2484\0\u24d0\0\u2438\0\u251c\0\u2568\0\u25b4"+
    "\0\u2600\0\u264c\0\u2698\0\u26e4\0\u2730\0\u277c\0\u27c8\0\u2814"+
    "\0\u2860\0\u28ac\0\u28f8\0\u2944\0\u2990\0\u29dc\0\u2a28\0\u2308"+
    "\0\u2730\0\u2a74\0\u2ac0\0\u2b0c\0\u2b58\0\u2ba4\0\u2bf0\0\u2c3c"+
    "\0\u1858\0\u2c88\0\u2cd4\0\u2d20\0\u2d6c\0\u2db8\0\u2e04\0\u2e50"+
    "\0\u2e9c\0\u2ee8\0\u2f34\0\u2f80\0\u2fcc\0\u3018\0\u2f80\0\u3064"+
    "\0\u30b0\0\u30fc\0\u3148\0\u0ab0\0\u3194\0\u31e0\0\u322c\0\u3278"+
    "\0\u32c4\0\u3310\0\u335c\0\u33a8\0\u33f4\0\u3440\0\u348c\0\u34d8"+
    "\0\u3524\0\u3570\0\u35bc\0\u3608\0\u3654\0\u36a0\0\u36ec\0\u3738"+
    "\0\u3784\0\u37d0\0\u381c\0\u3868\0\u38b4\0\u3900\0\u394c\0\u3998"+
    "\0\u39e4\0\u3a30\0\u3a7c\0\u3ac8\0\u3b14\0\u3b60\0\u3bac\0\u3bf8"+
    "\0\u3c44\0\u3c90\0\u3cdc\0\u3d28\0\u3d74\0\u3dc0\0\u3e0c\0\u3e58"+
    "\0\u3ea4\0\u3ef0\0\u3f3c\0\u3f88\0\u3fd4\0\u4020\0\u406c\0\u40b8"+
    "\0\u4104\0\u4150\0\u419c\0\u41e8\0\u4234\0\u4280\0\u42cc\0\u4318"+
    "\0\u4364\0\u43b0\0\u43fc\0\u4448\0\u4494\0\u44e0\0\u452c\0\u1be8"+
    "\0\u4578\0\u45c4\0\u4610\0\u465c\0\u46a8\0\u46f4\0\u4740\0\u478c"+
    "\0\u47d8\0\u4824\0\u4870\0\u48bc\0\u4908\0\u4954\0\u49a0\0\u49ec"+
    "\0\u4a38\0\u4a84\0\u4ad0\0\u4b1c\0\u4b68\0\u2484\0\u4bb4\0\u4c00"+
    "\0\u4c4c\0\u4c98\0\u2270\0\u4ce4\0\u1430\0\u4d30\0\u4d7c\0\u4dc8"+
    "\0\u4e14\0\u4e60\0\u4d30\0\u4eac\0\u4ef8\0\u1514\0\u4f44\0\u4f90"+
    "\0\u4fdc\0\u5028\0\u4f90\0\u5074\0\u50c0\0\u510c\0\u5158\0\u51a4"+
    "\0\u2fcc\0\u51f0\0\u523c\0\u5288\0\u52d4\0\u2db8\0\u5320\0\u536c"+
    "\0\u53b8\0\u5404\0\u5450\0\u549c\0\u54e8\0\u53b8\0\u5534\0\u5580"+
    "\0\u55cc\0\u5618\0\u5664\0\u56b0\0\u56fc\0\u5748\0\u5794\0\u55cc"+
    "\0\u57e0\0\u582c\0\u5878\0\u58c4\0\u5910\0\u595c\0\u59a8\0\u59f4"+
    "\0\u5a40\0\u5a8c\0\u5ad8\0\u5b24\0\u5b70\0\u5bbc\0\u5c08\0\u5c54"+
    "\0\u5ca0\0\u5cec\0\u5d38\0\u5d84\0\u5dd0\0\u5e1c\0\u5e68\0\u5eb4"+
    "\0\u5f00\0\u5eb4\0\u5f4c\0\u5f98\0\u5fe4\0\u6030\0\u607c\0\u60c8"+
    "\0\u6114\0\u6160\0\u61ac\0\u61f8\0\u6244\0\u6290\0\u62dc\0\u6328"+
    "\0\u6374\0\u63c0\0\u640c\0\u6458\0\u64a4\0\u64f0\0\u653c\0\u6588"+
    "\0\u65d4\0\u6620\0\u666c\0\u66b8\0\u6704\0\u6750\0\u679c\0\u67e8"+
    "\0\u6834\0\u6880\0\u68cc\0\u6918\0\u6964\0\u69b0\0\u1d64\0\u69fc"+
    "\0\u6a48\0\u6a94\0\u6ae0\0\u6b2c\0\u6b78\0\u6bc4\0\u6c10\0\u6c5c"+
    "\0\u6ca8\0\u6cf4\0\u6d40\0\u6d8c\0\u6dd8\0\u6e24\0\u6e70\0\u6ebc"+
    "\0\u6f08\0\u6f54\0\u6fa0\0\u6fec\0\u7038\0\u7084\0\u70d0\0\u711c"+
    "\0\u7168\0\u71b4\0\u7200\0\u724c\0\u7298\0\u72e4\0\u7330\0\u737c"+
    "\0\u73c8\0\u7414\0\u7460\0\u74ac\0\u74f8\0\u7544\0\u7590\0\u75dc"+
    "\0\u7628\0\u7674\0\u76c0\0\u770c\0\u7758\0\u77a4\0\u77f0\0\u783c"+
    "\0\u7888\0\u78d4\0\u7920\0\u796c\0\u79b8\0\u7a04\0\u7a50\0\u7a9c"+
    "\0\u7ae8\0\u7b34\0\u7b80\0\u7bcc\0\u7c18\0\u7c64\0\u7cb0\0\u7cfc"+
    "\0\u7d48\0\u7d94\0\u7de0\0\u7e2c\0\u7e78\0\u7ec4\0\u7298\0\u7f10"+
    "\0\u7f5c\0\u7fa8\0\u7414\0\u7ff4\0\u8040\0\u808c\0\u80d8\0\u8124"+
    "\0\u8170\0\u81bc\0\u8208\0\u8254\0\u82a0\0\u82ec\0\u8338\0\u8384"+
    "\0\u83d0\0\u841c\0\u8468\0\u84b4\0\u8500\0\u854c\0\u8598\0\u85e4"+
    "\0\u8630\0\u867c\0\u86c8\0\u8714\0\u8760\0\u87ac\0\u87f8\0\u8844"+
    "\0\u8890\0\u88dc\0\u8928\0\u8974\0\u89c0\0\u8a0c\0\u8a58\0\u8aa4"+
    "\0\u8af0";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[545];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\10"+
    "\1\35\1\27\1\36\2\13\1\11\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61"+
    "\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71"+
    "\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101"+
    "\1\102\1\103\1\104\1\6\1\13\1\105\1\10\1\106"+
    "\1\13\1\107\1\0\11\110\1\13\44\110\1\111\35\110"+
    "\1\112\1\113\1\114\1\115\1\116\1\112\1\117\2\112"+
    "\1\120\1\112\1\121\1\122\1\123\1\124\1\125\1\126"+
    "\1\127\1\130\1\131\1\132\1\133\1\134\1\114\1\135"+
    "\1\127\1\136\2\112\1\115\1\137\2\140\1\112\1\141"+
    "\44\112\1\114\61\112\1\142\36\112\5\143\1\144\2\143"+
    "\3\144\20\143\2\144\4\143\1\144\13\143\1\144\33\143"+
    "\1\144\2\143\115\0\2\145\2\146\1\0\1\147\2\0"+
    "\1\150\1\151\1\146\1\145\1\146\1\145\1\146\4\145"+
    "\2\146\4\145\1\146\2\0\2\146\3\0\1\146\44\0"+
    "\1\145\5\0\2\145\2\146\1\0\1\147\2\0\1\150"+
    "\1\152\1\146\1\145\1\146\1\145\1\146\4\145\2\146"+
    "\4\145\1\146\2\0\2\146\3\0\1\146\44\0\1\145"+
    "\5\0\2\153\1\154\1\155\1\0\1\156\2\0\1\157"+
    "\1\160\1\154\1\153\1\154\1\153\1\154\4\153\2\154"+
    "\4\153\1\154\1\0\1\161\2\154\2\0\1\162\1\154"+
    "\44\0\1\153\5\0\2\153\2\155\1\0\1\156\2\0"+
    "\1\157\1\163\1\155\1\153\1\155\1\153\1\155\4\153"+
    "\2\155\4\153\1\155\1\0\1\161\2\155\2\0\1\162"+
    "\1\155\44\0\1\153\11\0\1\164\1\165\1\166\1\167"+
    "\1\170\1\171\20\0\1\164\1\172\54\0\1\164\5\0"+
    "\2\173\6\0\1\173\1\0\1\173\1\0\1\173\4\0"+
    "\2\173\4\0\1\173\2\0\2\173\3\0\1\173\52\0"+
    "\2\153\1\154\1\155\1\164\1\156\1\0\1\164\1\174"+
    "\1\175\1\154\1\153\1\154\1\176\1\154\4\153\2\154"+
    "\4\153\1\154\1\164\1\177\2\154\2\0\1\162\1\154"+
    "\44\0\1\153\1\0\1\164\3\0\2\145\2\146\1\164"+
    "\1\147\1\0\1\164\1\200\1\201\1\146\1\145\1\146"+
    "\1\145\1\146\3\145\1\202\2\146\4\145\1\146\1\164"+
    "\1\172\2\146\3\0\1\146\44\0\1\145\1\0\1\164"+
    "\3\0\2\153\1\154\1\155\1\0\1\156\2\0\1\157"+
    "\1\160\1\154\1\153\1\154\1\176\1\154\2\153\2\176"+
    "\2\154\4\153\1\154\1\0\1\161\2\154\2\0\1\162"+
    "\1\154\44\0\1\153\5\0\2\145\2\146\1\0\1\147"+
    "\2\0\1\150\1\152\1\146\1\145\1\146\1\145\1\146"+
    "\2\202\2\145\2\146\1\202\3\145\1\146\2\0\2\146"+
    "\3\0\1\146\44\0\1\145\5\0\2\153\1\154\1\155"+
    "\1\0\1\156\2\0\1\157\1\160\1\154\1\153\1\154"+
    "\1\153\1\154\1\176\3\153\2\154\1\176\3\153\1\154"+
    "\1\0\1\161\2\154\3\0\1\154\44\0\1\153\5\0"+
    "\2\145\2\146\1\164\1\147\1\0\1\164\1\200\1\201"+
    "\1\146\1\145\1\146\1\202\1\146\4\145\2\146\4\145"+
    "\1\146\1\164\1\172\2\146\3\0\1\146\44\0\1\145"+
    "\1\0\1\164\3\0\2\145\2\146\1\164\1\147\1\0"+
    "\1\164\1\200\1\201\1\146\1\145\1\146\1\145\1\146"+
    "\4\145\2\146\4\145\1\146\1\164\1\172\2\146\3\0"+
    "\1\146\44\0\1\145\1\0\1\164\3\0\2\145\2\146"+
    "\1\0\1\147\2\0\1\150\1\152\1\146\1\202\1\146"+
    "\1\145\1\146\4\145\2\146\2\202\2\145\1\146\2\0"+
    "\2\146\3\0\1\146\44\0\1\145\5\0\2\145\2\146"+
    "\1\0\1\147\2\0\1\150\1\152\1\146\1\145\1\146"+
    "\1\145\1\146\1\145\1\202\2\145\2\146\1\145\1\202"+
    "\2\145\1\146\2\0\2\146\3\0\1\146\44\0\1\145"+
    "\5\0\2\153\1\154\1\155\1\0\1\156\2\0\1\157"+
    "\1\160\1\154\1\153\1\154\1\153\1\154\1\153\1\176"+
    "\2\153\2\154\1\153\1\176\2\153\1\154\1\0\1\161"+
    "\2\154\2\0\1\162\1\154\44\0\1\153\5\0\2\153"+
    "\1\154\1\155\1\0\1\156\2\0\1\157\1\160\1\154"+
    "\1\176\1\154\1\153\1\154\4\153\2\154\2\176\2\153"+
    "\1\154\1\0\1\161\2\154\2\0\1\162\1\154\44\0"+
    "\1\153\5\0\2\145\2\146\1\164\1\147\1\0\1\164"+
    "\1\200\1\201\1\146\1\145\1\146\1\202\1\146\3\145"+
    "\1\202\2\146\4\145\1\146\1\164\1\172\2\146\3\0"+
    "\1\146\44\0\1\145\1\0\1\164\3\0\2\145\2\146"+
    "\1\0\1\147\2\0\1\150\1\152\1\146\1\145\1\146"+
    "\1\145\1\146\4\145\2\146\1\202\3\145\1\146\2\0"+
    "\2\146\3\0\1\146\44\0\1\145\5\0\2\153\1\154"+
    "\1\155\1\0\1\156\2\0\1\157\1\160\1\154\1\153"+
    "\1\154\1\153\1\154\3\153\1\176\2\154\4\153\1\154"+
    "\1\0\1\161\2\154\3\0\1\154\44\0\1\153\5\0"+
    "\2\41\2\203\6\0\1\203\1\41\1\203\1\41\1\203"+
    "\4\41\2\203\4\41\1\203\2\0\2\203\3\0\1\203"+
    "\41\0\1\13\2\0\1\41\5\0\2\41\2\203\6\0"+
    "\1\203\1\41\1\203\1\41\1\203\4\41\2\203\4\41"+
    "\1\203\2\0\2\203\3\0\1\203\44\0\1\41\5\0"+
    "\2\204\1\154\1\155\1\0\1\156\2\0\1\157\1\160"+
    "\1\154\1\204\1\154\1\204\1\154\4\204\2\154\4\204"+
    "\1\154\1\0\1\161\2\154\2\0\1\162\1\154\44\0"+
    "\1\204\27\0\1\13\63\0\1\205\115\0\1\106\3\0"+
    "\2\206\2\207\1\0\1\210\2\0\1\211\1\212\1\207"+
    "\1\206\1\207\1\206\1\207\4\206\2\207\4\206\1\207"+
    "\2\0\2\207\3\0\1\207\44\0\1\206\5\0\2\206"+
    "\2\207\1\0\1\210\2\0\1\211\1\213\1\207\1\206"+
    "\1\207\1\206\1\207\4\206\2\207\4\206\1\207\2\0"+
    "\2\207\3\0\1\207\44\0\1\206\5\0\2\214\1\215"+
    "\1\216\1\0\1\217\2\0\1\220\1\221\1\215\1\214"+
    "\1\215\1\214\1\215\4\214\2\215\4\214\1\215\1\0"+
    "\1\222\2\215\2\0\1\223\1\215\44\0\1\214\5\0"+
    "\2\214\2\216\1\0\1\217\2\0\1\220\1\224\1\216"+
    "\1\214\1\216\1\214\1\216\4\214\2\216\4\214\1\216"+
    "\1\0\1\222\2\216\2\0\1\223\1\216\44\0\1\214"+
    "\11\0\1\225\1\226\1\227\1\225\1\230\1\225\20\0"+
    "\1\225\1\231\54\0\1\225\5\0\2\232\6\0\1\232"+
    "\1\0\1\232\1\0\1\232\4\0\2\232\4\0\1\232"+
    "\2\0\2\232\3\0\1\232\52\0\2\214\1\215\1\216"+
    "\1\225\1\217\1\0\1\225\1\233\1\234\1\215\1\214"+
    "\1\215\1\235\1\215\4\214\2\215\4\214\1\215\1\225"+
    "\1\231\2\215\2\0\1\223\1\215\44\0\1\214\1\0"+
    "\1\225\3\0\2\206\2\207\1\225\1\210\1\0\1\225"+
    "\1\236\1\237\1\207\1\206\1\207\1\206\1\207\3\206"+
    "\1\240\2\207\4\206\1\207\1\225\1\231\2\207\3\0"+
    "\1\207\44\0\1\206\1\0\1\225\3\0\2\214\1\215"+
    "\1\216\1\0\1\217\2\0\1\220\1\221\1\215\1\214"+
    "\1\215\1\235\1\215\2\214\2\235\2\215\4\214\1\215"+
    "\1\0\1\222\2\215\2\0\1\223\1\215\44\0\1\214"+
    "\5\0\2\206\2\207\1\0\1\210\2\0\1\211\1\213"+
    "\1\207\1\206\1\207\1\206\1\207\2\240\2\206\2\207"+
    "\1\240\3\206\1\207\2\0\2\207\3\0\1\207\44\0"+
    "\1\206\5\0\2\214\1\215\1\216\1\0\1\217\2\0"+
    "\1\220\1\221\1\215\1\214\1\215\1\214\1\215\1\235"+
    "\3\214\2\215\1\235\3\214\1\215\1\0\1\222\2\215"+
    "\3\0\1\215\44\0\1\214\5\0\2\206\2\207\1\225"+
    "\1\210\1\0\1\225\1\236\1\237\1\207\1\206\1\207"+
    "\1\240\1\207\4\206\2\207\4\206\1\207\1\225\1\231"+
    "\2\207\3\0\1\207\44\0\1\206\1\0\1\225\3\0"+
    "\2\206\2\207\1\225\1\210\1\0\1\225\1\236\1\237"+
    "\1\207\1\206\1\207\1\206\1\207\4\206\2\207\4\206"+
    "\1\207\1\225\1\231\2\207\3\0\1\207\44\0\1\206"+
    "\1\0\1\225\3\0\2\206\2\207\1\0\1\210\2\0"+
    "\1\211\1\213\1\207\1\240\1\207\1\206\1\207\4\206"+
    "\2\207\2\240\2\206\1\207\2\0\2\207\3\0\1\207"+
    "\44\0\1\206\5\0\2\206\2\207\1\0\1\210\2\0"+
    "\1\211\1\213\1\207\1\206\1\207\1\206\1\207\1\206"+
    "\1\240\2\206\2\207\1\206\1\240\2\206\1\207\2\0"+
    "\2\207\3\0\1\207\44\0\1\206\5\0\2\214\1\215"+
    "\1\216\1\0\1\217\2\0\1\220\1\221\1\215\1\214"+
    "\1\215\1\214\1\215\1\214\1\235\2\214\2\215\1\214"+
    "\1\235\2\214\1\215\1\0\1\222\2\215\2\0\1\223"+
    "\1\215\44\0\1\214\5\0\2\214\1\215\1\216\1\0"+
    "\1\217\2\0\1\220\1\221\1\215\1\235\1\215\1\214"+
    "\1\215\4\214\2\215\2\235\2\214\1\215\1\0\1\222"+
    "\2\215\2\0\1\223\1\215\44\0\1\214\5\0\2\206"+
    "\2\207\1\225\1\210\1\0\1\225\1\236\1\237\1\207"+
    "\1\206\1\207\1\240\1\207\3\206\1\240\2\207\4\206"+
    "\1\207\1\225\1\231\2\207\3\0\1\207\44\0\1\206"+
    "\1\0\1\225\3\0\2\206\2\207\1\0\1\210\2\0"+
    "\1\211\1\213\1\207\1\206\1\207\1\206\1\207\4\206"+
    "\2\207\1\240\3\206\1\207\2\0\2\207\3\0\1\207"+
    "\44\0\1\206\5\0\2\214\1\215\1\216\1\0\1\217"+
    "\2\0\1\220\1\221\1\215\1\214\1\215\1\214\1\215"+
    "\3\214\1\235\2\215\4\214\1\215\1\0\1\222\2\215"+
    "\3\0\1\215\44\0\1\214\5\0\2\140\2\241\6\0"+
    "\1\241\1\140\1\241\1\140\1\241\4\140\2\241\4\140"+
    "\1\241\2\0\2\241\3\0\1\241\44\0\1\140\5\0"+
    "\2\242\1\215\1\216\1\0\1\217\2\0\1\220\1\221"+
    "\1\215\1\242\1\215\1\242\1\215\4\242\2\215\4\242"+
    "\1\215\1\0\1\222\2\215\2\0\1\223\1\215\44\0"+
    "\1\242\5\0\2\243\2\244\1\0\1\147\4\0\1\244"+
    "\1\243\1\244\1\243\1\244\4\243\2\244\4\243\1\244"+
    "\1\0\1\245\2\244\3\0\1\244\44\0\1\243\5\0"+
    "\2\147\2\246\1\0\1\147\4\0\1\246\1\147\1\246"+
    "\1\147\1\246\4\147\2\246\4\147\1\246\2\0\2\246"+
    "\3\0\1\246\44\0\1\147\42\0\1\247\56\0\2\250"+
    "\11\0\1\250\1\0\1\250\1\0\4\250\2\0\4\250"+
    "\55\0\1\250\5\0\1\250\1\251\1\252\7\0\1\252"+
    "\1\251\1\252\1\251\1\252\4\251\2\252\4\251\1\252"+
    "\2\0\2\252\3\0\1\252\44\0\1\251\5\0\2\253"+
    "\2\254\1\0\1\255\2\0\1\256\1\147\1\254\1\253"+
    "\1\254\1\253\1\254\4\253\2\254\4\253\1\254\2\0"+
    "\2\254\3\0\1\254\44\0\1\253\6\0\1\147\1\257"+
    "\1\260\1\0\1\156\2\0\1\157\1\0\1\257\1\147"+
    "\1\257\1\147\1\257\4\147\2\257\4\147\1\257\1\0"+
    "\1\161\2\257\3\0\1\257\44\0\1\147\7\0\2\260"+
    "\1\0\1\156\2\0\1\157\1\0\1\260\1\0\1\260"+
    "\1\0\1\260\4\0\2\260\4\0\1\260\1\0\1\161"+
    "\2\260\3\0\1\260\54\0\2\261\1\0\1\156\3\0"+
    "\1\262\1\261\1\0\1\261\1\0\1\261\4\0\2\261"+
    "\4\0\1\261\1\0\1\262\2\261\3\0\1\261\52\0"+
    "\2\263\2\264\1\0\1\265\4\0\1\264\1\263\1\264"+
    "\1\263\1\264\4\263\2\264\4\263\1\264\2\0\2\264"+
    "\3\0\1\264\44\0\1\263\6\0\1\252\1\266\1\267"+
    "\6\0\1\266\1\252\1\266\1\252\1\266\4\252\2\266"+
    "\4\252\1\266\2\0\2\266\3\0\1\266\44\0\1\252"+
    "\12\0\1\147\110\0\2\147\6\0\1\147\1\0\1\147"+
    "\6\0\2\147\4\0\1\147\2\0\2\147\3\0\1\147"+
    "\54\0\2\267\6\0\1\267\1\0\1\267\1\0\1\267"+
    "\4\0\2\267\4\0\1\267\2\0\2\267\3\0\1\267"+
    "\56\0\1\164\1\165\1\166\1\167\2\171\20\0\1\164"+
    "\1\172\54\0\1\164\7\0\1\164\2\0\3\164\20\0"+
    "\1\164\1\172\54\0\1\164\10\0\1\270\110\0\1\271"+
    "\2\0\1\272\4\0\1\271\1\0\1\271\1\0\1\271"+
    "\4\0\2\271\4\0\1\271\2\0\2\271\3\0\1\271"+
    "\57\0\1\272\106\0\2\273\2\274\1\0\1\275\2\0"+
    "\1\276\1\0\1\274\1\277\1\274\1\300\1\274\1\301"+
    "\1\302\1\303\1\304\2\274\1\305\1\273\1\306\1\302"+
    "\1\274\2\0\2\274\3\0\1\274\44\0\1\273\5\0"+
    "\2\307\11\0\1\307\1\0\1\307\1\0\4\307\2\0"+
    "\4\307\55\0\1\307\5\0\2\253\2\254\1\164\1\255"+
    "\1\0\1\164\1\310\1\164\1\254\1\253\1\254\1\253"+
    "\1\254\4\253\2\254\4\253\1\254\1\164\1\172\2\254"+
    "\3\0\1\254\44\0\1\253\1\0\1\164\3\0\2\273"+
    "\2\274\1\0\1\311\2\0\1\276\1\0\1\274\1\277"+
    "\1\274\1\300\1\274\1\301\1\302\1\303\1\304\2\274"+
    "\1\305\1\273\1\306\1\302\1\274\2\0\2\274\3\0"+
    "\1\274\44\0\1\273\5\0\2\243\2\244\1\164\1\147"+
    "\1\0\3\164\1\244\1\243\1\244\1\243\1\244\4\243"+
    "\2\244\4\243\1\244\1\164\1\312\2\244\3\0\1\244"+
    "\44\0\1\243\1\0\1\164\5\0\2\203\6\0\1\203"+
    "\1\0\1\203\1\0\1\203\4\0\2\203\4\0\1\203"+
    "\2\0\2\203\3\0\1\203\52\0\2\253\2\254\1\0"+
    "\1\255\2\0\1\256\1\147\1\254\1\253\1\254\1\253"+
    "\1\254\4\253\2\254\4\253\1\254\2\0\2\254\2\0"+
    "\1\313\1\254\44\0\1\253\112\0\1\314\6\0\2\315"+
    "\2\316\1\0\1\210\4\0\1\316\1\315\1\316\1\315"+
    "\1\316\4\315\2\316\4\315\1\316\1\0\1\317\2\316"+
    "\3\0\1\316\44\0\1\315\5\0\2\210\2\320\1\0"+
    "\1\210\4\0\1\320\1\210\1\320\1\210\1\320\4\210"+
    "\2\320\4\210\1\320\2\0\2\320\3\0\1\320\44\0"+
    "\1\210\42\0\1\321\56\0\2\322\11\0\1\322\1\0"+
    "\1\322\1\0\4\322\2\0\4\322\55\0\1\322\5\0"+
    "\1\322\1\323\1\324\7\0\1\324\1\323\1\324\1\323"+
    "\1\324\4\323\2\324\4\323\1\324\2\0\2\324\3\0"+
    "\1\324\44\0\1\323\5\0\2\325\2\326\1\0\1\327"+
    "\2\0\1\330\1\210\1\326\1\325\1\326\1\325\1\326"+
    "\4\325\2\326\4\325\1\326\2\0\2\326\3\0\1\326"+
    "\44\0\1\325\6\0\1\210\1\331\1\332\1\0\1\217"+
    "\2\0\1\220\1\0\1\331\1\210\1\331\1\210\1\331"+
    "\4\210\2\331\4\210\1\331\1\0\1\222\2\331\3\0"+
    "\1\331\44\0\1\210\7\0\2\332\1\0\1\217\2\0"+
    "\1\220\1\0\1\332\1\0\1\332\1\0\1\332\4\0"+
    "\2\332\4\0\1\332\1\0\1\222\2\332\3\0\1\332"+
    "\54\0\2\333\1\0\1\217\3\0\1\334\1\333\1\0"+
    "\1\333\1\0\1\333\4\0\2\333\4\0\1\333\1\0"+
    "\1\334\2\333\3\0\1\333\52\0\2\335\2\336\1\0"+
    "\1\337\4\0\1\336\1\335\1\336\1\335\1\336\4\335"+
    "\2\336\4\335\1\336\2\0\2\336\3\0\1\336\44\0"+
    "\1\335\6\0\1\324\1\340\1\341\6\0\1\340\1\324"+
    "\1\340\1\324\1\340\4\324\2\340\4\324\1\340\2\0"+
    "\2\340\3\0\1\340\44\0\1\324\12\0\1\210\110\0"+
    "\2\210\6\0\1\210\1\0\1\210\6\0\2\210\4\0"+
    "\1\210\2\0\2\210\3\0\1\210\54\0\2\341\6\0"+
    "\1\341\1\0\1\341\1\0\1\341\4\0\2\341\4\0"+
    "\1\341\2\0\2\341\3\0\1\341\52\0\2\342\2\343"+
    "\1\0\1\226\2\0\1\344\1\0\1\345\1\346\1\347"+
    "\1\350\1\351\1\352\1\353\1\354\1\355\1\356\1\357"+
    "\1\360\1\342\1\361\1\353\1\362\2\0\2\343\3\0"+
    "\1\343\44\0\1\342\11\0\1\225\1\226\1\227\3\225"+
    "\20\0\1\225\1\231\54\0\1\225\7\0\1\225\2\0"+
    "\3\225\20\0\1\225\1\231\54\0\1\225\3\0\2\342"+
    "\1\363\1\343\1\0\1\226\2\0\1\344\1\0\1\364"+
    "\1\346\1\365\1\350\1\366\1\352\1\353\1\354\1\355"+
    "\1\367\1\370\1\360\1\342\1\361\1\353\1\371\2\0"+
    "\2\363\3\0\1\363\44\0\1\342\5\0\2\372\2\342"+
    "\1\0\1\373\2\0\1\374\1\0\1\342\1\375\1\342"+
    "\1\376\1\342\1\377\1\u0100\1\u0101\1\u0102\2\342\1\u0103"+
    "\1\372\1\u0104\1\u0100\1\342\2\0\2\342\3\0\1\342"+
    "\44\0\1\372\5\0\2\u0105\11\0\1\u0105\1\0\1\u0105"+
    "\1\0\4\u0105\2\0\4\u0105\55\0\1\u0105\5\0\2\u0106"+
    "\2\u0107\1\0\1\226\2\0\1\344\1\0\1\u0108\1\u0109"+
    "\1\u010a\1\u010b\1\u010c\1\u010d\1\u010e\1\u010f\1\u0110\1\u0111"+
    "\1\u0112\1\u0113\1\u0106\1\u0114\1\u010e\1\u0115\2\0\2\u0107"+
    "\3\0\1\u0107\44\0\1\u0106\5\0\1\342\1\u0116\1\u0117"+
    "\1\u0118\1\0\1\226\2\0\1\344\1\0\1\u0119\1\u011a"+
    "\1\u011b\1\u011c\1\u011d\1\u011e\1\u011f\1\u0120\1\u0121\1\u0122"+
    "\1\u0123\1\u0124\1\u0116\1\u0125\1\u011f\1\u0126\2\0\2\u0117"+
    "\3\0\1\u0117\44\0\1\u0116\5\0\2\325\2\326\1\225"+
    "\1\327\1\0\1\225\1\u0127\1\u0128\1\326\1\325\1\326"+
    "\1\325\1\326\4\325\2\326\4\325\1\326\1\225\1\231"+
    "\2\326\3\0\1\326\44\0\1\325\1\0\1\225\3\0"+
    "\2\342\2\343\1\0\1\226\2\0\1\344\1\0\1\345"+
    "\1\346\1\347\1\350\1\351\1\352\1\353\1\354\1\355"+
    "\1\356\1\357\1\360\1\342\1\361\1\353\1\362\2\0"+
    "\1\343\1\u0129\3\0\1\343\44\0\1\342\5\0\1\u012a"+
    "\1\u012b\1\u012c\1\343\1\0\1\226\2\0\1\344\1\0"+
    "\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\1\u0132\1\u0133\1\u0134"+
    "\1\u0135\1\u0136\1\u0137\1\u0138\1\u012b\1\u0139\1\u0133\1\u013a"+
    "\2\0\2\u012c\3\0\1\u012c\44\0\1\u012b\5\0\2\315"+
    "\2\316\1\225\1\210\1\0\3\225\1\316\1\315\1\316"+
    "\1\315\1\316\4\315\2\316\4\315\1\316\1\225\1\u013b"+
    "\2\316\3\0\1\316\44\0\1\315\1\0\1\225\5\0"+
    "\2\241\6\0\1\241\1\0\1\241\1\0\1\241\4\0"+
    "\2\241\4\0\1\241\2\0\2\241\3\0\1\241\52\0"+
    "\2\325\2\326\1\0\1\327\2\0\1\330\1\210\1\326"+
    "\1\325\1\326\1\325\1\326\4\325\2\326\4\325\1\326"+
    "\2\0\2\326\2\0\1\u013c\1\326\44\0\1\325\5\0"+
    "\2\u013d\2\244\1\164\1\147\1\0\3\164\1\244\1\u013d"+
    "\1\244\1\u013d\1\244\4\u013d\2\244\4\u013d\1\244\1\164"+
    "\1\312\2\244\3\0\1\244\44\0\1\u013d\1\0\1\164"+
    "\3\0\2\263\2\246\1\0\1\147\4\0\1\246\1\263"+
    "\1\246\1\263\1\246\4\263\2\246\4\263\1\246\1\0"+
    "\1\u013e\2\246\3\0\1\246\44\0\1\263\7\0\2\u013f"+
    "\6\0\1\u013f\1\0\1\u013f\1\0\1\u013f\4\0\2\u013f"+
    "\4\0\1\u013f\2\0\2\u013f\3\0\1\u013f\54\0\2\161"+
    "\1\0\1\147\4\0\1\161\1\0\1\161\1\0\1\161"+
    "\4\0\2\161\4\0\1\161\2\0\2\161\3\0\1\161"+
    "\63\0\1\151\113\0\1\u0140\113\0\1\u0141\102\0\2\u0142"+
    "\2\u0143\1\164\2\0\1\164\1\u0144\1\164\1\u0143\1\u0142"+
    "\1\u0143\1\u0142\1\u0143\4\u0142\2\u0143\4\u0142\1\u0143\1\u0145"+
    "\1\172\2\u0143\3\0\1\u0143\44\0\1\u0142\1\0\1\164"+
    "\5\0\2\u0146\6\0\1\u0146\1\0\1\u0146\1\0\1\u0146"+
    "\4\0\2\u0146\4\0\1\u0146\2\0\2\u0146\3\0\1\u0146"+
    "\52\0\2\147\3\0\1\255\5\0\1\147\1\0\1\147"+
    "\1\0\4\147\2\0\4\147\55\0\1\147\5\0\2\263"+
    "\2\u013e\1\0\1\u0147\4\0\1\u013e\1\263\1\u013e\1\263"+
    "\1\u013e\4\263\2\u013e\4\263\1\u013e\2\0\1\u013e\1\u0148"+
    "\3\0\1\u013e\44\0\1\263\6\0\1\147\1\u0149\1\u014a"+
    "\1\0\1\147\2\0\1\157\1\0\1\u0149\1\147\1\u0149"+
    "\1\147\1\u0149\4\147\2\u0149\4\147\1\u0149\2\0\2\u0149"+
    "\3\0\1\u0149\44\0\1\147\7\0\2\u014a\1\0\1\147"+
    "\2\0\1\157\1\0\1\u014a\1\0\1\u014a\1\0\1\u014a"+
    "\4\0\2\u014a\4\0\1\u014a\2\0\2\u014a\3\0\1\u014a"+
    "\54\0\2\u014b\6\0\1\u014b\1\0\1\u014b\1\0\1\u014b"+
    "\4\0\2\u014b\4\0\1\u014b\2\0\2\u014b\3\0\1\u014b"+
    "\57\0\1\265\106\0\2\263\11\0\1\263\1\0\1\263"+
    "\1\0\4\263\2\0\4\263\55\0\1\263\7\0\2\u014c"+
    "\1\0\1\265\4\0\1\u014c\1\0\1\u014c\1\0\1\u014c"+
    "\4\0\2\u014c\4\0\1\u014c\2\0\2\u014c\3\0\1\u014c"+
    "\63\0\1\u014d\113\0\1\163\107\0\1\270\2\0\2\u014e"+
    "\104\0\1\u014f\7\0\1\u014f\1\0\1\u014f\1\0\1\u014f"+
    "\4\0\2\u014f\4\0\1\u014f\2\0\2\u014f\3\0\1\u014f"+
    "\56\0\1\164\1\272\1\0\1\u0150\1\164\1\u0150\20\0"+
    "\1\164\1\172\54\0\1\164\3\0\2\u0151\11\0\1\u0151"+
    "\1\0\1\u0151\1\0\4\u0151\2\0\4\u0151\55\0\1\u0151"+
    "\5\0\2\u0152\11\0\1\u0152\1\0\1\u0152\1\0\4\u0152"+
    "\2\0\4\u0152\55\0\1\u0152\11\0\1\164\1\275\1\166"+
    "\1\167\2\171\1\0\1\u0153\16\0\1\164\1\172\1\u0153"+
    "\53\0\1\164\3\0\2\u0154\11\0\1\u0154\1\0\1\u0154"+
    "\1\0\4\u0154\2\0\4\u0154\55\0\1\u0154\5\0\2\u0151"+
    "\2\0\1\164\2\0\3\164\1\0\1\u0151\1\0\1\u0151"+
    "\1\0\3\u0151\1\u0155\2\0\4\u0151\1\0\1\164\1\172"+
    "\52\0\1\u0151\1\0\1\164\3\0\2\u0151\11\0\1\u0151"+
    "\1\0\1\u0151\1\0\2\u0155\2\u0151\2\0\1\u0155\3\u0151"+
    "\55\0\1\u0151\5\0\2\u0151\2\0\1\164\2\0\3\164"+
    "\1\0\1\u0151\1\0\1\u0155\1\0\4\u0151\2\0\4\u0151"+
    "\1\0\1\164\1\172\52\0\1\u0151\1\0\1\164\3\0"+
    "\2\u0151\2\0\1\164\2\0\3\164\1\0\1\u0151\1\0"+
    "\1\u0151\1\0\4\u0151\2\0\4\u0151\1\0\1\164\1\172"+
    "\52\0\1\u0151\1\0\1\164\3\0\2\u0151\11\0\1\u0155"+
    "\1\0\1\u0151\1\0\4\u0151\2\0\2\u0155\2\u0151\55\0"+
    "\1\u0151\5\0\2\u0151\11\0\1\u0151\1\0\1\u0151\1\0"+
    "\1\u0151\1\u0155\2\u0151\2\0\1\u0151\1\u0155\2\u0151\55\0"+
    "\1\u0151\5\0\2\u0151\2\0\1\164\2\0\3\164\1\0"+
    "\1\u0151\1\0\1\u0155\1\0\2\u0151\2\u0155\2\0\4\u0151"+
    "\1\0\1\164\1\172\52\0\1\u0151\1\0\1\164\3\0"+
    "\2\u0151\11\0\1\u0151\1\0\1\u0151\1\0\4\u0151\2\0"+
    "\1\u0155\3\u0151\55\0\1\u0151\5\0\2\307\2\0\1\164"+
    "\2\0\1\164\1\u0145\1\164\1\0\1\307\1\0\1\307"+
    "\1\0\4\307\2\0\4\307\1\0\1\u0145\1\172\52\0"+
    "\1\307\1\0\1\164\3\0\2\273\2\u0156\1\0\1\275"+
    "\2\0\1\276\1\0\1\u0156\1\277\1\u0156\1\300\1\u0156"+
    "\1\301\1\302\1\303\1\304\2\u0156\1\305\1\273\1\306"+
    "\1\302\1\u0156\2\0\2\u0156\3\0\1\u0156\44\0\1\273"+
    "\46\0\1\u0157\74\0\1\13\71\0\2\u0158\2\316\1\225"+
    "\1\210\1\0\3\225\1\316\1\u0158\1\316\1\u0158\1\316"+
    "\4\u0158\2\316\4\u0158\1\316\1\225\1\u013b\2\316\3\0"+
    "\1\316\44\0\1\u0158\1\0\1\225\3\0\2\335\2\320"+
    "\1\0\1\210\4\0\1\320\1\335\1\320\1\335\1\320"+
    "\4\335\2\320\4\335\1\320\1\0\1\u0159\2\320\3\0"+
    "\1\320\44\0\1\335\7\0\2\u015a\6\0\1\u015a\1\0"+
    "\1\u015a\1\0\1\u015a\4\0\2\u015a\4\0\1\u015a\2\0"+
    "\2\u015a\3\0\1\u015a\54\0\2\222\1\0\1\210\4\0"+
    "\1\222\1\0\1\222\1\0\1\222\4\0\2\222\4\0"+
    "\1\222\2\0\2\222\3\0\1\222\63\0\1\212\113\0"+
    "\1\u015b\113\0\1\u015c\102\0\2\u015d\2\u015e\1\225\2\0"+
    "\1\225\1\u015f\1\225\1\u015e\1\u015d\1\u015e\1\u015d\1\u015e"+
    "\4\u015d\2\u015e\4\u015d\1\u015e\1\u0160\1\231\2\u015e\3\0"+
    "\1\u015e\44\0\1\u015d\1\0\1\225\5\0\2\u0161\6\0"+
    "\1\u0161\1\0\1\u0161\1\0\1\u0161\4\0\2\u0161\4\0"+
    "\1\u0161\2\0\2\u0161\3\0\1\u0161\52\0\2\210\3\0"+
    "\1\327\5\0\1\210\1\0\1\210\1\0\4\210\2\0"+
    "\4\210\55\0\1\210\5\0\2\335\2\u0159\1\0\1\u0162"+
    "\4\0\1\u0159\1\335\1\u0159\1\335\1\u0159\4\335\2\u0159"+
    "\4\335\1\u0159\2\0\1\u0159\1\u0163\3\0\1\u0159\44\0"+
    "\1\335\6\0\1\210\1\u0164\1\u0165\1\0\1\210\2\0"+
    "\1\220\1\0\1\u0164\1\210\1\u0164\1\210\1\u0164\4\210"+
    "\2\u0164\4\210\1\u0164\2\0\2\u0164\3\0\1\u0164\44\0"+
    "\1\210\7\0\2\u0165\1\0\1\210\2\0\1\220\1\0"+
    "\1\u0165\1\0\1\u0165\1\0\1\u0165\4\0\2\u0165\4\0"+
    "\1\u0165\2\0\2\u0165\3\0\1\u0165\54\0\2\u0166\6\0"+
    "\1\u0166\1\0\1\u0166\1\0\1\u0166\4\0\2\u0166\4\0"+
    "\1\u0166\2\0\2\u0166\3\0\1\u0166\57\0\1\337\106\0"+
    "\2\335\11\0\1\335\1\0\1\335\1\0\4\335\2\0"+
    "\4\335\55\0\1\335\7\0\2\u0167\1\0\1\337\4\0"+
    "\1\u0167\1\0\1\u0167\1\0\1\u0167\4\0\2\u0167\4\0"+
    "\1\u0167\2\0\2\u0167\3\0\1\u0167\63\0\1\u0168\113\0"+
    "\1\224\102\0\2\u0169\11\0\1\u0169\1\0\1\u0169\1\0"+
    "\4\u0169\2\0\4\u0169\55\0\1\u0169\5\0\2\232\11\0"+
    "\1\232\1\0\1\232\1\0\4\232\2\0\4\232\55\0"+
    "\1\232\5\0\2\232\2\0\1\225\2\0\3\225\1\0"+
    "\1\232\1\0\1\u016a\1\0\4\232\2\0\4\232\1\0"+
    "\1\225\1\231\52\0\1\232\1\0\1\225\3\0\2\u0169"+
    "\2\0\1\225\2\0\3\225\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\232\11\0\1\232"+
    "\1\0\1\u016a\1\0\2\232\2\u016a\2\0\4\232\55\0"+
    "\1\232\5\0\2\u0169\11\0\1\u0169\1\0\1\u0169\1\0"+
    "\2\u016b\2\u0169\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0"+
    "\2\232\11\0\1\232\1\0\1\232\1\0\1\u016a\3\232"+
    "\2\0\1\u016a\3\232\55\0\1\232\5\0\2\u0169\2\0"+
    "\1\225\2\0\3\225\1\0\1\u0169\1\0\1\u016b\1\0"+
    "\4\u0169\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169"+
    "\1\0\1\225\3\0\2\u0169\2\0\1\225\2\0\3\225"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0\4\u0169"+
    "\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0"+
    "\2\u0169\11\0\1\u016b\1\0\1\u0169\1\0\4\u0169\2\0"+
    "\2\u016b\2\u0169\55\0\1\u0169\5\0\2\u0169\11\0\1\u0169"+
    "\1\0\1\u0169\1\0\1\u0169\1\u016b\2\u0169\2\0\1\u0169"+
    "\1\u016b\2\u0169\55\0\1\u0169\5\0\2\232\11\0\1\232"+
    "\1\0\1\232\1\0\1\232\1\u016a\2\232\2\0\1\232"+
    "\1\u016a\2\232\55\0\1\232\5\0\2\232\11\0\1\u016a"+
    "\1\0\1\232\1\0\4\232\2\0\2\u016a\2\232\55\0"+
    "\1\232\5\0\2\u0169\2\0\1\225\2\0\3\225\1\0"+
    "\1\u0169\1\0\1\u016b\1\0\3\u0169\1\u016b\2\0\4\u0169"+
    "\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0"+
    "\2\u0169\11\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0"+
    "\1\u016b\3\u0169\55\0\1\u0169\5\0\2\232\11\0\1\232"+
    "\1\0\1\232\1\0\3\232\1\u016a\2\0\4\232\55\0"+
    "\1\232\5\0\2\232\1\u016c\7\0\1\u016c\1\232\1\u016c"+
    "\1\232\1\u016c\4\232\2\u016c\4\232\1\u016c\2\0\2\u016c"+
    "\3\0\1\u016c\44\0\1\232\5\0\2\232\1\u016c\1\0"+
    "\1\225\2\0\3\225\1\u016c\1\232\1\u016c\1\u016a\1\u016c"+
    "\4\232\2\u016c\4\232\1\u016c\1\225\1\231\2\u016c\3\0"+
    "\1\u016c\44\0\1\232\1\0\1\225\3\0\2\232\1\u016c"+
    "\7\0\1\u016c\1\232\1\u016c\1\u016a\1\u016c\2\232\2\u016a"+
    "\2\u016c\4\232\1\u016c\2\0\2\u016c\3\0\1\u016c\44\0"+
    "\1\232\5\0\2\232\1\u016c\7\0\1\u016c\1\232\1\u016c"+
    "\1\232\1\u016c\1\u016a\3\232\2\u016c\1\u016a\3\232\1\u016c"+
    "\2\0\2\u016c\3\0\1\u016c\44\0\1\232\5\0\2\232"+
    "\1\u016c\7\0\1\u016c\1\232\1\u016c\1\232\1\u016c\1\232"+
    "\1\u016a\2\232\2\u016c\1\232\1\u016a\2\232\1\u016c\2\0"+
    "\2\u016c\3\0\1\u016c\44\0\1\232\5\0\2\232\1\u016c"+
    "\7\0\1\u016c\1\u016a\1\u016c\1\232\1\u016c\4\232\2\u016c"+
    "\2\u016a\2\232\1\u016c\2\0\2\u016c\3\0\1\u016c\44\0"+
    "\1\232\5\0\2\232\1\u016c\7\0\1\u016c\1\232\1\u016c"+
    "\1\232\1\u016c\3\232\1\u016a\2\u016c\4\232\1\u016c\2\0"+
    "\2\u016c\3\0\1\u016c\44\0\1\232\5\0\2\u016d\11\0"+
    "\1\u016d\1\0\1\u016d\1\0\4\u016d\2\0\4\u016d\55\0"+
    "\1\u016d\11\0\1\225\1\373\1\227\3\225\1\0\1\u016e"+
    "\16\0\1\225\1\231\1\u016e\53\0\1\225\3\0\2\343"+
    "\11\0\1\343\1\0\1\343\1\0\4\343\2\0\4\343"+
    "\55\0\1\343\5\0\2\u016d\2\0\1\225\2\0\3\225"+
    "\1\0\1\u016d\1\0\1\u016d\1\0\3\u016d\1\u016f\2\0"+
    "\4\u016d\1\0\1\225\1\231\52\0\1\u016d\1\0\1\225"+
    "\3\0\2\u016d\11\0\1\u016d\1\0\1\u016d\1\0\2\u016f"+
    "\2\u016d\2\0\1\u016f\3\u016d\55\0\1\u016d\5\0\2\u016d"+
    "\2\0\1\225\2\0\3\225\1\0\1\u016d\1\0\1\u016f"+
    "\1\0\4\u016d\2\0\4\u016d\1\0\1\225\1\231\52\0"+
    "\1\u016d\1\0\1\225\3\0\2\u016d\2\0\1\225\2\0"+
    "\3\225\1\0\1\u016d\1\0\1\u016d\1\0\4\u016d\2\0"+
    "\4\u016d\1\0\1\225\1\231\52\0\1\u016d\1\0\1\225"+
    "\3\0\2\u016d\11\0\1\u016f\1\0\1\u016d\1\0\4\u016d"+
    "\2\0\2\u016f\2\u016d\55\0\1\u016d\5\0\2\u016d\11\0"+
    "\1\u016d\1\0\1\u016d\1\0\1\u016d\1\u016f\2\u016d\2\0"+
    "\1\u016d\1\u016f\2\u016d\55\0\1\u016d\5\0\2\u016d\2\0"+
    "\1\225\2\0\3\225\1\0\1\u016d\1\0\1\u016f\1\0"+
    "\2\u016d\2\u016f\2\0\4\u016d\1\0\1\225\1\231\52\0"+
    "\1\u016d\1\0\1\225\3\0\2\u016d\11\0\1\u016d\1\0"+
    "\1\u016d\1\0\4\u016d\2\0\1\u016f\3\u016d\55\0\1\u016d"+
    "\5\0\2\u0105\2\0\1\225\2\0\1\225\1\u0160\1\225"+
    "\1\0\1\u0105\1\0\1\u0105\1\0\4\u0105\2\0\4\u0105"+
    "\1\0\1\u0160\1\231\52\0\1\u0105\1\0\1\225\3\0"+
    "\2\u0170\11\0\1\u0170\1\0\1\u0170\1\0\4\u0170\2\0"+
    "\4\u0170\55\0\1\u0170\5\0\2\232\2\u0167\1\0\1\337"+
    "\4\0\1\u0167\1\232\1\u0167\1\232\1\u0167\4\232\2\u0167"+
    "\4\232\1\u0167\2\0\2\u0167\3\0\1\u0167\44\0\1\232"+
    "\5\0\2\232\2\u0167\1\225\1\337\1\0\3\225\1\u0167"+
    "\1\232\1\u0167\1\u016a\1\u0167\4\232\2\u0167\4\232\1\u0167"+
    "\1\225\1\231\2\u0167\3\0\1\u0167\44\0\1\232\1\0"+
    "\1\225\3\0\2\u0170\2\0\1\225\2\0\3\225\1\0"+
    "\1\u0170\1\0\1\u0170\1\0\3\u0170\1\u016b\2\0\4\u0170"+
    "\1\0\1\225\1\231\52\0\1\u0170\1\0\1\225\3\0"+
    "\2\232\2\u0167\1\0\1\337\4\0\1\u0167\1\232\1\u0167"+
    "\1\u016a\1\u0167\2\232\2\u016a\2\u0167\4\232\1\u0167\2\0"+
    "\2\u0167\3\0\1\u0167\44\0\1\232\5\0\2\u0170\11\0"+
    "\1\u0170\1\0\1\u0170\1\0\2\u016b\2\u0170\2\0\1\u016b"+
    "\3\u0170\55\0\1\u0170\5\0\2\232\2\u0167\1\0\1\337"+
    "\4\0\1\u0167\1\232\1\u0167\1\232\1\u0167\1\u016a\3\232"+
    "\2\u0167\1\u016a\3\232\1\u0167\2\0\2\u0167\3\0\1\u0167"+
    "\44\0\1\232\5\0\2\u0170\2\0\1\225\2\0\3\225"+
    "\1\0\1\u0170\1\0\1\u016b\1\0\4\u0170\2\0\4\u0170"+
    "\1\0\1\225\1\231\52\0\1\u0170\1\0\1\225\3\0"+
    "\2\u0170\2\0\1\225\2\0\3\225\1\0\1\u0170\1\0"+
    "\1\u0170\1\0\4\u0170\2\0\4\u0170\1\0\1\225\1\231"+
    "\52\0\1\u0170\1\0\1\225\3\0\2\u0170\11\0\1\u016b"+
    "\1\0\1\u0170\1\0\4\u0170\2\0\2\u016b\2\u0170\55\0"+
    "\1\u0170\5\0\2\u0170\11\0\1\u0170\1\0\1\u0170\1\0"+
    "\1\u0170\1\u016b\2\u0170\2\0\1\u0170\1\u016b\2\u0170\55\0"+
    "\1\u0170\5\0\2\232\2\u0167\1\0\1\337\4\0\1\u0167"+
    "\1\232\1\u0167\1\232\1\u0167\1\232\1\u016a\2\232\2\u0167"+
    "\1\232\1\u016a\2\232\1\u0167\2\0\2\u0167\3\0\1\u0167"+
    "\44\0\1\232\5\0\2\232\2\u0167\1\0\1\337\4\0"+
    "\1\u0167\1\u016a\1\u0167\1\232\1\u0167\4\232\2\u0167\2\u016a"+
    "\2\232\1\u0167\2\0\2\u0167\3\0\1\u0167\44\0\1\232"+
    "\5\0\2\u0170\2\0\1\225\2\0\3\225\1\0\1\u0170"+
    "\1\0\1\u016b\1\0\3\u0170\1\u016b\2\0\4\u0170\1\0"+
    "\1\225\1\231\52\0\1\u0170\1\0\1\225\3\0\2\u0170"+
    "\11\0\1\u0170\1\0\1\u0170\1\0\4\u0170\2\0\1\u016b"+
    "\3\u0170\55\0\1\u0170\5\0\2\232\2\u0167\1\0\1\337"+
    "\4\0\1\u0167\1\232\1\u0167\1\232\1\u0167\3\232\1\u016a"+
    "\2\u0167\4\232\1\u0167\2\0\2\u0167\3\0\1\u0167\44\0"+
    "\1\232\5\0\2\u0169\7\0\1\u015c\1\0\1\u0169\1\0"+
    "\1\u0169\1\0\4\u0169\2\0\4\u0169\55\0\1\u0169\5\0"+
    "\2\232\7\0\1\u0168\1\0\1\232\1\0\1\232\1\0"+
    "\4\232\2\0\4\232\55\0\1\232\5\0\2\232\7\0"+
    "\1\224\1\0\1\232\1\0\1\232\1\0\4\232\2\0"+
    "\4\232\55\0\1\232\5\0\2\232\2\0\1\225\2\0"+
    "\2\225\1\u0171\1\0\1\232\1\0\1\u016a\1\0\4\232"+
    "\2\0\4\232\1\0\1\225\1\231\52\0\1\232\1\0"+
    "\1\225\3\0\2\u0169\2\0\1\225\2\0\2\225\1\u0172"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\3\u0169\1\u016b\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\232\7\0\1\u0168\1\0\1\232\1\0\1\u016a"+
    "\1\0\2\232\2\u016a\2\0\4\232\55\0\1\232\5\0"+
    "\2\u0169\7\0\1\u015c\1\0\1\u0169\1\0\1\u0169\1\0"+
    "\2\u016b\2\u0169\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0"+
    "\2\232\7\0\1\u0168\1\0\1\232\1\0\1\232\1\0"+
    "\1\u016a\3\232\2\0\1\u016a\3\232\55\0\1\232\5\0"+
    "\2\u0169\2\0\1\225\2\0\2\225\1\u0172\1\0\1\u0169"+
    "\1\0\1\u016b\1\0\4\u0169\2\0\4\u0169\1\0\1\225"+
    "\1\231\52\0\1\u0169\1\0\1\225\3\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u0172\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\4\u0169\2\0\4\u0169\1\0\1\225\1\231\52\0"+
    "\1\u0169\1\0\1\225\3\0\2\u0169\7\0\1\u015c\1\0"+
    "\1\u016b\1\0\1\u0169\1\0\4\u0169\2\0\2\u016b\2\u0169"+
    "\55\0\1\u0169\5\0\2\u0169\7\0\1\u015c\1\0\1\u0169"+
    "\1\0\1\u0169\1\0\1\u0169\1\u016b\2\u0169\2\0\1\u0169"+
    "\1\u016b\2\u0169\55\0\1\u0169\5\0\2\232\7\0\1\u0168"+
    "\1\0\1\232\1\0\1\232\1\0\1\232\1\u016a\2\232"+
    "\2\0\1\232\1\u016a\2\232\55\0\1\232\5\0\2\232"+
    "\7\0\1\u0168\1\0\1\u016a\1\0\1\232\1\0\4\232"+
    "\2\0\2\u016a\2\232\55\0\1\232\5\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u0172\1\0\1\u0169\1\0\1\u016b"+
    "\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\u0169\7\0\1\u015c"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0\1\u016b"+
    "\3\u0169\55\0\1\u0169\5\0\2\232\7\0\1\u0168\1\0"+
    "\1\232\1\0\1\232\1\0\3\232\1\u016a\2\0\4\232"+
    "\55\0\1\232\5\0\2\u0106\2\u0173\1\0\1\u0174\2\0"+
    "\1\344\1\0\1\u0175\1\u0109\1\u0176\1\u010b\1\u0177\1\u010d"+
    "\1\u010e\1\u010f\1\u0110\1\u0178\1\u0179\1\u0113\1\u0106\1\u0114"+
    "\1\u010e\1\u017a\2\0\1\u0173\1\u017b\3\0\1\u0173\44\0"+
    "\1\u0106\5\0\2\232\11\0\1\232\1\0\1\232\1\0"+
    "\4\232\2\0\4\232\4\0\1\321\50\0\1\232\5\0"+
    "\2\u0169\7\0\1\212\1\0\1\u0169\1\0\1\u0169\1\0"+
    "\4\u0169\2\0\4\u0169\55\0\1\u0169\5\0\2\u0169\7\0"+
    "\1\u015b\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0"+
    "\4\u0169\55\0\1\u0169\5\0\2\232\7\0\1\u015c\1\0"+
    "\1\232\1\0\1\232\1\0\4\232\2\0\4\232\55\0"+
    "\1\232\5\0\2\232\2\0\1\225\2\0\2\225\1\u0172"+
    "\1\0\1\232\1\0\1\u016a\1\0\4\232\2\0\4\232"+
    "\1\0\1\225\1\231\52\0\1\232\1\0\1\225\3\0"+
    "\2\u0169\2\0\1\225\2\0\2\225\1\u017c\1\0\1\u0169"+
    "\1\0\1\u0169\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0"+
    "\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0\2\232"+
    "\7\0\1\u015c\1\0\1\232\1\0\1\u016a\1\0\2\232"+
    "\2\u016a\2\0\4\232\55\0\1\232\5\0\2\u0169\7\0"+
    "\1\u015b\1\0\1\u0169\1\0\1\u0169\1\0\2\u016b\2\u0169"+
    "\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0\2\232\7\0"+
    "\1\u015c\1\0\1\232\1\0\1\232\1\0\1\u016a\3\232"+
    "\2\0\1\u016a\3\232\55\0\1\232\5\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u017c\1\0\1\u0169\1\0\1\u016b"+
    "\1\0\4\u0169\2\0\4\u0169\1\0\1\225\1\231\52\0"+
    "\1\u0169\1\0\1\225\3\0\2\u0169\2\0\1\225\2\0"+
    "\2\225\1\u017c\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169"+
    "\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0"+
    "\1\225\3\0\2\u0169\7\0\1\u015b\1\0\1\u016b\1\0"+
    "\1\u0169\1\0\4\u0169\2\0\2\u016b\2\u0169\55\0\1\u0169"+
    "\5\0\2\u0169\7\0\1\u015b\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\1\u0169\1\u016b\2\u0169\2\0\1\u0169\1\u016b\2\u0169"+
    "\55\0\1\u0169\5\0\2\232\7\0\1\u015c\1\0\1\232"+
    "\1\0\1\232\1\0\1\232\1\u016a\2\232\2\0\1\232"+
    "\1\u016a\2\232\55\0\1\232\5\0\2\232\7\0\1\u015c"+
    "\1\0\1\u016a\1\0\1\232\1\0\4\232\2\0\2\u016a"+
    "\2\232\55\0\1\232\5\0\2\u0169\2\0\1\225\2\0"+
    "\2\225\1\u017c\1\0\1\u0169\1\0\1\u016b\1\0\3\u0169"+
    "\1\u016b\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169"+
    "\1\0\1\225\3\0\2\u0169\7\0\1\u015b\1\0\1\u0169"+
    "\1\0\1\u0169\1\0\4\u0169\2\0\1\u016b\3\u0169\55\0"+
    "\1\u0169\5\0\2\232\7\0\1\u015c\1\0\1\232\1\0"+
    "\1\232\1\0\3\232\1\u016a\2\0\4\232\55\0\1\232"+
    "\5\0\2\372\2\u017d\1\0\1\373\2\0\1\374\1\0"+
    "\1\u017d\1\375\1\u017d\1\376\1\u017d\1\377\1\u0100\1\u0101"+
    "\1\u0102\2\u017d\1\u0103\1\372\1\u0104\1\u0100\1\u017d\2\0"+
    "\2\u017d\3\0\1\u017d\44\0\1\372\46\0\1\u017e\52\0"+
    "\2\u017f\2\244\1\164\1\147\1\0\3\164\1\244\1\u017f"+
    "\1\244\1\u017f\1\244\4\u017f\2\244\4\u017f\1\244\1\164"+
    "\1\312\2\244\3\0\1\244\44\0\1\u017f\1\0\1\164"+
    "\3\0\2\263\11\0\1\263\1\0\1\263\1\0\4\263"+
    "\2\0\4\263\2\0\1\u013e\52\0\1\263\5\0\1\250"+
    "\1\u0180\1\u0181\7\0\1\u0181\1\u0180\1\u0181\1\u0180\1\u0181"+
    "\4\u0180\2\u0181\4\u0180\1\u0181\2\0\2\u0181\3\0\1\u0181"+
    "\44\0\1\u0180\6\0\2\u0181\7\0\20\u0181\2\0\2\u0181"+
    "\3\0\1\u0181\44\0\1\u0181\5\0\2\u0142\2\0\1\164"+
    "\2\0\1\164\1\u0144\1\164\1\0\1\u0142\1\0\1\u0142"+
    "\1\0\4\u0142\2\0\4\u0142\1\0\1\u0145\1\172\52\0"+
    "\1\u0142\1\0\1\164\3\0\2\263\2\u013e\1\164\1\u0147"+
    "\1\0\3\164\1\u013e\1\263\1\u013e\1\263\1\u013e\4\263"+
    "\2\u013e\4\263\1\u013e\1\164\1\172\2\u013e\3\0\1\u013e"+
    "\44\0\1\263\1\0\1\164\5\0\2\147\6\0\1\147"+
    "\1\0\1\147\1\0\1\147\4\0\2\147\4\0\1\147"+
    "\2\0\2\147\3\0\1\147\57\0\1\u0147\2\0\1\u013e"+
    "\103\0\2\263\11\0\1\263\1\0\1\263\1\0\4\263"+
    "\2\0\4\263\4\0\1\247\50\0\1\263\6\0\1\147"+
    "\1\u0182\1\261\4\0\1\157\1\0\1\u0182\1\147\1\u0182"+
    "\1\147\1\u0182\4\147\2\u0182\4\147\1\u0182\2\0\2\u0182"+
    "\3\0\1\u0182\44\0\1\147\7\0\2\261\4\0\1\157"+
    "\1\0\1\261\1\0\1\261\1\0\1\261\4\0\2\261"+
    "\4\0\1\261\2\0\2\261\3\0\1\261\54\0\2\u0183"+
    "\1\0\1\265\4\0\1\u0183\1\0\1\u0183\1\0\1\u0183"+
    "\4\0\2\u0183\4\0\1\u0183\2\0\2\u0183\3\0\1\u0183"+
    "\53\0\1\u0181\1\u0184\1\267\6\0\1\u0184\1\u0181\1\u0184"+
    "\1\u0181\1\u0184\4\u0181\2\u0184\4\u0181\1\u0184\2\0\2\u0184"+
    "\3\0\1\u0184\44\0\1\u0181\7\0\1\u0185\7\0\1\u0185"+
    "\1\0\1\u0185\1\0\1\u0185\4\0\2\u0185\4\0\1\u0185"+
    "\2\0\2\u0185\3\0\1\u0185\57\0\1\u0186\106\0\2\u0187"+
    "\6\0\1\u0188\2\0\1\u0187\1\0\1\u0187\1\0\4\u0187"+
    "\2\0\4\u0187\1\0\1\u0188\53\0\1\u0187\5\0\2\u0189"+
    "\11\0\1\u0189\1\0\1\u0189\1\0\4\u0189\2\0\4\u0189"+
    "\55\0\1\u0189\5\0\2\173\11\0\1\173\1\0\1\173"+
    "\1\0\4\173\2\0\4\173\55\0\1\173\5\0\2\u0187"+
    "\2\0\1\164\2\0\1\164\1\u018a\1\164\1\0\1\u0187"+
    "\1\0\1\u0187\1\0\4\u0187\2\0\4\u0187\1\0\1\u018a"+
    "\1\172\52\0\1\u0187\1\0\1\164\3\0\2\u018b\11\0"+
    "\1\u018b\1\0\1\u018b\1\0\4\u018b\2\0\4\u018b\2\0"+
    "\1\u013e\52\0\1\u018b\5\0\2\147\11\0\1\147\1\0"+
    "\1\147\1\0\4\147\2\0\4\147\55\0\1\147\5\0"+
    "\2\u018c\2\316\1\225\1\210\1\0\3\225\1\316\1\u018c"+
    "\1\316\1\u018c\1\316\4\u018c\2\316\4\u018c\1\316\1\225"+
    "\1\u013b\2\316\3\0\1\316\44\0\1\u018c\1\0\1\225"+
    "\3\0\2\335\11\0\1\335\1\0\1\335\1\0\4\335"+
    "\2\0\4\335\2\0\1\u0159\52\0\1\335\5\0\1\322"+
    "\1\u018d\1\u018e\7\0\1\u018e\1\u018d\1\u018e\1\u018d\1\u018e"+
    "\4\u018d\2\u018e\4\u018d\1\u018e\2\0\2\u018e\3\0\1\u018e"+
    "\44\0\1\u018d\6\0\2\u018e\7\0\20\u018e\2\0\2\u018e"+
    "\3\0\1\u018e\44\0\1\u018e\5\0\2\u015d\2\0\1\225"+
    "\2\0\1\225\1\u015f\1\225\1\0\1\u015d\1\0\1\u015d"+
    "\1\0\4\u015d\2\0\4\u015d\1\0\1\u0160\1\231\52\0"+
    "\1\u015d\1\0\1\225\3\0\2\u0106\2\u0173\1\225\1\u0174"+
    "\1\0\1\225\1\u018f\1\225\1\u0175\1\u0109\1\u0176\1\u010b"+
    "\1\u0177\1\u010d\1\u010e\1\u010f\1\u0110\1\u0178\1\u0179\1\u0113"+
    "\1\u0106\1\u0114\1\u010e\1\u017a\1\225\1\231\2\u0173\3\0"+
    "\1\u0173\44\0\1\u0106\1\0\1\225\3\0\2\342\2\343"+
    "\1\225\1\226\1\0\1\225\1\u018f\1\225\1\345\1\346"+
    "\1\347\1\350\1\351\1\352\1\353\1\354\1\355\1\356"+
    "\1\357\1\360\1\342\1\361\1\353\1\362\1\225\1\231"+
    "\2\343\3\0\1\343\44\0\1\342\1\0\1\225\5\0"+
    "\2\210\6\0\1\210\1\0\1\210\1\0\1\210\4\0"+
    "\2\210\4\0\1\210\2\0\2\210\3\0\1\210\57\0"+
    "\1\u0162\2\0\1\u0159\103\0\2\335\11\0\1\335\1\0"+
    "\1\335\1\0\4\335\2\0\4\335\4\0\1\321\50\0"+
    "\1\335\6\0\1\210\1\u0190\1\333\4\0\1\220\1\0"+
    "\1\u0190\1\210\1\u0190\1\210\1\u0190\4\210\2\u0190\4\210"+
    "\1\u0190\2\0\2\u0190\3\0\1\u0190\44\0\1\210\7\0"+
    "\2\333\4\0\1\220\1\0\1\333\1\0\1\333\1\0"+
    "\1\333\4\0\2\333\4\0\1\333\2\0\2\333\3\0"+
    "\1\333\54\0\2\u0191\1\0\1\337\4\0\1\u0191\1\0"+
    "\1\u0191\1\0\1\u0191\4\0\2\u0191\4\0\1\u0191\2\0"+
    "\2\u0191\3\0\1\u0191\53\0\1\u018e\1\u0192\1\341\6\0"+
    "\1\u0192\1\u018e\1\u0192\1\u018e\1\u0192\4\u018e\2\u0192\4\u018e"+
    "\1\u0192\2\0\2\u0192\3\0\1\u0192\44\0\1\u018e\5\0"+
    "\2\u016b\11\0\1\u016b\1\0\1\u016b\1\0\4\u016b\2\0"+
    "\4\u016b\55\0\1\u016b\5\0\2\u0105\2\0\1\225\2\0"+
    "\3\225\1\0\1\u0105\1\0\1\u0105\1\0\4\u0105\2\0"+
    "\4\u0105\1\0\1\225\1\231\52\0\1\u0105\1\0\1\225"+
    "\3\0\2\u016b\2\0\1\225\2\0\3\225\1\0\1\u016b"+
    "\1\0\1\u016b\1\0\4\u016b\2\0\4\u016b\1\0\1\225"+
    "\1\231\52\0\1\u016b\1\0\1\225\5\0\1\u0193\7\0"+
    "\1\u0193\1\0\1\u0193\1\0\1\u0193\4\0\2\u0193\4\0"+
    "\1\u0193\2\0\2\u0193\3\0\1\u0193\52\0\2\u0194\6\0"+
    "\1\u0195\2\0\1\u0194\1\0\1\u0194\1\0\4\u0194\2\0"+
    "\4\u0194\1\0\1\u0195\53\0\1\u0194\12\0\1\u0196\106\0"+
    "\2\u0194\2\0\1\225\2\0\1\225\1\u0197\1\225\1\0"+
    "\1\u0194\1\0\1\u0194\1\0\4\u0194\2\0\4\u0194\1\0"+
    "\1\u0197\1\231\52\0\1\u0194\1\0\1\225\3\0\1\342"+
    "\1\u0198\1\u0199\1\u0118\1\0\1\226\2\0\1\344\1\0"+
    "\1\u019a\1\u019b\1\u019c\1\u019d\1\u019e\1\u019f\1\u01a0\1\u01a1"+
    "\1\u01a2\1\u01a3\1\u01a4\1\u01a5\1\u0198\1\u01a6\1\u01a0\1\u01a7"+
    "\2\0\2\u0199\3\0\1\u0199\44\0\1\u0198\5\0\1\342"+
    "\1\u0198\1\u01a8\1\343\1\0\1\226\2\0\1\344\1\0"+
    "\1\u01a9\1\u019b\1\u01aa\1\u019d\1\u01ab\1\u019f\1\u01a0\1\u01a1"+
    "\1\u01a2\1\u01ac\1\u01ad\1\u01a5\1\u0198\1\u01a6\1\u01a0\1\u01ae"+
    "\2\0\2\u01a8\3\0\1\u01a8\44\0\1\u0198\5\0\2\u01af"+
    "\11\0\1\u01af\1\0\1\u01af\1\0\4\u01af\2\0\4\u01af"+
    "\55\0\1\u01af\11\0\1\225\1\u0174\1\227\1\225\1\u01b0"+
    "\1\225\20\0\1\225\1\231\54\0\1\225\3\0\2\u01af"+
    "\2\0\1\225\2\0\3\225\1\0\1\u01af\1\0\1\u016a"+
    "\1\0\4\u01af\2\0\4\u01af\1\0\1\225\1\231\52\0"+
    "\1\u01af\1\0\1\225\3\0\2\u01af\11\0\1\u01af\1\0"+
    "\1\u016a\1\0\2\u01af\2\u016a\2\0\4\u01af\55\0\1\u01af"+
    "\5\0\2\u01af\11\0\1\u01af\1\0\1\u01af\1\0\1\u016a"+
    "\3\u01af\2\0\1\u016a\3\u01af\55\0\1\u01af\5\0\2\u01af"+
    "\11\0\1\u01af\1\0\1\u01af\1\0\1\u01af\1\u016a\2\u01af"+
    "\2\0\1\u01af\1\u016a\2\u01af\55\0\1\u01af\5\0\2\u01af"+
    "\11\0\1\u016a\1\0\1\u01af\1\0\4\u01af\2\0\2\u016a"+
    "\2\u01af\55\0\1\u01af\5\0\2\u01af\11\0\1\u01af\1\0"+
    "\1\u01af\1\0\3\u01af\1\u016a\2\0\4\u01af\55\0\1\u01af"+
    "\5\0\2\u01af\11\0\1\u01af\1\0\1\u01af\1\0\4\u01af"+
    "\2\0\4\u01af\4\0\1\321\50\0\1\u01af\5\0\1\u012a"+
    "\1\u01b1\1\u01a8\1\343\1\0\1\226\2\0\1\344\1\0"+
    "\1\u01a9\1\u01b2\1\u01aa\1\u01b3\1\u01ab\1\u01b4\1\u01b5\1\u01b6"+
    "\1\u01b7\1\u01ac\1\u01ad\1\u01b8\1\u01b1\1\u01b9\1\u01b5\1\u01ae"+
    "\2\0\2\u01a8\3\0\1\u01a8\44\0\1\u01b1\5\0\2\u0170"+
    "\11\0\1\u0170\1\0\1\u0170\1\0\4\u0170\2\0\4\u0170"+
    "\2\0\1\u0159\52\0\1\u0170\5\0\2\210\11\0\1\210"+
    "\1\0\1\210\1\0\4\210\2\0\4\210\55\0\1\210"+
    "\5\0\2\u017f\2\u013f\1\164\2\0\3\164\1\u013f\1\u017f"+
    "\1\u013f\1\u017f\1\u013f\4\u017f\2\u013f\4\u017f\1\u013f\1\164"+
    "\1\312\2\u013f\3\0\1\u013f\44\0\1\u017f\1\0\1\164"+
    "\14\0\1\u01ba\113\0\1\u01bb\103\0\1\147\1\u01bc\1\u014b"+
    "\6\0\1\u01bc\1\147\1\u01bc\1\147\1\u01bc\4\147\2\u01bc"+
    "\4\147\1\u01bc\2\0\2\u01bc\3\0\1\u01bc\44\0\1\147"+
    "\7\0\2\265\1\0\1\265\4\0\1\265\1\0\1\265"+
    "\1\0\1\265\4\0\2\265\4\0\1\265\2\0\2\265"+
    "\3\0\1\265\63\0\1\u01bd\104\0\1\147\7\0\1\147"+
    "\1\0\1\147\1\0\1\147\4\0\2\147\4\0\1\147"+
    "\2\0\2\147\3\0\1\147\56\0\1\164\1\u0186\1\0"+
    "\3\164\20\0\1\164\1\172\54\0\1\164\3\0\2\u0187"+
    "\2\0\1\164\2\0\1\164\1\u01be\1\164\1\0\1\u0187"+
    "\1\0\1\u0187\1\0\4\u0187\2\0\4\u0187\1\0\1\u01be"+
    "\1\172\52\0\1\u0187\1\0\1\164\3\0\2\u01bf\11\0"+
    "\1\u01bf\1\0\1\u01bf\1\0\4\u01bf\2\0\4\u01bf\55\0"+
    "\1\u01bf\5\0\2\u0189\2\0\1\164\2\0\3\164\1\0"+
    "\1\u0189\1\0\1\u0189\1\0\4\u0189\2\0\4\u0189\1\0"+
    "\1\164\1\172\52\0\1\u0189\1\0\1\164\3\0\2\u01c0"+
    "\11\0\1\u01c0\1\0\1\u01c0\1\0\4\u01c0\2\0\4\u01c0"+
    "\55\0\1\u01c0\5\0\2\u018c\2\u015a\1\225\2\0\3\225"+
    "\1\u015a\1\u018c\1\u015a\1\u018c\1\u015a\4\u018c\2\u015a\4\u018c"+
    "\1\u015a\1\225\1\u013b\2\u015a\3\0\1\u015a\44\0\1\u018c"+
    "\1\0\1\225\14\0\1\u01c1\113\0\1\u01c2\102\0\2\342"+
    "\2\232\1\0\1\226\2\0\1\344\1\0\1\u016a\1\346"+
    "\1\232\1\350\1\232\1\352\1\353\1\354\1\355\2\232"+
    "\1\360\1\342\1\361\1\353\1\232\2\0\2\232\3\0"+
    "\1\232\44\0\1\342\6\0\1\210\1\u01c3\1\u0166\6\0"+
    "\1\u01c3\1\210\1\u01c3\1\210\1\u01c3\4\210\2\u01c3\4\210"+
    "\1\u01c3\2\0\2\u01c3\3\0\1\u01c3\44\0\1\210\7\0"+
    "\2\337\1\0\1\337\4\0\1\337\1\0\1\337\1\0"+
    "\1\337\4\0\2\337\4\0\1\337\2\0\2\337\3\0"+
    "\1\337\63\0\1\u01c4\104\0\1\210\7\0\1\210\1\0"+
    "\1\210\1\0\1\210\4\0\2\210\4\0\1\210\2\0"+
    "\2\210\3\0\1\210\52\0\2\u0194\2\0\1\225\2\0"+
    "\1\225\1\u01c5\1\225\1\0\1\u0194\1\0\1\u0194\1\0"+
    "\4\u0194\2\0\4\u0194\1\0\1\u01c5\1\231\52\0\1\u0194"+
    "\1\0\1\225\3\0\2\u01c6\11\0\1\u01c6\1\0\1\u01c6"+
    "\1\0\4\u01c6\2\0\4\u01c6\55\0\1\u01c6\11\0\1\225"+
    "\1\u0196\1\0\3\225\20\0\1\225\1\231\54\0\1\225"+
    "\3\0\2\u01c6\2\343\1\0\1\226\2\0\1\344\1\0"+
    "\1\345\1\u01c7\1\347\1\u01c6\1\351\2\u01c7\2\u01c6\1\356"+
    "\1\357\1\u01c7\2\u01c6\1\u01c7\1\362\2\0\2\343\3\0"+
    "\1\343\44\0\1\u01c6\5\0\2\u0169\7\0\1\u01c2\1\0"+
    "\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0\4\u0169\55\0"+
    "\1\u0169\5\0\2\232\7\0\1\u01c4\1\0\1\232\1\0"+
    "\1\232\1\0\4\232\2\0\4\232\55\0\1\232\5\0"+
    "\2\232\2\0\1\225\2\0\2\225\1\u01c8\1\0\1\232"+
    "\1\0\1\u016a\1\0\4\232\2\0\4\232\1\0\1\225"+
    "\1\231\52\0\1\232\1\0\1\225\3\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u01c9\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\232\7\0\1\u01c4"+
    "\1\0\1\232\1\0\1\u016a\1\0\2\232\2\u016a\2\0"+
    "\4\232\55\0\1\232\5\0\2\u0169\7\0\1\u01c2\1\0"+
    "\1\u0169\1\0\1\u0169\1\0\2\u016b\2\u0169\2\0\1\u016b"+
    "\3\u0169\55\0\1\u0169\5\0\2\232\7\0\1\u01c4\1\0"+
    "\1\232\1\0\1\232\1\0\1\u016a\3\232\2\0\1\u016a"+
    "\3\232\55\0\1\232\5\0\2\u0169\2\0\1\225\2\0"+
    "\2\225\1\u01c9\1\0\1\u0169\1\0\1\u016b\1\0\4\u0169"+
    "\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0"+
    "\1\225\3\0\2\u0169\2\0\1\225\2\0\2\225\1\u01c9"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0\4\u0169"+
    "\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0"+
    "\2\u0169\7\0\1\u01c2\1\0\1\u016b\1\0\1\u0169\1\0"+
    "\4\u0169\2\0\2\u016b\2\u0169\55\0\1\u0169\5\0\2\u0169"+
    "\7\0\1\u01c2\1\0\1\u0169\1\0\1\u0169\1\0\1\u0169"+
    "\1\u016b\2\u0169\2\0\1\u0169\1\u016b\2\u0169\55\0\1\u0169"+
    "\5\0\2\232\7\0\1\u01c4\1\0\1\232\1\0\1\232"+
    "\1\0\1\232\1\u016a\2\232\2\0\1\232\1\u016a\2\232"+
    "\55\0\1\232\5\0\2\232\7\0\1\u01c4\1\0\1\u016a"+
    "\1\0\1\232\1\0\4\232\2\0\2\u016a\2\232\55\0"+
    "\1\232\5\0\2\u0169\2\0\1\225\2\0\2\225\1\u01c9"+
    "\1\0\1\u0169\1\0\1\u016b\1\0\3\u0169\1\u016b\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\u0169\7\0\1\u01c2\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\4\u0169\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0"+
    "\2\232\7\0\1\u01c4\1\0\1\232\1\0\1\232\1\0"+
    "\3\232\1\u016a\2\0\4\232\55\0\1\232\5\0\2\232"+
    "\7\0\1\u01c2\1\0\1\232\1\0\1\232\1\0\4\232"+
    "\2\0\4\232\55\0\1\232\5\0\2\232\2\0\1\225"+
    "\2\0\2\225\1\u01c9\1\0\1\232\1\0\1\u016a\1\0"+
    "\4\232\2\0\4\232\1\0\1\225\1\231\52\0\1\232"+
    "\1\0\1\225\3\0\2\232\7\0\1\u01c2\1\0\1\232"+
    "\1\0\1\u016a\1\0\2\232\2\u016a\2\0\4\232\55\0"+
    "\1\232\5\0\2\232\7\0\1\u01c2\1\0\1\232\1\0"+
    "\1\232\1\0\1\u016a\3\232\2\0\1\u016a\3\232\55\0"+
    "\1\232\5\0\2\232\7\0\1\u01c2\1\0\1\232\1\0"+
    "\1\232\1\0\1\232\1\u016a\2\232\2\0\1\232\1\u016a"+
    "\2\232\55\0\1\232\5\0\2\232\7\0\1\u01c2\1\0"+
    "\1\u016a\1\0\1\232\1\0\4\232\2\0\2\u016a\2\232"+
    "\55\0\1\232\5\0\2\232\7\0\1\u01c2\1\0\1\232"+
    "\1\0\1\232\1\0\3\232\1\u016a\2\0\4\232\55\0"+
    "\1\232\5\0\2\u0106\2\343\1\0\1\226\2\0\1\344"+
    "\1\0\1\345\1\u0109\1\347\1\u010b\1\351\1\u010d\1\u010e"+
    "\1\u010f\1\u0110\1\356\1\357\1\u0113\1\u0106\1\u0114\1\u010e"+
    "\1\362\2\0\2\343\3\0\1\343\44\0\1\u0106\5\0"+
    "\2\u0169\7\0\1\u01c1\1\0\1\u0169\1\0\1\u0169\1\0"+
    "\4\u0169\2\0\4\u0169\55\0\1\u0169\5\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u01ca\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\u0169\7\0\1\u01c1"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\2\u016b\2\u0169\2\0"+
    "\1\u016b\3\u0169\55\0\1\u0169\5\0\2\u0169\2\0\1\225"+
    "\2\0\2\225\1\u01ca\1\0\1\u0169\1\0\1\u016b\1\0"+
    "\4\u0169\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169"+
    "\1\0\1\225\3\0\2\u0169\2\0\1\225\2\0\2\225"+
    "\1\u01ca\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\u0169\7\0\1\u01c1\1\0\1\u016b\1\0\1\u0169"+
    "\1\0\4\u0169\2\0\2\u016b\2\u0169\55\0\1\u0169\5\0"+
    "\2\u0169\7\0\1\u01c1\1\0\1\u0169\1\0\1\u0169\1\0"+
    "\1\u0169\1\u016b\2\u0169\2\0\1\u0169\1\u016b\2\u0169\55\0"+
    "\1\u0169\5\0\2\u0169\2\0\1\225\2\0\2\225\1\u01ca"+
    "\1\0\1\u0169\1\0\1\u016b\1\0\3\u0169\1\u016b\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\u0169\7\0\1\u01c1\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\4\u0169\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0"+
    "\1\250\1\u01cb\1\u01cc\7\0\1\u01cc\1\u01cb\1\u01cc\1\u01cb"+
    "\1\u01cc\4\u01cb\2\u01cc\4\u01cb\1\u01cc\2\0\2\u01cc\3\0"+
    "\1\u01cc\44\0\1\u01cb\6\0\2\u01cc\7\0\20\u01cc\2\0"+
    "\2\u01cc\3\0\1\u01cc\44\0\1\u01cc\6\0\1\147\1\u01cd"+
    "\1\147\6\0\1\u01cd\1\147\1\u01cd\1\147\1\u01cd\4\147"+
    "\2\u01cd\4\147\1\u01cd\2\0\2\u01cd\3\0\1\u01cd\44\0"+
    "\1\147\6\0\1\u01cc\1\u01ce\1\267\6\0\1\u01ce\1\u01cc"+
    "\1\u01ce\1\u01cc\1\u01ce\4\u01cc\2\u01ce\4\u01cc\1\u01ce\2\0"+
    "\2\u01ce\3\0\1\u01ce\44\0\1\u01cc\5\0\2\u01bf\2\0"+
    "\1\164\2\0\3\164\1\0\1\u01bf\1\0\1\u01bf\1\0"+
    "\4\u01bf\2\0\4\u01bf\1\0\1\164\1\172\52\0\1\u01bf"+
    "\1\0\1\164\3\0\2\u01cf\11\0\1\u01cf\1\0\1\u01cf"+
    "\1\0\4\u01cf\2\0\4\u01cf\55\0\1\u01cf\5\0\2\u01c0"+
    "\2\0\1\164\2\0\3\164\1\0\1\u01c0\1\0\1\u01c0"+
    "\1\0\4\u01c0\2\0\4\u01c0\1\0\1\164\1\172\52\0"+
    "\1\u01c0\1\0\1\164\3\0\1\322\1\u01d0\1\u01d1\7\0"+
    "\1\u01d1\1\u01d0\1\u01d1\1\u01d0\1\u01d1\4\u01d0\2\u01d1\4\u01d0"+
    "\1\u01d1\2\0\2\u01d1\3\0\1\u01d1\44\0\1\u01d0\6\0"+
    "\2\u01d1\7\0\20\u01d1\2\0\2\u01d1\3\0\1\u01d1\44\0"+
    "\1\u01d1\6\0\1\210\1\u01d2\1\210\6\0\1\u01d2\1\210"+
    "\1\u01d2\1\210\1\u01d2\4\210\2\u01d2\4\210\1\u01d2\2\0"+
    "\2\u01d2\3\0\1\u01d2\44\0\1\210\6\0\1\u01d1\1\u01d3"+
    "\1\341\6\0\1\u01d3\1\u01d1\1\u01d3\1\u01d1\1\u01d3\4\u01d1"+
    "\2\u01d3\4\u01d1\1\u01d3\2\0\2\u01d3\3\0\1\u01d3\44\0"+
    "\1\u01d1\5\0\2\u01c6\2\343\1\225\1\226\1\0\1\225"+
    "\1\u018f\1\225\1\345\1\u01c7\1\347\1\u01c6\1\351\2\u01c7"+
    "\2\u01c6\1\356\1\357\1\u01c7\2\u01c6\1\u01c7\1\362\1\225"+
    "\1\231\2\343\3\0\1\343\44\0\1\u01c6\1\0\1\225"+
    "\3\0\2\u01d4\11\0\1\u01d4\1\0\1\u01d4\1\0\4\u01d4"+
    "\2\0\4\u01d4\55\0\1\u01d4\5\0\2\u01d4\2\0\1\225"+
    "\2\0\3\225\1\0\1\u01d4\1\0\1\u01d4\1\0\4\u01d4"+
    "\2\0\4\u01d4\1\0\1\225\1\231\52\0\1\u01d4\1\0"+
    "\1\225\3\0\1\342\1\u01d5\1\u01d6\1\u0118\1\0\1\226"+
    "\2\0\1\344\1\0\1\u01d7\1\u01d8\1\u01d9\1\u01da\1\u01db"+
    "\1\u01dc\1\u01dd\1\u01de\1\u01df\1\u01e0\1\u01e1\1\u01e2\1\u01d5"+
    "\1\u01e3\1\u01dd\1\u01e4\2\0\2\u01d6\3\0\1\u01d6\44\0"+
    "\1\u01d5\5\0\1\342\1\u01d5\1\u01e5\1\343\1\0\1\226"+
    "\2\0\1\344\1\0\1\u01e6\1\u01d8\1\u01e7\1\u01da\1\u01e8"+
    "\1\u01dc\1\u01dd\1\u01de\1\u01df\1\u01e9\1\u01ea\1\u01e2\1\u01d5"+
    "\1\u01e3\1\u01dd\1\u01eb\2\0\2\u01e5\3\0\1\u01e5\44\0"+
    "\1\u01d5\5\0\1\u012a\1\u01ec\1\u01e5\1\343\1\0\1\226"+
    "\2\0\1\344\1\0\1\u01e6\1\u01ed\1\u01e7\1\u01ee\1\u01e8"+
    "\1\u01ef\1\u01f0\1\u01f1\1\u01f2\1\u01e9\1\u01ea\1\u01f3\1\u01ec"+
    "\1\u01f4\1\u01f0\1\u01eb\2\0\2\u01e5\3\0\1\u01e5\44\0"+
    "\1\u01ec\16\0\1\u01f5\113\0\1\u01f6\103\0\1\147\1\u01f7"+
    "\7\0\1\u01f7\1\147\1\u01f7\1\147\1\u01f7\4\147\2\u01f7"+
    "\4\147\1\u01f7\2\0\2\u01f7\3\0\1\u01f7\44\0\1\147"+
    "\16\0\1\u01f8\102\0\2\u01cf\2\0\1\164\2\0\1\164"+
    "\1\u018a\1\164\1\0\1\u01cf\1\0\1\u01cf\1\0\4\u01cf"+
    "\2\0\4\u01cf\1\0\1\u018a\1\172\52\0\1\u01cf\1\0"+
    "\1\164\14\0\1\u01f9\113\0\1\u01fa\103\0\1\210\1\u01fb"+
    "\7\0\1\u01fb\1\210\1\u01fb\1\210\1\u01fb\4\210\2\u01fb"+
    "\4\210\1\u01fb\2\0\2\u01fb\3\0\1\u01fb\44\0\1\210"+
    "\16\0\1\u01fc\102\0\2\u01d4\2\0\1\225\2\0\1\225"+
    "\1\u0197\1\225\1\0\1\u01d4\1\0\1\u01d4\1\0\4\u01d4"+
    "\2\0\4\u01d4\1\0\1\u0197\1\231\52\0\1\u01d4\1\0"+
    "\1\225\3\0\2\u0169\7\0\1\u01fa\1\0\1\u0169\1\0"+
    "\1\u0169\1\0\4\u0169\2\0\4\u0169\55\0\1\u0169\5\0"+
    "\2\232\7\0\1\u01fc\1\0\1\232\1\0\1\232\1\0"+
    "\4\232\2\0\4\232\55\0\1\232\5\0\2\232\2\0"+
    "\1\225\2\0\2\225\1\u01fd\1\0\1\232\1\0\1\u016a"+
    "\1\0\4\232\2\0\4\232\1\0\1\225\1\231\52\0"+
    "\1\232\1\0\1\225\3\0\2\u0169\2\0\1\225\2\0"+
    "\2\225\1\u01fe\1\0\1\u0169\1\0\1\u0169\1\0\3\u0169"+
    "\1\u016b\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169"+
    "\1\0\1\225\3\0\2\232\7\0\1\u01fc\1\0\1\232"+
    "\1\0\1\u016a\1\0\2\232\2\u016a\2\0\4\232\55\0"+
    "\1\232\5\0\2\u0169\7\0\1\u01fa\1\0\1\u0169\1\0"+
    "\1\u0169\1\0\2\u016b\2\u0169\2\0\1\u016b\3\u0169\55\0"+
    "\1\u0169\5\0\2\232\7\0\1\u01fc\1\0\1\232\1\0"+
    "\1\232\1\0\1\u016a\3\232\2\0\1\u016a\3\232\55\0"+
    "\1\232\5\0\2\u0169\2\0\1\225\2\0\2\225\1\u01fe"+
    "\1\0\1\u0169\1\0\1\u016b\1\0\4\u0169\2\0\4\u0169"+
    "\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0"+
    "\2\u0169\2\0\1\225\2\0\2\225\1\u01fe\1\0\1\u0169"+
    "\1\0\1\u0169\1\0\4\u0169\2\0\4\u0169\1\0\1\225"+
    "\1\231\52\0\1\u0169\1\0\1\225\3\0\2\u0169\7\0"+
    "\1\u01fa\1\0\1\u016b\1\0\1\u0169\1\0\4\u0169\2\0"+
    "\2\u016b\2\u0169\55\0\1\u0169\5\0\2\u0169\7\0\1\u01fa"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\1\u0169\1\u016b\2\u0169"+
    "\2\0\1\u0169\1\u016b\2\u0169\55\0\1\u0169\5\0\2\232"+
    "\7\0\1\u01fc\1\0\1\232\1\0\1\232\1\0\1\232"+
    "\1\u016a\2\232\2\0\1\232\1\u016a\2\232\55\0\1\232"+
    "\5\0\2\232\7\0\1\u01fc\1\0\1\u016a\1\0\1\232"+
    "\1\0\4\232\2\0\2\u016a\2\232\55\0\1\232\5\0"+
    "\2\u0169\2\0\1\225\2\0\2\225\1\u01fe\1\0\1\u0169"+
    "\1\0\1\u016b\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0"+
    "\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0\2\u0169"+
    "\7\0\1\u01fa\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169"+
    "\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0\2\232\7\0"+
    "\1\u01fc\1\0\1\232\1\0\1\232\1\0\3\232\1\u016a"+
    "\2\0\4\232\55\0\1\232\5\0\2\232\7\0\1\u01fa"+
    "\1\0\1\232\1\0\1\232\1\0\4\232\2\0\4\232"+
    "\55\0\1\232\5\0\2\232\2\0\1\225\2\0\2\225"+
    "\1\u01fe\1\0\1\232\1\0\1\u016a\1\0\4\232\2\0"+
    "\4\232\1\0\1\225\1\231\52\0\1\232\1\0\1\225"+
    "\3\0\2\232\7\0\1\u01fa\1\0\1\232\1\0\1\u016a"+
    "\1\0\2\232\2\u016a\2\0\4\232\55\0\1\232\5\0"+
    "\2\232\7\0\1\u01fa\1\0\1\232\1\0\1\232\1\0"+
    "\1\u016a\3\232\2\0\1\u016a\3\232\55\0\1\232\5\0"+
    "\2\232\7\0\1\u01fa\1\0\1\232\1\0\1\232\1\0"+
    "\1\232\1\u016a\2\232\2\0\1\232\1\u016a\2\232\55\0"+
    "\1\232\5\0\2\232\7\0\1\u01fa\1\0\1\u016a\1\0"+
    "\1\232\1\0\4\232\2\0\2\u016a\2\232\55\0\1\232"+
    "\5\0\2\232\7\0\1\u01fa\1\0\1\232\1\0\1\232"+
    "\1\0\3\232\1\u016a\2\0\4\232\55\0\1\232\5\0"+
    "\2\u0169\7\0\1\u01f9\1\0\1\u0169\1\0\1\u0169\1\0"+
    "\4\u0169\2\0\4\u0169\55\0\1\u0169\5\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u01ff\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\u0169\7\0\1\u01f9"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\2\u016b\2\u0169\2\0"+
    "\1\u016b\3\u0169\55\0\1\u0169\5\0\2\u0169\2\0\1\225"+
    "\2\0\2\225\1\u01ff\1\0\1\u0169\1\0\1\u016b\1\0"+
    "\4\u0169\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169"+
    "\1\0\1\225\3\0\2\u0169\2\0\1\225\2\0\2\225"+
    "\1\u01ff\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\u0169\7\0\1\u01f9\1\0\1\u016b\1\0\1\u0169"+
    "\1\0\4\u0169\2\0\2\u016b\2\u0169\55\0\1\u0169\5\0"+
    "\2\u0169\7\0\1\u01f9\1\0\1\u0169\1\0\1\u0169\1\0"+
    "\1\u0169\1\u016b\2\u0169\2\0\1\u0169\1\u016b\2\u0169\55\0"+
    "\1\u0169\5\0\2\u0169\2\0\1\225\2\0\2\225\1\u01ff"+
    "\1\0\1\u0169\1\0\1\u016b\1\0\3\u0169\1\u016b\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\u0169\7\0\1\u01f9\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\4\u0169\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0"+
    "\2\250\1\u0200\7\0\1\u0200\1\250\1\u0200\1\250\1\u0200"+
    "\4\250\2\u0200\4\250\1\u0200\2\0\2\u0200\3\0\1\u0200"+
    "\44\0\1\250\6\0\2\u0200\7\0\20\u0200\2\0\2\u0200"+
    "\3\0\1\u0200\44\0\1\u0200\6\0\1\u0200\2\267\6\0"+
    "\1\267\1\u0200\1\267\1\u0200\1\267\4\u0200\2\267\4\u0200"+
    "\1\267\2\0\2\267\3\0\1\267\44\0\1\u0200\5\0"+
    "\2\322\1\u0201\7\0\1\u0201\1\322\1\u0201\1\322\1\u0201"+
    "\4\322\2\u0201\4\322\1\u0201\2\0\2\u0201\3\0\1\u0201"+
    "\44\0\1\322\6\0\2\u0201\7\0\20\u0201\2\0\2\u0201"+
    "\3\0\1\u0201\44\0\1\u0201\6\0\1\u0201\2\341\6\0"+
    "\1\341\1\u0201\1\341\1\u0201\1\341\4\u0201\2\341\4\u0201"+
    "\1\341\2\0\2\341\3\0\1\341\44\0\1\u0201\5\0"+
    "\1\342\1\u0202\2\u0118\1\0\1\226\2\0\1\344\1\0"+
    "\1\u0203\1\u0204\1\u0205\1\u0206\1\u0207\1\u0208\1\u0209\1\u020a"+
    "\1\u020b\1\u020c\1\u020d\1\u020e\1\u0202\1\u020f\1\u0209\1\u0210"+
    "\2\0\2\u0118\3\0\1\u0118\44\0\1\u0202\5\0\1\342"+
    "\1\u0202\1\u0211\1\343\1\0\1\226\2\0\1\344\1\0"+
    "\1\u0212\1\u0204\1\u0213\1\u0206\1\u0214\1\u0208\1\u0209\1\u020a"+
    "\1\u020b\1\u0215\1\u0216\1\u020e\1\u0202\1\u020f\1\u0209\1\u0217"+
    "\2\0\2\u0211\3\0\1\u0211\44\0\1\u0202\5\0\2\u012a"+
    "\1\u0211\1\343\1\0\1\226\2\0\1\344\1\0\1\u0212"+
    "\1\u0218\1\u0213\1\u0219\1\u0214\1\u021a\1\u021b\1\u021c\1\u021d"+
    "\1\u0215\1\u0216\1\u021e\1\u012a\1\u021f\1\u021b\1\u0217\2\0"+
    "\2\u0211\3\0\1\u0211\44\0\1\u012a\16\0\1\147\113\0"+
    "\1\210\102\0\2\u0169\7\0\1\210\1\0\1\u0169\1\0"+
    "\1\u0169\1\0\4\u0169\2\0\4\u0169\55\0\1\u0169\5\0"+
    "\2\232\2\0\1\225\2\0\2\225\1\u0220\1\0\1\232"+
    "\1\0\1\u016a\1\0\4\232\2\0\4\232\1\0\1\225"+
    "\1\231\52\0\1\232\1\0\1\225\3\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u0128\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\232\7\0\1\224"+
    "\1\0\1\232\1\0\1\u016a\1\0\2\232\2\u016a\2\0"+
    "\4\232\55\0\1\232\5\0\2\u0169\7\0\1\210\1\0"+
    "\1\u0169\1\0\1\u0169\1\0\2\u016b\2\u0169\2\0\1\u016b"+
    "\3\u0169\55\0\1\u0169\5\0\2\232\7\0\1\224\1\0"+
    "\1\232\1\0\1\232\1\0\1\u016a\3\232\2\0\1\u016a"+
    "\3\232\55\0\1\232\5\0\2\u0169\2\0\1\225\2\0"+
    "\2\225\1\u0128\1\0\1\u0169\1\0\1\u016b\1\0\4\u0169"+
    "\2\0\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0"+
    "\1\225\3\0\2\u0169\2\0\1\225\2\0\2\225\1\u0128"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0\4\u0169"+
    "\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0"+
    "\2\u0169\7\0\1\210\1\0\1\u016b\1\0\1\u0169\1\0"+
    "\4\u0169\2\0\2\u016b\2\u0169\55\0\1\u0169\5\0\2\u0169"+
    "\7\0\1\210\1\0\1\u0169\1\0\1\u0169\1\0\1\u0169"+
    "\1\u016b\2\u0169\2\0\1\u0169\1\u016b\2\u0169\55\0\1\u0169"+
    "\5\0\2\232\7\0\1\224\1\0\1\232\1\0\1\232"+
    "\1\0\1\232\1\u016a\2\232\2\0\1\232\1\u016a\2\232"+
    "\55\0\1\232\5\0\2\232\7\0\1\224\1\0\1\u016a"+
    "\1\0\1\232\1\0\4\232\2\0\2\u016a\2\232\55\0"+
    "\1\232\5\0\2\u0169\2\0\1\225\2\0\2\225\1\u0128"+
    "\1\0\1\u0169\1\0\1\u016b\1\0\3\u0169\1\u016b\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\u0169\7\0\1\210\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\4\u0169\2\0\1\u016b\3\u0169\55\0\1\u0169\5\0"+
    "\2\232\7\0\1\224\1\0\1\232\1\0\1\232\1\0"+
    "\3\232\1\u016a\2\0\4\232\55\0\1\232\5\0\2\232"+
    "\7\0\1\210\1\0\1\232\1\0\1\232\1\0\4\232"+
    "\2\0\4\232\55\0\1\232\5\0\2\232\2\0\1\225"+
    "\2\0\2\225\1\u0128\1\0\1\232\1\0\1\u016a\1\0"+
    "\4\232\2\0\4\232\1\0\1\225\1\231\52\0\1\232"+
    "\1\0\1\225\3\0\2\232\7\0\1\210\1\0\1\232"+
    "\1\0\1\u016a\1\0\2\232\2\u016a\2\0\4\232\55\0"+
    "\1\232\5\0\2\232\7\0\1\210\1\0\1\232\1\0"+
    "\1\232\1\0\1\u016a\3\232\2\0\1\u016a\3\232\55\0"+
    "\1\232\5\0\2\232\7\0\1\210\1\0\1\232\1\0"+
    "\1\232\1\0\1\232\1\u016a\2\232\2\0\1\232\1\u016a"+
    "\2\232\55\0\1\232\5\0\2\232\7\0\1\210\1\0"+
    "\1\u016a\1\0\1\232\1\0\4\232\2\0\2\u016a\2\232"+
    "\55\0\1\232\5\0\2\232\7\0\1\210\1\0\1\232"+
    "\1\0\1\232\1\0\3\232\1\u016a\2\0\4\232\55\0"+
    "\1\232\5\0\2\u0169\2\0\1\225\2\0\2\225\1\u0221"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\3\u0169\1\u016b\2\0"+
    "\4\u0169\1\0\1\225\1\231\52\0\1\u0169\1\0\1\225"+
    "\3\0\2\u0169\7\0\1\212\1\0\1\u0169\1\0\1\u0169"+
    "\1\0\2\u016b\2\u0169\2\0\1\u016b\3\u0169\55\0\1\u0169"+
    "\5\0\2\u0169\2\0\1\225\2\0\2\225\1\u0221\1\0"+
    "\1\u0169\1\0\1\u016b\1\0\4\u0169\2\0\4\u0169\1\0"+
    "\1\225\1\231\52\0\1\u0169\1\0\1\225\3\0\2\u0169"+
    "\2\0\1\225\2\0\2\225\1\u0221\1\0\1\u0169\1\0"+
    "\1\u0169\1\0\4\u0169\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\u0169\7\0\1\212"+
    "\1\0\1\u016b\1\0\1\u0169\1\0\4\u0169\2\0\2\u016b"+
    "\2\u0169\55\0\1\u0169\5\0\2\u0169\7\0\1\212\1\0"+
    "\1\u0169\1\0\1\u0169\1\0\1\u0169\1\u016b\2\u0169\2\0"+
    "\1\u0169\1\u016b\2\u0169\55\0\1\u0169\5\0\2\u0169\2\0"+
    "\1\225\2\0\2\225\1\u0221\1\0\1\u0169\1\0\1\u016b"+
    "\1\0\3\u0169\1\u016b\2\0\4\u0169\1\0\1\225\1\231"+
    "\52\0\1\u0169\1\0\1\225\3\0\2\u0169\7\0\1\212"+
    "\1\0\1\u0169\1\0\1\u0169\1\0\4\u0169\2\0\1\u016b"+
    "\3\u0169\55\0\1\u0169\5\0\2\342\2\u0118\1\0\1\226"+
    "\2\0\1\344\1\0\1\u0203\1\346\1\u0205\1\350\1\u0207"+
    "\1\352\1\353\1\354\1\355\1\u020c\1\u020d\1\360\1\342"+
    "\1\361\1\353\1\u0210\2\0\2\u0118\3\0\1\u0118\44\0"+
    "\1\342\5\0\2\u012a\2\343\1\0\1\226\2\0\1\344"+
    "\1\0\1\345\1\u0218\1\347\1\u0219\1\351\1\u021a\1\u021b"+
    "\1\u021c\1\u021d\1\356\1\357\1\u021e\1\u012a\1\u021f\1\u021b"+
    "\1\362\2\0\2\343\3\0\1\343\44\0\1\u012a\4\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[35644];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\5\0\1\11\4\1\1\11\1\1\2\11\1\1\1\11"+
    "\21\1\1\11\1\1\41\11\1\1\1\11\1\1\3\11"+
    "\27\1\3\11\2\1\1\11\1\0\6\1\1\0\1\1"+
    "\2\0\1\1\1\11\2\0\4\1\1\0\11\1\1\0"+
    "\2\1\1\11\1\0\6\1\1\0\1\1\2\0\1\1"+
    "\1\0\2\1\4\0\2\1\1\0\6\1\2\0\1\1"+
    "\4\0\2\1\1\0\3\1\1\0\3\1\22\0\3\1"+
    "\2\0\2\1\2\0\1\1\3\0\3\1\1\0\3\1"+
    "\1\0\3\1\5\0\2\1\3\0\2\1\4\0\1\1"+
    "\3\0\1\1\6\0\1\1\1\0\1\1\1\0\2\1"+
    "\2\0\1\1\1\0\21\1\3\0\2\1\3\0\2\1"+
    "\4\0\1\1\3\0\2\1\3\0\2\1\3\0\2\1"+
    "\4\0\1\1\4\0\1\1\1\0\3\1\2\0\2\1"+
    "\2\0\6\1\1\0\2\1\5\0\1\1\1\0\1\1"+
    "\1\0\4\1\1\0\2\1\2\0\6\1\1\0\3\1"+
    "\2\0\4\1\1\0\2\1\5\0\3\1\4\0\1\1"+
    "\2\0\1\1\4\0\3\1\3\0\1\1\2\0\2\1"+
    "\1\0\1\1\3\0\2\1\3\0\2\1\4\0\1\1"+
    "\3\0\1\1\5\0\1\1\2\0\1\1\1\0\2\1"+
    "\2\0\1\1\1\0\5\1\1\0\6\1\1\0\4\1"+
    "\2\0\1\1\4\0\1\1\1\0\1\1\2\0\2\1"+
    "\3\0\2\1\4\0\1\1\3\0\1\1\6\0\1\1"+
    "\1\0\2\1\2\0\1\1\1\0\2\1\1\0\3\1"+
    "\1\0\4\1\3\0\2\1\3\0\2\1\4\0\1\1"+
    "\3\0\1\1\5\0\1\1\1\0\2\1\2\0\1\1"+
    "\1\0\2\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[545];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	StringBuffer aux = new StringBuffer();
     	int auxLinea = 0;
     	int auxColumna = 0;
	String varAux="";
	String posibleLF="";
	Acronimo acronimo;
	
	//FormaLarga f=new FormaLarga();
	
	int offset=0;
	//FormaLargaWithAc acWLfacWLf=new FormaLargaWithAc ();
	


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public AnalizadorLexico(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 338) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
              {
                offset=offset+yytext().length(); return new Symbol(sym.EOF);
              }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { offset=offset+yytext().length();System.err.println("Error lexico: caracter no reconocido <" + yytext() + "> en la linea " + (yyline+1) 
	+ " y columna " + (yycolumn +1));
            } 
            // fall through
          case 53: break;
          case 2: 
            { offset=offset+yytext().length();
				acronimo= new Acronimo(offset-yytext().length(),offset,yytext());
				yybegin(estado4);
            } 
            // fall through
          case 54: break;
          case 3: 
            { offset=offset+yytext().length();
            } 
            // fall through
          case 55: break;
          case 4: 
            { //NUMERO
				offset=offset+yytext().length();
            } 
            // fall through
          case 56: break;
          case 5: 
            { //porcentaje
				offset=offset+yytext().length();
            } 
            // fall through
          case 57: break;
          case 6: 
            { //Coma
				offset=offset+yytext().length();
            } 
            // fall through
          case 58: break;
          case 7: 
            { //barra -
				offset=offset+yytext().length();
            } 
            // fall through
          case 59: break;
          case 8: 
            { //Punto
				offset=offset+yytext().length();
            } 
            // fall through
          case 60: break;
          case 9: 
            { //Barra / 
				offset=offset+yytext().length();
            } 
            // fall through
          case 61: break;
          case 10: 
            { //Alpha
		offset=offset+yytext().length();
            } 
            // fall through
          case 62: break;
          case 11: 
            { //mas menos
		offset=offset+yytext().length();
            } 
            // fall through
          case 63: break;
          case 12: 
            { //gamma
		offset=offset+yytext().length();
            } 
            // fall through
          case 64: break;
          case 13: 
            { //a con anillo encima 
		offset=offset+yytext().length();
            } 
            // fall through
          case 65: break;
          case 14: 
            { //tm
		offset=offset+yytext().length();
            } 
            // fall through
          case 66: break;
          case 15: 
            { //guion largo 
		offset=offset+yytext().length();
            } 
            // fall through
          case 67: break;
          case 16: 
            { //Bala
		offset=offset+yytext().length();
            } 
            // fall through
          case 68: break;
          case 17: 
            { //a minuscula dieresis
		offset=offset+yytext().length();
            } 
            // fall through
          case 69: break;
          case 18: 
            { //Beta
		offset=offset+yytext().length();
            } 
            // fall through
          case 70: break;
          case 19: 
            { //Espacio de no separacion
		offset=offset+yytext().length();
            } 
            // fall through
          case 71: break;
          case 20: 
            { //Si detecta frases explicatorias entre parentesis
				offset=offset+yytext().length();
            } 
            // fall through
          case 72: break;
          case 21: 
            { //Si hay acronimos en una frase no detectara el parentesis, pues al principio estaba en el estado 1
				yypushback(yytext().length());
				yybegin(estado1);
            } 
            // fall through
          case 73: break;
          case 22: 
            { //Corchete derecho { 
				offset=offset+yytext().length();
            } 
            // fall through
          case 74: break;
          case 23: 
            { //fraccion 1 medio 
				offset=offset+yytext().length();
            } 
            // fall through
          case 75: break;
          case 24: 
            { //Aspa multiplicacion
				offset=offset+yytext().length();
            } 
            // fall through
          case 76: break;
          case 25: 
            { //Corchete izq } 
				offset=offset+yytext().length();
            } 
            // fall through
          case 77: break;
          case 26: 
            { //comillas latinas cierre
				offset=offset+yytext().length();
            } 
            // fall through
          case 78: break;
          case 27: 
            { //comillas latinas apertura
				offset=offset+yytext().length();
            } 
            // fall through
          case 79: break;
          case 28: 
            { //comilla simple
				offset=offset+yytext().length();
            } 
            // fall through
          case 80: break;
          case 29: 
            { //asterisco
				offset=offset+yytext().length();
            } 
            // fall through
          case 81: break;
          case 30: 
            { //Corchetes 
				offset=offset+yytext().length();
            } 
            // fall through
          case 82: break;
          case 31: 
            { //minúscula S aguda 
				offset=offset+yytext().length();
            } 
            // fall through
          case 83: break;
          case 32: 
            { //Punto centrado
				offset=offset+yytext().length();
            } 
            // fall through
          case 84: break;
          case 33: 
            { //Simbolo menor que
				offset=offset+yytext().length();
            } 
            // fall through
          case 85: break;
          case 34: 
            { //a sufijo
				offset=offset+yytext().length();
            } 
            // fall through
          case 86: break;
          case 35: 
            { //Simbolo mayor que
				offset=offset+yytext().length();
            } 
            // fall through
          case 87: break;
          case 36: 
            { //Simbolo registro
				offset=offset+yytext().length();
            } 
            // fall through
          case 88: break;
          case 37: 
            { //Simbolo grados
				offset=offset+yytext().length();
            } 
            // fall through
          case 89: break;
          case 38: 
            { //Simbolo ordinal
				offset=offset+yytext().length();
            } 
            // fall through
          case 90: break;
          case 39: 
            { //Simbolo igual
				offset=offset+yytext().length();
            } 
            // fall through
          case 91: break;
          case 40: 
            { //Ampersan 
				offset=offset+yytext().length();
            } 
            // fall through
          case 92: break;
          case 41: 
            { //Comilla "
				offset=offset+yytext().length();
            } 
            // fall through
          case 93: break;
          case 42: 
            { //Sumatorio	
				offset=offset+yytext().length();
            } 
            // fall through
          case 94: break;
          case 43: 
            { offset=offset+yytext().length(); posibleLF="";
            } 
            // fall through
          case 95: break;
          case 44: 
            { String b=yytext();
			if(b!=null){
				yypushback(b.length());
			}
			yybegin(YYINITIAL);
            } 
            // fall through
          case 96: break;
          case 45: 
            { offset=offset+yytext().length();yybegin(estado2);
            } 
            // fall through
          case 97: break;
          case 46: 
            { if(yytext()!=null){
			yypushback(yytext().length());
			}
			yybegin(YYINITIAL);
            } 
            // fall through
          case 98: break;
          case 47: 
            { offset=offset+yytext().length();
			acronimo= new Acronimo(offset-yytext().length(),offset,yytext());			
			yybegin(estado3);
            } 
            // fall through
          case 99: break;
          case 48: 
            { posibleLF=yytext(); offset=offset+posibleLF.length();return new Symbol(sym.frase,posibleLF);
            } 
            // fall through
          case 100: break;
          case 49: 
            { offset=offset+yytext().length();
				yybegin(YYINITIAL);		
				//Cuidado si le paso el objeto en el sintactico lo usa como puntero y solo se guarda la ultima ocurrencia. Por ello new Object
				return new Symbol(sym.acWithContext,yyline +1, yycolumn +1,new AcWithContext(new Acronimo(acronimo.getStartOffset(),acronimo.getEndOffset(),acronimo.getAcronimo()),posibleLF));
            } 
            // fall through
          case 101: break;
          case 50: 
            { if(yytext()!=null){
					yypushback(yytext().length());
				}
				yybegin(YYINITIAL);
            } 
            // fall through
          case 102: break;
          case 51: 
            { offset=offset+yytext().length();
			yybegin(YYINITIAL);
			return new Symbol(sym.acWithContext,yyline +1, yycolumn +1,new AcWithContext(new Acronimo(acronimo.getStartOffset(),acronimo.getEndOffset(),acronimo.getAcronimo()),posibleLF));
            } 
            // fall through
          case 103: break;
          case 52: 
            { posibleLF=yytext();				
				offset=offset+posibleLF.length();
				yybegin(estado1);				
				return new Symbol(sym.frase,posibleLF);
            } 
            // fall through
          case 104: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
