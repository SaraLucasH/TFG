package Analizadores;
import java_cup.runtime.*;
import java_cup.runtime.Symbol;
import java.util.LinkedList;
import java.util.ArrayList;

parser code {:
Resultado resultado= new Resultado();

public void syntax_error (Symbol s){
	System.err.println("Error de sintaxis (lexema <" + 	s.value.toString() + ">) en la linea " + s.left + " 	y en la columna " + s.right);
	System.err.println("Error recuperado");
}

public void unrecovered_syntax_error(Symbol s){
	System.err.println("Error de sintaxis no 			recuperable");
}
:};
//------> Codigo parentesis_abierto las acciones semanticas, asocidado a las distintas producciones gramticales
action code
{::}


//Zona de declaraciones

terminal String acronimo,formaLarga,parentesisAbierto,parentesisCerrado;
non terminal String INICIO;
non terminal String RES;


//Reglas semanticas

	//Por el arbol sintactico le asigna el valor de la variable (a traves de result) a la cabeza de la regla o simbolo no terminal asociado.
INICIO::= RES:res {:System.out.println(resultado.toString()); 
		RESULT=res;:};
RES ::= formaLarga:lf parentesisAbierto acronimo:ac parentesisCerrado RES{:resultado.addDupla(ac,lf); RESULT=lf+" "+ac;:}
	|formaLarga:lf parentesisAbierto acronimo:ac parentesisCerrado {:resultado.addDupla(ac,lf); RESULT=lf+" "+ac;:}
	|acronimo:ac RES{: 	
		resultado.addDupla(ac,null);
		RESULT=ac;:}
	|acronimo:ac {:resultado.addDupla(ac,null);RESULT=ac;:};

	
	